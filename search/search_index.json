{
    "docs": [
        {
            "location": "/README/", 
            "text": "Welcome to \nDAOstack Arc\n Docs!\n\n\nArc\n is the base layer of the \nDAO stack\n. It consists of a collection of smart contracts deployed on the Ethereum blockchain that define the basic building blocks and standard components that can be used to implement any DAO.\n\n\nArc\n is built from the ground up with these principles in mind:\n\n\n\n\n\n\nScalable Decentralized Governance\n - \nArc\n implements game theoretic \n economic techniques (such as: monetization of attention, staking on proposal results, and more...) that ensure high:\n\n\n\n\nresilience\n - resistance to a disproportionate decision power in the hands of minorities.\n\n\nbandwidth\n - decision making rate of the organization.\n\n\n\n\neven as the number of the participants gets very large.\n\n\n\n\n\n\nSecurity\n - \nArc\n is community audited and embodies the best security guidelines and is very well tested.\n\n\n\n\nInteroperability \n Compositionality\n - \nArc\n can integrate with any other ethereum based framework with ease. Organizations can interact with each other and form hierarchies and other complex structures.\n\n\nModularity\n - \nArc\n is built in a modular way allowing anyone to extend and expand the ecosystem to support new use-cases.\n\n\nGeneral purpose\n - \nArc\n provides a single unified simple model for building any DAO imaginable.\n\n\n\n\nFor more information \nread the official DAOstack Whitepaper\n.\n\n\nCheck out:\n\n\n\n\nThe \nContract docs\n for explanation about each contract and the source tree.\n\n\nThe \nGenerated docs\n for detailed technical reference on every contract.\n\n\n\n\nAn overview of the DAO stack\n\n\nArc\n is only a part of a larger tech stack built for decentralized governance at scale, which is collectively called the DAOstack. It is important to note the other projects in this stack and how \nArc\n fits into this larger whole:\n\n\n\n\n\n\nEthereum\n - \nBase blockchain.\n\n\nArc\n - This project.\n\n\nArc.js\n - A \nJavaScript library that interfaces with \nArc\n, built on top of web3.js.\n\n\nCollaborative DApps, built on top of DAOstack using \nArc.js\n. eg. \nVanille\n \n \nAlchemy\n\n\n\n\nFor more information regarding the entire DAOstack project, check out the \ndocs repository\n.\n\n\nThe Structure of a DAO\n\n\nEach DAO is a living entity on the blockchain that can own and manage resources. As such, it consists of the following \u201corgans\u201d:\n\n\n\n\n\n\nNative token\n - \nA Standard \nERC20 token\n that defines the value system of the DAO. Participants are rewarded for their contributions based on this token\n.\n\n\nReputation\n system\n - \nSimilar to native token but is \nnon-transferable\n. The reputation system is used to assign weight the votes of participants\n.\n\n\nAvatar\n - \nThis is the public-facing part of the DAO that handles the interaction of the DAO with the rest of the world(eg. interacing with other DAOs, paying third party participants, etc...)\n.\n\n\nSubscribed \nElements\n - \nThe set of \nSchemes\n and \nGlobal Constraints\n that comprise the DAO\n.\n\n\n\n\nFor each DAO, the above components are organized in a single smart contract called a \nController\n, which acts as the owner of those components.\n\n\nElements\n\n\nThe main configurable and extendable building blocks of DAOs are:\n\nSchemes\n and \nGlobal Constraints\n, which are collectively called \nelements\n.\n\n\n\n\nSchemes\n \ndefine the \"dos\" of the DAO, the rules under which actions are taken, based on the participants' input.\n Examples of Schemes are:\n\n\nRewarding contributions when other participants recognize them as worthy.\n\n\nVoting on proposals and automatically executing the chosen proposal.\n\n\n\n\n\n\nGlobal constraints\n \ndefine the \"don'ts\" of the DAO, the conditions that must always hold and can prevent an action from being taken if it violates these conditions.\n Examples of Global Constraints are:\n\n\nLimiting the amount of tokens or reputation that can be minted per day.\n\n\nBlacklisting certain participants from performing certain actions.\n\n\n\n\n\n\n\n\nContributing to Arc Docs\n\n\nSame as \nCONTIBUTING\n, with the following additions:\n\n\n\n\nMake sure your pages are registered in the \nmkdocs.yml\n file under \npages\n.\n\n\n\n\nCommands:\n\n\n\n\nnpm run docs:update\n - generate documentation to \ndocs/generated_docs\n.\n\n\n(*) \nnpm run docs:build\n - update \n build website to \nsite/\n.\n\n\n(*) \nnpm run docs:preview\n - preview website locally.\n\n\n(*) \nnpm run docs:deploy\n - deploy website to \ngh-pages\n branch so it becomes live.\n\n\n\n\n\n\n\n\nCheck for broken links by using \nnpm run docs:preview\n and checking for warnings.\n\n\n\n\nPlease use a spell checker in your IDE to avoid spelling errors.\n\n\nIn case of missing or incorrect documentation please open an issue with the label \ndocumentation\n, indicating the file, line number and any extra details.\n\n\n\n\n(*) - The command requires \nmkdocs\n \n \nmkdocs-material\n, run \npip install --user mkdocs mkdocs-material\n.", 
            "title": "Home"
        }, 
        {
            "location": "/README/#an-overview-of-the-dao-stack", 
            "text": "Arc  is only a part of a larger tech stack built for decentralized governance at scale, which is collectively called the DAOstack. It is important to note the other projects in this stack and how  Arc  fits into this larger whole:    Ethereum  -  Base blockchain.  Arc  - This project.  Arc.js  - A  JavaScript library that interfaces with  Arc , built on top of web3.js.  Collaborative DApps, built on top of DAOstack using  Arc.js . eg.  Vanille     Alchemy   For more information regarding the entire DAOstack project, check out the  docs repository .", 
            "title": "An overview of the DAO stack"
        }, 
        {
            "location": "/README/#the-structure-of-a-dao", 
            "text": "Each DAO is a living entity on the blockchain that can own and manage resources. As such, it consists of the following \u201corgans\u201d:    Native token  -  A Standard  ERC20 token  that defines the value system of the DAO. Participants are rewarded for their contributions based on this token .  Reputation  system  -  Similar to native token but is  non-transferable . The reputation system is used to assign weight the votes of participants .  Avatar  -  This is the public-facing part of the DAO that handles the interaction of the DAO with the rest of the world(eg. interacing with other DAOs, paying third party participants, etc...) .  Subscribed  Elements  -  The set of  Schemes  and  Global Constraints  that comprise the DAO .   For each DAO, the above components are organized in a single smart contract called a  Controller , which acts as the owner of those components.", 
            "title": "The Structure of a DAO"
        }, 
        {
            "location": "/README/#elements", 
            "text": "The main configurable and extendable building blocks of DAOs are: Schemes  and  Global Constraints , which are collectively called  elements .   Schemes   define the \"dos\" of the DAO, the rules under which actions are taken, based on the participants' input.  Examples of Schemes are:  Rewarding contributions when other participants recognize them as worthy.  Voting on proposals and automatically executing the chosen proposal.    Global constraints   define the \"don'ts\" of the DAO, the conditions that must always hold and can prevent an action from being taken if it violates these conditions.  Examples of Global Constraints are:  Limiting the amount of tokens or reputation that can be minted per day.  Blacklisting certain participants from performing certain actions.", 
            "title": "Elements"
        }, 
        {
            "location": "/README/#contributing-to-arc-docs", 
            "text": "Same as  CONTIBUTING , with the following additions:   Make sure your pages are registered in the  mkdocs.yml  file under  pages .   Commands:   npm run docs:update  - generate documentation to  docs/generated_docs .  (*)  npm run docs:build  - update   build website to  site/ .  (*)  npm run docs:preview  - preview website locally.  (*)  npm run docs:deploy  - deploy website to  gh-pages  branch so it becomes live.     Check for broken links by using  npm run docs:preview  and checking for warnings.   Please use a spell checker in your IDE to avoid spelling errors.  In case of missing or incorrect documentation please open an issue with the label  documentation , indicating the file, line number and any extra details.   (*) - The command requires  mkdocs     mkdocs-material , run  pip install --user mkdocs mkdocs-material .", 
            "title": "Contributing to Arc Docs"
        }, 
        {
            "location": "/contracts/README/", 
            "text": "Welcome to contracts documentation!\n\n\nThis directory includes manual markdown documentation for \ncontracts\n directory.\nIt follows the directory structure of \ncontracts\n (eg. file \nfoo/bar.md\n documents the \nbar\n contract in \ncontracts/foo\n).\n\n\nsee the generated documentation\n.", 
            "title": "Contracts Home"
        }, 
        {
            "location": "/contracts/controller/README/", 
            "text": "Controller Home\n\n\nsee the generated documentation\n\n\nrelated: \nController\n | \nUController\n\n\nThe controller is the central entity of a DAO,\nwhich acts as the owner of the DAO's \nAvatar\n, \nReputation\n and \nDAOToken\n.\n\n\nIt can perform \"sensitive\"operations through these entities (e.g token and reputation operations).\n\n\nIt is subject to a set of \nSchemes\n and \nConstraints\n that determine its behavior, where each scheme has it own operations permissions.\n\n\nIt stores scheme's parameters for the specific DAO.\n\n\nInterface \n Implementations\n\n\nThere are currently two implementations of the \nController Interface\n\nprovided by Arc:\n\n\n\n\nController\n - A controller instance deployed for each DAO.\n\n\nUController\n - A single, universal controller instance deployed for may DAOs.\n\n\n\n\nChoosing an implementation\n\n\n\n\nUController\n will probably will be deployed by the DAOstack team so by using it one saves the gas cost of deploying a controller when creating a DAO.\n\n\nOn the other hand, \nUController\n might be a bit expensive in terms of GAS for each operation.\n\n\n\n\nSchemes\n\n\nA single DAO controller might be a subject to multiple schemes, each with it's own logic.\nA scheme can only be registered to a controller by a scheme which has registration permission.\n\n\nPermissions\n\n\nThe controller holds and enforces the permissions for each scheme.\ne.g \nregisterScheme(...)\n is allowed to be called only by an authorized (with permission: \nCAN_REGISTER\n) scheme.\n\n\nA scheme can have any combination of the following permissions:\n\n\n\n\nREGISTERED\n -  All registered schemes has this permission. Only registered schemes can perform controller operations.\n\n\nCAN_REGISTER\n - Grant the scheme the permission to register other schemes.\n\n\nADD_OR_REMOVE_GLOBAL_CONSTRAINT\n - Grant the scheme the permission to add or remove a global constraint.\n\n\nCAN_UPGRADE\n - Grant the scheme the permission to upgrade the controller.\n\n\n\n\nParameters\n\n\nThe controller holds the hash of a parameters set for each scheme.\n\n\nThis way a scheme can define a set of parameters which are specific for an organization(defined by the controller).\n\n\nGlobal constraints\n\n\nA controller maintains and enforces global constraints for the organization.\n\n\nA constraint define what a \"cannot be done\" in the DAO. e.g limit the number of minted tokens for the DAO.\n\n\nThe global constraints is checked before and after each controller operation.\n\n\nOnly a scheme with the \nADD_OR_REMOVE_GLOBAL_CONSTRAINT\n permission can add or remove a global constraint.", 
            "title": "Controller Home"
        }, 
        {
            "location": "/contracts/controller/README/#controller-home", 
            "text": "see the generated documentation  related:  Controller  |  UController  The controller is the central entity of a DAO,\nwhich acts as the owner of the DAO's  Avatar ,  Reputation  and  DAOToken .  It can perform \"sensitive\"operations through these entities (e.g token and reputation operations).  It is subject to a set of  Schemes  and  Constraints  that determine its behavior, where each scheme has it own operations permissions.  It stores scheme's parameters for the specific DAO.", 
            "title": "Controller Home"
        }, 
        {
            "location": "/contracts/controller/README/#interface-implementations", 
            "text": "There are currently two implementations of the  Controller Interface \nprovided by Arc:   Controller  - A controller instance deployed for each DAO.  UController  - A single, universal controller instance deployed for may DAOs.", 
            "title": "Interface &amp; Implementations"
        }, 
        {
            "location": "/contracts/controller/README/#choosing-an-implementation", 
            "text": "UController  will probably will be deployed by the DAOstack team so by using it one saves the gas cost of deploying a controller when creating a DAO.  On the other hand,  UController  might be a bit expensive in terms of GAS for each operation.", 
            "title": "Choosing an implementation"
        }, 
        {
            "location": "/contracts/controller/README/#schemes", 
            "text": "A single DAO controller might be a subject to multiple schemes, each with it's own logic.\nA scheme can only be registered to a controller by a scheme which has registration permission.", 
            "title": "Schemes"
        }, 
        {
            "location": "/contracts/controller/README/#permissions", 
            "text": "The controller holds and enforces the permissions for each scheme.\ne.g  registerScheme(...)  is allowed to be called only by an authorized (with permission:  CAN_REGISTER ) scheme.  A scheme can have any combination of the following permissions:   REGISTERED  -  All registered schemes has this permission. Only registered schemes can perform controller operations.  CAN_REGISTER  - Grant the scheme the permission to register other schemes.  ADD_OR_REMOVE_GLOBAL_CONSTRAINT  - Grant the scheme the permission to add or remove a global constraint.  CAN_UPGRADE  - Grant the scheme the permission to upgrade the controller.", 
            "title": "Permissions"
        }, 
        {
            "location": "/contracts/controller/README/#parameters", 
            "text": "The controller holds the hash of a parameters set for each scheme.  This way a scheme can define a set of parameters which are specific for an organization(defined by the controller).", 
            "title": "Parameters"
        }, 
        {
            "location": "/contracts/controller/README/#global-constraints", 
            "text": "A controller maintains and enforces global constraints for the organization.  A constraint define what a \"cannot be done\" in the DAO. e.g limit the number of minted tokens for the DAO.  The global constraints is checked before and after each controller operation.  Only a scheme with the  ADD_OR_REMOVE_GLOBAL_CONSTRAINT  permission can add or remove a global constraint.", 
            "title": "Global constraints"
        }, 
        {
            "location": "/contracts/controller/Avatar/", 
            "text": "Avatar\n\n\nsee the generated documentation\n\n\nThe \nAvatar\n is the public facing entity a DAO exposes to interact with the outside world (vote on other DAOs, pay external actors, etc...).\nIt holds the organization's name, token and reputation system and can send and receive Ether and any other ERC20 external tokens.", 
            "title": "Avatar"
        }, 
        {
            "location": "/contracts/controller/Avatar/#avatar", 
            "text": "see the generated documentation  The  Avatar  is the public facing entity a DAO exposes to interact with the outside world (vote on other DAOs, pay external actors, etc...).\nIt holds the organization's name, token and reputation system and can send and receive Ether and any other ERC20 external tokens.", 
            "title": "Avatar"
        }, 
        {
            "location": "/contracts/controller/Controller/", 
            "text": "Controller\n\n\nsee the generated documentation\n\n\nA non-universal implementation of the \nControllerInterface\n\nwhich requires each DAO to have it's own instance of \nController\n.", 
            "title": "Controller"
        }, 
        {
            "location": "/contracts/controller/Controller/#controller", 
            "text": "see the generated documentation  A non-universal implementation of the  ControllerInterface \nwhich requires each DAO to have it's own instance of  Controller .", 
            "title": "Controller"
        }, 
        {
            "location": "/contracts/controller/DAOToken/", 
            "text": "DAOToken\n\n\nsee the generated documentation\n\n\nThe \nDAOToken\n is an \nERC20\n compatible token that can be used to assign value and reward the DAO's members for their contributions.\nEach \nDAOToken\n is controlled by the DAO it belongs to via the controller.\n\n\nThe \nDAOToken\n can be \nminted\n or \nburned\n by the DAO and also be \ndestroyed\n in the event of an upgrade to a better token or in other circumstances.", 
            "title": "DAOToken"
        }, 
        {
            "location": "/contracts/controller/DAOToken/#daotoken", 
            "text": "see the generated documentation  The  DAOToken  is an  ERC20  compatible token that can be used to assign value and reward the DAO's members for their contributions.\nEach  DAOToken  is controlled by the DAO it belongs to via the controller.  The  DAOToken  can be  minted  or  burned  by the DAO and also be  destroyed  in the event of an upgrade to a better token or in other circumstances.", 
            "title": "DAOToken"
        }, 
        {
            "location": "/contracts/controller/Reputation/", 
            "text": "Reputation\n\n\nsee the generated documentation\n\n\nA DAO has Reputation System which allows peers to rate other peers in order to build trust . A reputation is use to assign influence measure to a DAO'S peers.\nFor example : A DAO might choose to use a reputation based voting mechanism in order to take decisions. In this case a peer with relatively higher reputation value will have more influence in the organization.\n\nReputation\n is similar to regular tokens but with one crucial difference: \nIt is non-transferable\n.\n\n\nThe Reputation contract maintain a map of address to reputation value.\nIt provides a function to mint ,negative or positive, reputation for a specific address.\n\n\nRange\n\n\nMax reputation allowed is capped by INT256_MAX = 2**255 - Any value minted over this MAX will be cause a revert.\n\n\nMin reputation allowed is 0. - Any value minted below this MIN will be trim to 0.", 
            "title": "Reputation"
        }, 
        {
            "location": "/contracts/controller/Reputation/#reputation", 
            "text": "see the generated documentation  A DAO has Reputation System which allows peers to rate other peers in order to build trust . A reputation is use to assign influence measure to a DAO'S peers.\nFor example : A DAO might choose to use a reputation based voting mechanism in order to take decisions. In this case a peer with relatively higher reputation value will have more influence in the organization. Reputation  is similar to regular tokens but with one crucial difference:  It is non-transferable .  The Reputation contract maintain a map of address to reputation value.\nIt provides a function to mint ,negative or positive, reputation for a specific address.", 
            "title": "Reputation"
        }, 
        {
            "location": "/contracts/controller/Reputation/#range", 
            "text": "Max reputation allowed is capped by INT256_MAX = 2**255 - Any value minted over this MAX will be cause a revert.  Min reputation allowed is 0. - Any value minted below this MIN will be trim to 0.", 
            "title": "Range"
        }, 
        {
            "location": "/contracts/controller/UController/", 
            "text": "UController\n\n\nsee the generated documentation\n\n\nThe \nUController\n(Universal Controller) is a universal implementation of the \nControllerInterface\n which behaves like a \nController\n, but for multiple DAOs at the same time.\n\n\nAny DAO can initiate and register itself via the Universal Controller.\n\n\nAs a controller it holds the DAO's organs (\nAvatar\n, \nReputation\n and \nDAOToken\n), maintain schemes permissions and global constraints for each DAO.\n\n\nnewOrganization(...)\n function\n\n\nUsing the \nnewOrganization\n(...) function , one can create a new organization with a default scheme with full permissions.", 
            "title": "UController"
        }, 
        {
            "location": "/contracts/controller/UController/#ucontroller", 
            "text": "see the generated documentation  The  UController (Universal Controller) is a universal implementation of the  ControllerInterface  which behaves like a  Controller , but for multiple DAOs at the same time.  Any DAO can initiate and register itself via the Universal Controller.  As a controller it holds the DAO's organs ( Avatar ,  Reputation  and  DAOToken ), maintain schemes permissions and global constraints for each DAO.", 
            "title": "UController"
        }, 
        {
            "location": "/contracts/controller/UController/#neworganization-function", 
            "text": "Using the  newOrganization (...) function , one can create a new organization with a default scheme with full permissions.", 
            "title": "newOrganization(...) function"
        }, 
        {
            "location": "/contracts/globalConstraints/README/", 
            "text": "Global Constraints Home\n\n\nsee the generated documentation\n\n\nrelated: \nTokenCapGC\n\n\nGlobal Constraint\ns define certain conditions the DAO must hold at all times. More concretely, they define \npre\n \n \npost\n conditions that must hold before \n after any action the DAO takes.\nThey are meant to be \nUniversal\n (i.e. only one deployed instance), but do not strictly need to be.\n\n\nWhen an action is about to happen, the \nController\n consults the \nGlobal Constraint\n and runs it's \npre\n \n \npost\n methods to see if the conditions hold.\nIt passes the following parameters to \npre\n \n \npost\n:\n\n\n\n\naddress scheme\n - the scheme that performed the action.\n\n\nbytes32 hash\n - a hash of the parameters to be used.\n\n\nbytes32 method\n - what kind of event occurred, available \nmethod\ns:\n\n\nmintReputation\n\n\nmintTokens\n\n\nregisterScheme\n\n\nunregisterScheme\n\n\nsendEther\n\n\nexternalTokenTransfer\n\n\nexternalTokenTransferFrom\n\n\nexternalTokenIncreaseApproval\n\n\nexternalTokenDecreaseApproval\n\n\ngenericAction\n - all other actions.\n\n\n\n\n\n\n\n\nExamples\n\n\nA simple time-lock constraint for registering schemes\n\n\nDefining it\n\n\nWe are going to define a simple global constraint that disallows registering new \nScheme\ns during a certain time period.\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\nimport\n \n@daostack/arc/contracts/globalConstraints/GlobalConstraintInterface.sol\n;\n\n\n\ncontract\n \nSchemeRegisterTimeLock\n \nis\n \nGlobalConstraintInterface\n{\n\n\n    \n/*\n \nDefine\n \nhow\n \nour\n \nparameters\n \nlook\n \nlike\n*/\n\n    \nstruct\n \nParams\n{\n\n        \nuint\n \nstart\n;\n\n        \nuint\n \nend\n;\n\n    \n}\n\n\n    \nmapping\n(\nbytes32\n=\nParams\n)\n \npublic\n \nparams\n;\n\n\n    \nfunction\n \nsetParams\n(\nuint\n \nstart\n,\n \nuint\n \nend\n)\n \nreturns\n(\nbytes32\n){\n\n        \nbytes32\n \nhash\n \n=\n \nkeccak256\n(\nstart\n,\nend\n);\n\n        \nparams\n[\nhash\n]\n.\nstart\n \n=\n \nstart\n;\n\n        \nparams\n[\nhash\n]\n.\nend\n \n=\n \nend\n;\n\n        \nreturn\n \nhash\n;\n\n    \n}\n\n\n    \nfunction\n \npre\n(\naddress\n \nscheme\n,\n \nbytes32\n \nhash\n,\n \nbytes32\n \nmethod\n)\n \npublic\n \nreturns\n(\nbool\n){\n\n        \n/*\n \nThis\n \nruns\n \n*\nbefore\n*\n \nan\n \naction\n \nis\n \ntaken\n \n*/\n\n\n        \n/*\n \nmake\n \nsure\n \nno\n \nregisterations\n \noccur\n \nbetween\n \n`start`\n \nand\n \n`end`\n*/\n\n        \nif\n(\nmethod\n \n==\n \nregisterScheme\n\n            \n \nparams\n[\nhash\n]\n.\nstart\n \n=\n \nnow\n\n            \n \nnow\n \n=\n \nparams\n[\nhash\n]\n.\nend\n)\n\n                \nreturn\n \nfalse\n;\n\n\n        \nreturn\n \ntrue\n;\n\n    \n}\n\n\n    \nfunction\n \npost\n(\naddress\n \nscheme\n,\n \nbytes32\n \nhash\n,\n \nbytes32\n \nmethod\n)\n \npublic\n \nreturns\n(\nbool\n){\n\n        \n/*\n \nThis\n \nruns\n \n*\nafter\n*\n \nan\n \naction\n \nis\n \ntaken\n \n*/\n\n        \nreturn\n \ntrue\n;\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\nRegistering it with the controller\n\n\nRegistering a global constraint is done inside a method of a \nScheme\n which is permitted to add/remove global constraints.\n\n\n1\n2\n3\n4\n5\nSchemeRegisterTimeLock gc = new SchemeRegisterTimeLock();\n\n/* Somewhere inside a scheme with `ADD_OR_REMOVE_GLOBAL_CONSTRAINT` permission  */\nbytes32 hash = gc.setParameters(now,now + 2 days)\ncontoller.addGlobalConstraint(address(myGlobalConstraint),hash)", 
            "title": "Global Constraints Home"
        }, 
        {
            "location": "/contracts/globalConstraints/README/#global-constraints-home", 
            "text": "see the generated documentation  related:  TokenCapGC  Global Constraint s define certain conditions the DAO must hold at all times. More concretely, they define  pre     post  conditions that must hold before   after any action the DAO takes.\nThey are meant to be  Universal  (i.e. only one deployed instance), but do not strictly need to be.  When an action is about to happen, the  Controller  consults the  Global Constraint  and runs it's  pre     post  methods to see if the conditions hold.\nIt passes the following parameters to  pre     post :   address scheme  - the scheme that performed the action.  bytes32 hash  - a hash of the parameters to be used.  bytes32 method  - what kind of event occurred, available  method s:  mintReputation  mintTokens  registerScheme  unregisterScheme  sendEther  externalTokenTransfer  externalTokenTransferFrom  externalTokenIncreaseApproval  externalTokenDecreaseApproval  genericAction  - all other actions.", 
            "title": "Global Constraints Home"
        }, 
        {
            "location": "/contracts/globalConstraints/README/#examples", 
            "text": "", 
            "title": "Examples"
        }, 
        {
            "location": "/contracts/globalConstraints/README/#a-simple-time-lock-constraint-for-registering-schemes", 
            "text": "", 
            "title": "A simple time-lock constraint for registering schemes"
        }, 
        {
            "location": "/contracts/globalConstraints/README/#defining-it", 
            "text": "We are going to define a simple global constraint that disallows registering new  Scheme s during a certain time period.   1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36 import   @daostack/arc/contracts/globalConstraints/GlobalConstraintInterface.sol ;  contract   SchemeRegisterTimeLock   is   GlobalConstraintInterface { \n\n     /*   Define   how   our   parameters   look   like */ \n     struct   Params { \n         uint   start ; \n         uint   end ; \n     } \n\n     mapping ( bytes32 = Params )   public   params ; \n\n     function   setParams ( uint   start ,   uint   end )   returns ( bytes32 ){ \n         bytes32   hash   =   keccak256 ( start , end ); \n         params [ hash ] . start   =   start ; \n         params [ hash ] . end   =   end ; \n         return   hash ; \n     } \n\n     function   pre ( address   scheme ,   bytes32   hash ,   bytes32   method )   public   returns ( bool ){ \n         /*   This   runs   * before *   an   action   is   taken   */ \n\n         /*   make   sure   no   registerations   occur   between   `start`   and   `end` */ \n         if ( method   ==   registerScheme \n               params [ hash ] . start   =   now \n               now   =   params [ hash ] . end ) \n                 return   false ; \n\n         return   true ; \n     } \n\n     function   post ( address   scheme ,   bytes32   hash ,   bytes32   method )   public   returns ( bool ){ \n         /*   This   runs   * after *   an   action   is   taken   */ \n         return   true ; \n     }  }", 
            "title": "Defining it"
        }, 
        {
            "location": "/contracts/globalConstraints/README/#registering-it-with-the-controller", 
            "text": "Registering a global constraint is done inside a method of a  Scheme  which is permitted to add/remove global constraints.  1\n2\n3\n4\n5 SchemeRegisterTimeLock gc = new SchemeRegisterTimeLock();\n\n/* Somewhere inside a scheme with `ADD_OR_REMOVE_GLOBAL_CONSTRAINT` permission  */\nbytes32 hash = gc.setParameters(now,now + 2 days)\ncontoller.addGlobalConstraint(address(myGlobalConstraint),hash)", 
            "title": "Registering it with the controller"
        }, 
        {
            "location": "/contracts/globalConstraints/TokenCapGC/", 
            "text": "TokenCapGC\n\n\nsee the generated documentation\n\n\nTokenCapGC\n is a simple global constraint that limits the number of tokens that can be issued.\n\n\nUsage\n\n\n1\n2\n3\n4\n5\nTokenCapGC gc = new TokenCapGC();\n\n/* some where inside a scheme with relevent permissions */\nbytes32 hash = gc.setParameters(contoller.nativeToken,100) /*limit DAO token issuance to 100*/\ncontroller.addGlobalConstraint(gc,hash)", 
            "title": "TokenCapGC"
        }, 
        {
            "location": "/contracts/globalConstraints/TokenCapGC/#tokencapgc", 
            "text": "see the generated documentation  TokenCapGC  is a simple global constraint that limits the number of tokens that can be issued.", 
            "title": "TokenCapGC"
        }, 
        {
            "location": "/contracts/globalConstraints/TokenCapGC/#usage", 
            "text": "1\n2\n3\n4\n5 TokenCapGC gc = new TokenCapGC();\n\n/* some where inside a scheme with relevent permissions */\nbytes32 hash = gc.setParameters(contoller.nativeToken,100) /*limit DAO token issuance to 100*/\ncontroller.addGlobalConstraint(gc,hash)", 
            "title": "Usage"
        }, 
        {
            "location": "/contracts/universalSchemes/README/", 
            "text": "Universal Schemes Home\n\n\nsee the generated documentation\n\n\nA Scheme defines rules the DAO follows.\n\n\nUniversal Scheme\n\n\nUniversal Schemes\n are schemes that inherit from \nUniversalSchemeInterface\n and are supposed to be deployed once.\n\n\nNon-universal Scheme\n\n\nNon-Universal Schemes\n are schemes that do not follow any standard and do not inherit from \nUniversalSchemeInterface", 
            "title": "Universal Schemes Home"
        }, 
        {
            "location": "/contracts/universalSchemes/README/#universal-schemes-home", 
            "text": "see the generated documentation  A Scheme defines rules the DAO follows.", 
            "title": "Universal Schemes Home"
        }, 
        {
            "location": "/contracts/universalSchemes/README/#universal-scheme", 
            "text": "Universal Schemes  are schemes that inherit from  UniversalSchemeInterface  and are supposed to be deployed once.", 
            "title": "Universal Scheme"
        }, 
        {
            "location": "/contracts/universalSchemes/README/#non-universal-scheme", 
            "text": "Non-Universal Schemes  are schemes that do not follow any standard and do not inherit from  UniversalSchemeInterface", 
            "title": "Non-universal Scheme"
        }, 
        {
            "location": "/contracts/VotingMachines/README/", 
            "text": "Voting Machines Home\n\n\nA \nVotingMachine\n is a pluggable component, provided by DAOstack Arc which can be used by a DAO's schemes to manage a voting process on a certain proposal.\n\n\nThe \nVotingMachine\n maintains the voting process and the proposals to vote on, collects votes, and determines the winning vote according to the DAO's pre-defined configuration.\n\n\nIn some cases, such as \nGenesisProtocol\n, it also collects stakes, promotes proposals, and maintains a reputation flow for participants according to the DAO's pre-defined configuration.\n\n\nEach \nVotingMachine\n use its own decision method and has its own voting choices range.\n\n\nBasic decisions methods used by voting machines\n\n\nAbsolute\n\n\nA decision is made if at least a certain percentage (\nP\n) from the total DAO's reputation voted\non a certain voting choice. Normally \nP\n is 50% though it can be set to any value.\n\n\nThe \"winning\" choice is the one that first crosses that bar.\n\n\nRelative\n\n\nA decision is made on a timeout (\nT\n) according to the higher relative vote among all votes.\n\n\nThe \"winning\" choice is the one with the higher relative votes (reputation).\n\n\nQuorum\n\n\nA decision is made if at least a certain percentage (\nP\n) from the total DAO's reputation votes on a certain proposal.\n\n\nThe \"winning\" choice is the one with the maximum votes (reputation).\n\n\nList of supported voting machines\n\n\nBelow is a list of supported \nVotingMachines\n and their decision methods:\n\n\n\n\n\n\n\n\nVotingMachine\n\n\nabsolute\n\n\nrelative\n\n\nquorum\n\n\n\n\n\n\n\n\n\n\nAbsoluteVote\n\n\nyes\n\n\nno\n\n\nno\n\n\n\n\n\n\nQuorumVote\n\n\nno\n\n\nno\n\n\nyes\n\n\n\n\n\n\nGenesisProtocol\n\n\nyes\n\n\nyes\n\n\nno\n\n\n\n\n\n\n\n\nAbsoluteVote\n\n\nUses an absolute decision method.\n\n\nAllow voting choices range 0-10.\n\n\nVote 0 for abstain.\n\n\nQuorumVote\n\n\nUses a quorum decision method.\n\n\nAllow voting choices range 0-10.\n\n\nVote 0 for abstain.\n\n\nGenesisProtocol\n\n\nUse absolute and relative decision method.\n\n\nCurrently it allows only \nYES\n/\nNO\n voting choices (2 choices).\n\n\nAbstaining is not allowed.\n\n\nThis voting machine is also a \nUniversalScheme\n.", 
            "title": "Voting Machines Home"
        }, 
        {
            "location": "/contracts/VotingMachines/README/#voting-machines-home", 
            "text": "A  VotingMachine  is a pluggable component, provided by DAOstack Arc which can be used by a DAO's schemes to manage a voting process on a certain proposal.  The  VotingMachine  maintains the voting process and the proposals to vote on, collects votes, and determines the winning vote according to the DAO's pre-defined configuration.  In some cases, such as  GenesisProtocol , it also collects stakes, promotes proposals, and maintains a reputation flow for participants according to the DAO's pre-defined configuration.  Each  VotingMachine  use its own decision method and has its own voting choices range.", 
            "title": "Voting Machines Home"
        }, 
        {
            "location": "/contracts/VotingMachines/README/#basic-decisions-methods-used-by-voting-machines", 
            "text": "", 
            "title": "Basic decisions methods used by voting machines"
        }, 
        {
            "location": "/contracts/VotingMachines/README/#absolute", 
            "text": "A decision is made if at least a certain percentage ( P ) from the total DAO's reputation voted\non a certain voting choice. Normally  P  is 50% though it can be set to any value.  The \"winning\" choice is the one that first crosses that bar.", 
            "title": "Absolute"
        }, 
        {
            "location": "/contracts/VotingMachines/README/#relative", 
            "text": "A decision is made on a timeout ( T ) according to the higher relative vote among all votes.  The \"winning\" choice is the one with the higher relative votes (reputation).", 
            "title": "Relative"
        }, 
        {
            "location": "/contracts/VotingMachines/README/#quorum", 
            "text": "A decision is made if at least a certain percentage ( P ) from the total DAO's reputation votes on a certain proposal.  The \"winning\" choice is the one with the maximum votes (reputation).", 
            "title": "Quorum"
        }, 
        {
            "location": "/contracts/VotingMachines/README/#list-of-supported-voting-machines", 
            "text": "Below is a list of supported  VotingMachines  and their decision methods:     VotingMachine  absolute  relative  quorum      AbsoluteVote  yes  no  no    QuorumVote  no  no  yes    GenesisProtocol  yes  yes  no", 
            "title": "List of supported voting machines"
        }, 
        {
            "location": "/contracts/VotingMachines/README/#absolutevote", 
            "text": "Uses an absolute decision method.  Allow voting choices range 0-10.  Vote 0 for abstain.", 
            "title": "AbsoluteVote"
        }, 
        {
            "location": "/contracts/VotingMachines/README/#quorumvote", 
            "text": "Uses a quorum decision method.  Allow voting choices range 0-10.  Vote 0 for abstain.", 
            "title": "QuorumVote"
        }, 
        {
            "location": "/contracts/VotingMachines/README/#genesisprotocol", 
            "text": "Use absolute and relative decision method.  Currently it allows only  YES / NO  voting choices (2 choices).  Abstaining is not allowed.  This voting machine is also a  UniversalScheme .", 
            "title": "GenesisProtocol"
        }, 
        {
            "location": "/generated_docs/README/", 
            "text": "Welcome to the generated documentation!\n\n\nThis directory contains automated documentation generated directly from \n.sol\n source files.\nThey include the following info:\n\n\n\n\nGas estimates on constructors \n functions.\n\n\nTechnical information about the exposed public interface of each contract.", 
            "title": "Generated Docs Home"
        }, 
        {
            "location": "/generated_docs/controller/ActionInterface/", 
            "text": "ActionInterface\n\n\nsee the source\n\n\nExecution cost\n: No bound available\n\n\nDeployment cost\n: No bound available\n\n\nCombined cost\n: No bound available\n\n\nMethods\n\n\naction(bytes32[])\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_params\n \nof type \nbytes32[]\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\nBack to the top \u2191", 
            "title": "ActionInterface"
        }, 
        {
            "location": "/generated_docs/controller/ActionInterface/#actioninterface", 
            "text": "see the source  Execution cost : No bound available  Deployment cost : No bound available  Combined cost : No bound available", 
            "title": "ActionInterface"
        }, 
        {
            "location": "/generated_docs/controller/ActionInterface/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/controller/ActionInterface/#actionbytes32", 
            "text": "Execution cost : No bound available  Params:   _params   of type  bytes32[]   Returns:   output_0   of type  bool   Back to the top \u2191", 
            "title": "action(bytes32[])"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/", 
            "text": "Avatar\n\n\nsee the source\n\n\n\n\nAn Avatar holds tokens, reputation and ether for a controller\n\n\n\n\nExecution cost\n: less than 81478 gas\n\n\nDeployment cost\n: less than 478600 gas\n\n\nCombined cost\n: less than 560078 gas\n\n\nConstructor\n\n\nParams:\n\n\n\n\n_orgName\n \nof type \nbytes32\n\n\n_nativeToken\n \nof type \naddress\n\n\n_nativeReputation\n \nof type \naddress\n\n\n\n\nEvents\n\n\nExternalTokenDecreaseApproval(address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n_spender\n \nof type \naddress\n\n\n_subtractedValue\n \nof type \nuint256\n\n\n\n\n\n\nExternalTokenIncreaseApproval(address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n_spender\n \nof type \naddress\n\n\n_addedValue\n \nof type \nuint256\n\n\n\n\n\n\nExternalTokenTransfer(address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n_to\n \nof type \naddress\n\n\n_value\n \nof type \nuint256\n\n\n\n\n\n\nExternalTokenTransferFrom(address,address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n_from\n \nof type \naddress\n\n\n_to\n \nof type \naddress\n\n\n_value\n \nof type \nuint256\n\n\n\n\n\n\nGenericAction(address,bytes32[])\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_action\n \nof type \naddress\n\n\n_params\n \nof type \nbytes32[]\n\n\n\n\n\n\nOwnershipTransferred(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type \naddress\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\n\n\nReceiveEther(address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_value\n \nof type \nuint256\n\n\n\n\n\n\nSendEther(uint256,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_amountInWei\n \nof type \nuint256\n\n\n_to\n \nof type \naddress\n\n\n\n\nFallback\n\n\nExecution cost\n: less than 1870 gas\n\n\nAttributes\n: payable\n\n\nMethods\n\n\nexternalTokenTransferFrom(address,address,address,uint256)\n\n\n\n\nexternal token transfer from a specific account\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n\n\nthe token contract\n\n\n\n\n\n\n\n\n_from\n \nof type \naddress\n\n\n\n\nthe account to spend token from\n\n\n\n\n\n\n\n\n_to\n \nof type \naddress\n\n\n\n\nthe destination address\n\n\n\n\n\n\n\n\n_value\n \nof type \nuint256\n\n\n\n\nthe amount of tokens to transfer\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\norgName()\n\n\nExecution cost\n: less than 1545 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nnativeReputation()\n\n\nExecution cost\n: less than 1545 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nexternalTokenIncreaseApproval(address,address,uint256)\n\n\n\n\nincrease approval for the spender address to spend a specified amount of tokens     on behalf of msg.sender.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n\n\nthe address of the Token Contract\n\n\n\n\n\n\n\n\n_spender\n \nof type \naddress\n\n\n\n\naddress\n\n\n\n\n\n\n\n\n_addedValue\n \nof type \nuint256\n\n\n\n\nthe amount of ether (in Wei) which the approval is referring to.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nnativeToken()\n\n\nExecution cost\n: less than 1545 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\ngenericAction(address,bytes32[])\n\n\n\n\ncall an action function on an ActionInterface. This function use delegatecall and might expose the organization to security risk. Use this function only if you really knows what you are doing.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_action\n \nof type \naddress\n\n\n\n\nthe address of the contract to call.\n\n\n\n\n\n\n\n\n_params\n \nof type \nbytes32[]\n\n\n\n\nthe params for the call.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexternalTokenTransfer(address,address,uint256)\n\n\n\n\nexternal token transfer\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n\n\nthe token contract\n\n\n\n\n\n\n\n\n_to\n \nof type \naddress\n\n\n\n\nthe destination address\n\n\n\n\n\n\n\n\n_value\n \nof type \nuint256\n\n\n\n\nthe amount of tokens to transfer\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexternalTokenDecreaseApproval(address,address,uint256)\n\n\n\n\ndecrease approval for the spender address to spend a specified amount of tokens     on behalf of msg.sender.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n\n\nthe address of the Token Contract\n\n\n\n\n\n\n\n\n_spender\n \nof type \naddress\n\n\n\n\naddress\n\n\n\n\n\n\n\n\n_subtractedValue\n \nof type \nuint256\n\n\n\n\nthe amount of ether (in Wei) which the approval is referring to.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nowner()\n\n\nExecution cost\n: less than 1545 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nsendEther(uint256,address)\n\n\n\n\nsend ethers from the avatar's wallet\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_amountInWei\n \nof type \nuint256\n\n\n\n\namount to send in Wei units\n\n\n\n\n\n\n\n\n_to\n \nof type \naddress\n\n\n\n\nsend the ethers to this address\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ntransferOwnership(address)\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost\n: less than 23027 gas\n\n\nParams:\n\n\n\n\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nThe address to transfer ownership to.\n\n\n\n\n\n\n\n\nBack to the top \u2191", 
            "title": "Avatar"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#avatar", 
            "text": "see the source   An Avatar holds tokens, reputation and ether for a controller   Execution cost : less than 81478 gas  Deployment cost : less than 478600 gas  Combined cost : less than 560078 gas", 
            "title": "Avatar"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#constructor", 
            "text": "Params:   _orgName   of type  bytes32  _nativeToken   of type  address  _nativeReputation   of type  address", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#externaltokendecreaseapprovaladdressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   _externalToken   of type  address  _spender   of type  address  _subtractedValue   of type  uint256", 
            "title": "ExternalTokenDecreaseApproval(address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#externaltokenincreaseapprovaladdressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   _externalToken   of type  address  _spender   of type  address  _addedValue   of type  uint256", 
            "title": "ExternalTokenIncreaseApproval(address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#externaltokentransferaddressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   _externalToken   of type  address  _to   of type  address  _value   of type  uint256", 
            "title": "ExternalTokenTransfer(address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#externaltokentransferfromaddressaddressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   _externalToken   of type  address  _from   of type  address  _to   of type  address  _value   of type  uint256", 
            "title": "ExternalTokenTransferFrom(address,address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#genericactionaddressbytes32", 
            "text": "Execution cost : No bound available  Params:   _action   of type  address  _params   of type  bytes32[]", 
            "title": "GenericAction(address,bytes32[])"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#ownershiptransferredaddressaddress", 
            "text": "Execution cost : No bound available  Params:   previousOwner   of type  address  newOwner   of type  address", 
            "title": "OwnershipTransferred(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#receiveetheraddressuint256", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _value   of type  uint256", 
            "title": "ReceiveEther(address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#sendetheruint256address", 
            "text": "Execution cost : No bound available  Params:   _amountInWei   of type  uint256  _to   of type  address", 
            "title": "SendEther(uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#fallback", 
            "text": "Execution cost : less than 1870 gas  Attributes : payable", 
            "title": "Fallback"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#externaltokentransferfromaddressaddressaddressuint256_1", 
            "text": "external token transfer from a specific account   Execution cost : No bound available  Params:    _externalToken   of type  address   the token contract     _from   of type  address   the account to spend token from     _to   of type  address   the destination address     _value   of type  uint256   the amount of tokens to transfer     Returns:   bool which represents success    output_0   of type  bool", 
            "title": "externalTokenTransferFrom(address,address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#orgname", 
            "text": "Execution cost : less than 1545 gas  Attributes : constant  Returns:   output_0   of type  bytes32", 
            "title": "orgName()"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#nativereputation", 
            "text": "Execution cost : less than 1545 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "nativeReputation()"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#externaltokenincreaseapprovaladdressaddressuint256_1", 
            "text": "increase approval for the spender address to spend a specified amount of tokens     on behalf of msg.sender.   Execution cost : No bound available  Params:    _externalToken   of type  address   the address of the Token Contract     _spender   of type  address   address     _addedValue   of type  uint256   the amount of ether (in Wei) which the approval is referring to.     Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "externalTokenIncreaseApproval(address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#nativetoken", 
            "text": "Execution cost : less than 1545 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "nativeToken()"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#genericactionaddressbytes32_1", 
            "text": "call an action function on an ActionInterface. This function use delegatecall and might expose the organization to security risk. Use this function only if you really knows what you are doing.   Execution cost : No bound available  Params:    _action   of type  address   the address of the contract to call.     _params   of type  bytes32[]   the params for the call.     Returns:   bool which represents success    output_0   of type  bool", 
            "title": "genericAction(address,bytes32[])"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#externaltokentransferaddressaddressuint256_1", 
            "text": "external token transfer   Execution cost : No bound available  Params:    _externalToken   of type  address   the token contract     _to   of type  address   the destination address     _value   of type  uint256   the amount of tokens to transfer     Returns:   bool which represents success    output_0   of type  bool", 
            "title": "externalTokenTransfer(address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#externaltokendecreaseapprovaladdressaddressuint256_1", 
            "text": "decrease approval for the spender address to spend a specified amount of tokens     on behalf of msg.sender.   Execution cost : No bound available  Params:    _externalToken   of type  address   the address of the Token Contract     _spender   of type  address   address     _subtractedValue   of type  uint256   the amount of ether (in Wei) which the approval is referring to.     Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "externalTokenDecreaseApproval(address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#owner", 
            "text": "Execution cost : less than 1545 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "owner()"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#sendetheruint256address_1", 
            "text": "send ethers from the avatar's wallet   Execution cost : No bound available  Params:    _amountInWei   of type  uint256   amount to send in Wei units     _to   of type  address   send the ethers to this address     Returns:   bool which represents success    output_0   of type  bool", 
            "title": "sendEther(uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/Avatar/#transferownershipaddress", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost : less than 23027 gas  Params:    newOwner   of type  address   The address to transfer ownership to.     Back to the top \u2191", 
            "title": "transferOwnership(address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/", 
            "text": "Controller\n\n\nsee the source\n\n\n\n\nController contract\n\n\n\n\nExecution cost\n: No bound available\n\n\nDeployment cost\n: less than 2596800 gas\n\n\nCombined cost\n: No bound available\n\n\nConstructor\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nEvents\n\n\nExternalTokenTransfer(address,address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_externalToken\n \nof type \naddress\n\n\n_to\n \nof type \naddress\n\n\n_value\n \nof type \nuint256\n\n\n\n\n\n\nMintReputation(address,address,int256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_beneficiary\n \nof type \naddress\n\n\n_amount\n \nof type \nint256\n\n\n\n\n\n\nAddGlobalConstraint(address,bytes32,uint8)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_globalConstraint\n \nof type \naddress\n\n\n_params\n \nof type \nbytes32\n\n\n_when\n \nof type \nuint8\n\n\n\n\n\n\nExternalTokenDecreaseApproval(address,address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_externalToken\n \nof type \naddress\n\n\n_spender\n \nof type \naddress\n\n\n_value\n \nof type \nuint256\n\n\n\n\n\n\nGenericAction(address,bytes32[])\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_params\n \nof type \nbytes32[]\n\n\n\n\n\n\nExternalTokenIncreaseApproval(address,address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_externalToken\n \nof type \naddress\n\n\n_spender\n \nof type \naddress\n\n\n_value\n \nof type \nuint256\n\n\n\n\n\n\nExternalTokenTransferFrom(address,address,address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_externalToken\n \nof type \naddress\n\n\n_from\n \nof type \naddress\n\n\n_to\n \nof type \naddress\n\n\n_value\n \nof type \nuint256\n\n\n\n\n\n\nMintTokens(address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_beneficiary\n \nof type \naddress\n\n\n_amount\n \nof type \nuint256\n\n\n\n\n\n\nRegisterScheme(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_scheme\n \nof type \naddress\n\n\n\n\n\n\nRemoveGlobalConstraint(address,uint256,bool)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_globalConstraint\n \nof type \naddress\n\n\n_index\n \nof type \nuint256\n\n\n_isPre\n \nof type \nbool\n\n\n\n\n\n\nSendEther(address,uint256,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_amountInWei\n \nof type \nuint256\n\n\n_to\n \nof type \naddress\n\n\n\n\n\n\nUnregisterScheme(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_scheme\n \nof type \naddress\n\n\n\n\n\n\nUpgradeController(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_oldController\n \nof type \naddress\n\n\n_newController\n \nof type \naddress\n\n\n\n\nFallback\n\n\nExecution cost\n: less than 764 gas\n\n\nMethods\n\n\nglobalConstraintsRegisterPost(address)\n\n\nExecution cost\n: less than 1148 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\nregister\n \nof type \nbool\n\n\nindex\n \nof type \nuint256\n\n\n\n\n\n\nexternalTokenTransferFrom(address,address,address,uint256,address)\n\n\n\n\ntransfer token \"from\" address \"to\" address     One must to approve the amount of tokens which can be spend from the     \"from\" account.This can be done using externalTokenApprove.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n\n\nthe address of the Token Contract\n\n\n\n\n\n\n\n\n_from\n \nof type \naddress\n\n\n\n\naddress of the account to send from\n\n\n\n\n\n\n\n\n_to\n \nof type \naddress\n\n\n\n\naddress of the beneficiary\n\n\n\n\n\n\n\n\n_value\n \nof type \nuint256\n\n\n\n\nthe amount of ether (in Wei) to send\n\n\n\n\n\n\n\n\nparam_4\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\naddGlobalConstraint(address,bytes32,address)\n\n\n\n\nadd or update Global Constraint\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_globalConstraint\n \nof type \naddress\n\n\n\n\nthe address of the global constraint to be added.\n\n\n\n\n\n\n\n\n_params\n \nof type \nbytes32\n\n\n\n\nthe constraint parameters hash.\n\n\n\n\n\n\n\n\nparam_2\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexternalTokenDecreaseApproval(address,address,uint256,address)\n\n\n\n\ndecrease approval for the spender address to spend a specified amount of tokens     on behalf of msg.sender.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n\n\nthe address of the Token Contract\n\n\n\n\n\n\n\n\n_spender\n \nof type \naddress\n\n\n\n\naddress\n\n\n\n\n\n\n\n\n_subtractedValue\n \nof type \nuint256\n\n\n\n\nthe amount of ether (in Wei) which the approval is referring to.\n\n\n\n\n\n\n\n\nparam_3\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexternalTokenTransfer(address,address,uint256,address)\n\n\n\n\nsend some amount of arbitrary ERC20 Tokens\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n\n\nthe address of the Token Contract\n\n\n\n\n\n\n\n\n_to\n \nof type \naddress\n\n\n\n\naddress of the beneficiary\n\n\n\n\n\n\n\n\n_value\n \nof type \nuint256\n\n\n\n\nthe amount of ether (in Wei) to send\n\n\n\n\n\n\n\n\nparam_3\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexternalTokenIncreaseApproval(address,address,uint256,address)\n\n\n\n\nincrease approval for the spender address to spend a specified amount of tokens     on behalf of msg.sender.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n\n\nthe address of the Token Contract\n\n\n\n\n\n\n\n\n_spender\n \nof type \naddress\n\n\n\n\naddress\n\n\n\n\n\n\n\n\n_addedValue\n \nof type \nuint256\n\n\n\n\nthe amount of ether (in Wei) which the approval is referring to.\n\n\n\n\n\n\n\n\nparam_3\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\navatar()\n\n\nExecution cost\n: less than 746 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\ngetSchemePermissions(address,address)\n\n\nExecution cost\n: less than 1213 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_scheme\n \nof type \naddress\n\n\nparam_1\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes4\n\n\n\n\n\n\nremoveGlobalConstraint(address,address)\n\n\n\n\nremove Global Constraint\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_globalConstraint\n \nof type \naddress\n\n\n\n\nthe address of the global constraint to be remove.\n\n\n\n\n\n\n\n\nparam_1\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nisGlobalConstraintRegistered(address,address)\n\n\nExecution cost\n: less than 1641 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_globalConstraint\n \nof type \naddress\n\n\nparam_1\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nmintTokens(uint256,address,address)\n\n\n\n\nmint tokens .\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_amount\n \nof type \nuint256\n\n\n\n\namount of token to mint\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nbeneficiary address\n\n\n\n\n\n\n\n\nparam_2\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nglobalConstraintsPre(uint256)\n\n\nExecution cost\n: less than 1258 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nuint256\n\n\n\n\nReturns:\n\n\n\n\ngcAddress\n \nof type \naddress\n\n\nparams\n \nof type \nbytes32\n\n\n\n\n\n\nglobalConstraintsPost(uint256)\n\n\nExecution cost\n: less than 1698 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nuint256\n\n\n\n\nReturns:\n\n\n\n\ngcAddress\n \nof type \naddress\n\n\nparams\n \nof type \nbytes32\n\n\n\n\n\n\nmintReputation(int256,address,address)\n\n\n\n\nmint reputation .\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_amount\n \nof type \nint256\n\n\n\n\namount of reputation to mint\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nbeneficiary address\n\n\n\n\n\n\n\n\nparam_2\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nglobalConstraintsRegisterPre(address)\n\n\nExecution cost\n: less than 862 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\nregister\n \nof type \nbool\n\n\nindex\n \nof type \nuint256\n\n\n\n\n\n\nglobalConstraintsCount(address)\n\n\n\n\nglobalConstraintsCount return the global constraint pre and post count\n\n\n\n\nExecution cost\n: less than 1076 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\nuint globalConstraintsPre count.uint globalConstraintsPost count.\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\noutput_1\n \nof type \nuint256\n\n\n\n\n\n\nnativeReputation()\n\n\nExecution cost\n: less than 944 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\ngenericAction(bytes32[],address)\n\n\n\n\ndo a generic delegate call to the contract which called us. This function use delegatecall and might expose the organization to security risk. Use this function only if you really knows what you are doing.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_params\n \nof type \nbytes32[]\n\n\n\n\nthe params for the call.\n\n\n\n\n\n\n\n\nparam_1\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nisSchemeRegistered(address,address)\n\n\nExecution cost\n: less than 1172 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_scheme\n \nof type \naddress\n\n\nparam_1\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nregisterScheme(address,bytes32,bytes4,address)\n\n\n\n\nregister a scheme\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n\n\nthe address of the scheme\n\n\n\n\n\n\n\n\n_paramsHash\n \nof type \nbytes32\n\n\n\n\na hashed configuration of the usage of the scheme\n\n\n\n\n\n\n\n\n_permissions\n \nof type \nbytes4\n\n\n\n\nthe permissions the new scheme will have\n\n\n\n\n\n\n\n\nparam_3\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nnewController()\n\n\nExecution cost\n: less than 658 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\ngetSchemeParameters(address,address)\n\n\nExecution cost\n: less than 722 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_scheme\n \nof type \naddress\n\n\nparam_1\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nnativeToken()\n\n\nExecution cost\n: less than 1076 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nschemes(address)\n\n\nExecution cost\n: less than 1433 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\nparamsHash\n \nof type \nbytes32\n\n\npermissions\n \nof type \nbytes4\n\n\n\n\n\n\nsendEther(uint256,address,address)\n\n\n\n\nsend some ether\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_amountInWei\n \nof type \nuint256\n\n\n\n\nthe amount of ether (in Wei) to send\n\n\n\n\n\n\n\n\n_to\n \nof type \naddress\n\n\n\n\naddress of the beneficiary\n\n\n\n\n\n\n\n\nparam_2\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nunregisterScheme(address,address)\n\n\n\n\nunregister a scheme\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n\n\nthe address of the scheme\n\n\n\n\n\n\n\n\nparam_1\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nunregisterSelf(address)\n\n\n\n\nunregister the caller's scheme\n\n\n\n\nExecution cost\n: less than 28009 gas\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nupgradeController(address,address)\n\n\n\n\nupgrade the Controller     The function will trigger an event 'UpgradeController'.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_newController\n \nof type \naddress\n\n\n\n\nthe address of the new controller.\n\n\n\n\n\n\n\n\nparam_1\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\nBack to the top \u2191", 
            "title": "Controller"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#controller", 
            "text": "see the source   Controller contract   Execution cost : No bound available  Deployment cost : less than 2596800 gas  Combined cost : No bound available", 
            "title": "Controller"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#constructor", 
            "text": "Params:   _avatar   of type  address", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#externaltokentransferaddressaddressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _externalToken   of type  address  _to   of type  address  _value   of type  uint256", 
            "title": "ExternalTokenTransfer(address,address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#mintreputationaddressaddressint256", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _beneficiary   of type  address  _amount   of type  int256", 
            "title": "MintReputation(address,address,int256)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#addglobalconstraintaddressbytes32uint8", 
            "text": "Execution cost : No bound available  Params:   _globalConstraint   of type  address  _params   of type  bytes32  _when   of type  uint8", 
            "title": "AddGlobalConstraint(address,bytes32,uint8)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#externaltokendecreaseapprovaladdressaddressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _externalToken   of type  address  _spender   of type  address  _value   of type  uint256", 
            "title": "ExternalTokenDecreaseApproval(address,address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#genericactionaddressbytes32", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _params   of type  bytes32[]", 
            "title": "GenericAction(address,bytes32[])"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#externaltokenincreaseapprovaladdressaddressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _externalToken   of type  address  _spender   of type  address  _value   of type  uint256", 
            "title": "ExternalTokenIncreaseApproval(address,address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#externaltokentransferfromaddressaddressaddressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _externalToken   of type  address  _from   of type  address  _to   of type  address  _value   of type  uint256", 
            "title": "ExternalTokenTransferFrom(address,address,address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#minttokensaddressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _beneficiary   of type  address  _amount   of type  uint256", 
            "title": "MintTokens(address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#registerschemeaddressaddress", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _scheme   of type  address", 
            "title": "RegisterScheme(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#removeglobalconstraintaddressuint256bool", 
            "text": "Execution cost : No bound available  Params:   _globalConstraint   of type  address  _index   of type  uint256  _isPre   of type  bool", 
            "title": "RemoveGlobalConstraint(address,uint256,bool)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#sendetheraddressuint256address", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _amountInWei   of type  uint256  _to   of type  address", 
            "title": "SendEther(address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#unregisterschemeaddressaddress", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _scheme   of type  address", 
            "title": "UnregisterScheme(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#upgradecontrolleraddressaddress", 
            "text": "Execution cost : No bound available  Params:   _oldController   of type  address  _newController   of type  address", 
            "title": "UpgradeController(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#fallback", 
            "text": "Execution cost : less than 764 gas", 
            "title": "Fallback"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#globalconstraintsregisterpostaddress", 
            "text": "Execution cost : less than 1148 gas  Attributes : constant  Params:   param_0   of type  address   Returns:   register   of type  bool  index   of type  uint256", 
            "title": "globalConstraintsRegisterPost(address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#externaltokentransferfromaddressaddressaddressuint256address", 
            "text": "transfer token \"from\" address \"to\" address     One must to approve the amount of tokens which can be spend from the     \"from\" account.This can be done using externalTokenApprove.   Execution cost : No bound available  Params:    _externalToken   of type  address   the address of the Token Contract     _from   of type  address   address of the account to send from     _to   of type  address   address of the beneficiary     _value   of type  uint256   the amount of ether (in Wei) to send     param_4   of type  address    Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "externalTokenTransferFrom(address,address,address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#addglobalconstraintaddressbytes32address", 
            "text": "add or update Global Constraint   Execution cost : No bound available  Params:    _globalConstraint   of type  address   the address of the global constraint to be added.     _params   of type  bytes32   the constraint parameters hash.     param_2   of type  address    Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "addGlobalConstraint(address,bytes32,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#externaltokendecreaseapprovaladdressaddressuint256address", 
            "text": "decrease approval for the spender address to spend a specified amount of tokens     on behalf of msg.sender.   Execution cost : No bound available  Params:    _externalToken   of type  address   the address of the Token Contract     _spender   of type  address   address     _subtractedValue   of type  uint256   the amount of ether (in Wei) which the approval is referring to.     param_3   of type  address    Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "externalTokenDecreaseApproval(address,address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#externaltokentransferaddressaddressuint256address", 
            "text": "send some amount of arbitrary ERC20 Tokens   Execution cost : No bound available  Params:    _externalToken   of type  address   the address of the Token Contract     _to   of type  address   address of the beneficiary     _value   of type  uint256   the amount of ether (in Wei) to send     param_3   of type  address    Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "externalTokenTransfer(address,address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#externaltokenincreaseapprovaladdressaddressuint256address", 
            "text": "increase approval for the spender address to spend a specified amount of tokens     on behalf of msg.sender.   Execution cost : No bound available  Params:    _externalToken   of type  address   the address of the Token Contract     _spender   of type  address   address     _addedValue   of type  uint256   the amount of ether (in Wei) which the approval is referring to.     param_3   of type  address    Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "externalTokenIncreaseApproval(address,address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#avatar", 
            "text": "Execution cost : less than 746 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "avatar()"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#getschemepermissionsaddressaddress", 
            "text": "Execution cost : less than 1213 gas  Attributes : constant  Params:   _scheme   of type  address  param_1   of type  address   Returns:   output_0   of type  bytes4", 
            "title": "getSchemePermissions(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#removeglobalconstraintaddressaddress", 
            "text": "remove Global Constraint   Execution cost : No bound available  Params:    _globalConstraint   of type  address   the address of the global constraint to be remove.     param_1   of type  address    Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "removeGlobalConstraint(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#isglobalconstraintregisteredaddressaddress", 
            "text": "Execution cost : less than 1641 gas  Attributes : constant  Params:   _globalConstraint   of type  address  param_1   of type  address   Returns:   output_0   of type  bool", 
            "title": "isGlobalConstraintRegistered(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#minttokensuint256addressaddress", 
            "text": "mint tokens .   Execution cost : No bound available  Params:    _amount   of type  uint256   amount of token to mint     _beneficiary   of type  address   beneficiary address     param_2   of type  address    Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "mintTokens(uint256,address,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#globalconstraintspreuint256", 
            "text": "Execution cost : less than 1258 gas  Attributes : constant  Params:   param_0   of type  uint256   Returns:   gcAddress   of type  address  params   of type  bytes32", 
            "title": "globalConstraintsPre(uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#globalconstraintspostuint256", 
            "text": "Execution cost : less than 1698 gas  Attributes : constant  Params:   param_0   of type  uint256   Returns:   gcAddress   of type  address  params   of type  bytes32", 
            "title": "globalConstraintsPost(uint256)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#mintreputationint256addressaddress", 
            "text": "mint reputation .   Execution cost : No bound available  Params:    _amount   of type  int256   amount of reputation to mint     _beneficiary   of type  address   beneficiary address     param_2   of type  address    Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "mintReputation(int256,address,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#globalconstraintsregisterpreaddress", 
            "text": "Execution cost : less than 862 gas  Attributes : constant  Params:   param_0   of type  address   Returns:   register   of type  bool  index   of type  uint256", 
            "title": "globalConstraintsRegisterPre(address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#globalconstraintscountaddress", 
            "text": "globalConstraintsCount return the global constraint pre and post count   Execution cost : less than 1076 gas  Attributes : constant  Params:   param_0   of type  address   Returns:   uint globalConstraintsPre count.uint globalConstraintsPost count.    output_0   of type  uint256  output_1   of type  uint256", 
            "title": "globalConstraintsCount(address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#nativereputation", 
            "text": "Execution cost : less than 944 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "nativeReputation()"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#genericactionbytes32address", 
            "text": "do a generic delegate call to the contract which called us. This function use delegatecall and might expose the organization to security risk. Use this function only if you really knows what you are doing.   Execution cost : No bound available  Params:    _params   of type  bytes32[]   the params for the call.     param_1   of type  address    Returns:   bool which represents success    output_0   of type  bool", 
            "title": "genericAction(bytes32[],address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#isschemeregisteredaddressaddress", 
            "text": "Execution cost : less than 1172 gas  Attributes : constant  Params:   _scheme   of type  address  param_1   of type  address   Returns:   output_0   of type  bool", 
            "title": "isSchemeRegistered(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#registerschemeaddressbytes32bytes4address", 
            "text": "register a scheme   Execution cost : No bound available  Params:    _scheme   of type  address   the address of the scheme     _paramsHash   of type  bytes32   a hashed configuration of the usage of the scheme     _permissions   of type  bytes4   the permissions the new scheme will have     param_3   of type  address    Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "registerScheme(address,bytes32,bytes4,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#newcontroller", 
            "text": "Execution cost : less than 658 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "newController()"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#getschemeparametersaddressaddress", 
            "text": "Execution cost : less than 722 gas  Attributes : constant  Params:   _scheme   of type  address  param_1   of type  address   Returns:   output_0   of type  bytes32", 
            "title": "getSchemeParameters(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#nativetoken", 
            "text": "Execution cost : less than 1076 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "nativeToken()"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#schemesaddress", 
            "text": "Execution cost : less than 1433 gas  Attributes : constant  Params:   param_0   of type  address   Returns:   paramsHash   of type  bytes32  permissions   of type  bytes4", 
            "title": "schemes(address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#sendetheruint256addressaddress", 
            "text": "send some ether   Execution cost : No bound available  Params:    _amountInWei   of type  uint256   the amount of ether (in Wei) to send     _to   of type  address   address of the beneficiary     param_2   of type  address    Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "sendEther(uint256,address,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#unregisterschemeaddressaddress_1", 
            "text": "unregister a scheme   Execution cost : No bound available  Params:    _scheme   of type  address   the address of the scheme     param_1   of type  address    Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "unregisterScheme(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#unregisterselfaddress", 
            "text": "unregister the caller's scheme   Execution cost : less than 28009 gas  Params:   param_0   of type  address   Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "unregisterSelf(address)"
        }, 
        {
            "location": "/generated_docs/controller/Controller/#upgradecontrolleraddressaddress_1", 
            "text": "upgrade the Controller     The function will trigger an event 'UpgradeController'.   Execution cost : No bound available  Params:    _newController   of type  address   the address of the new controller.     param_1   of type  address    Returns:   bool which represents a success    output_0   of type  bool   Back to the top \u2191", 
            "title": "upgradeController(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/", 
            "text": "ControllerInterface\n\n\nsee the source\n\n\nExecution cost\n: No bound available\n\n\nDeployment cost\n: No bound available\n\n\nCombined cost\n: No bound available\n\n\nMethods\n\n\nmintReputation(int256,address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_amount\n \nof type \nint256\n\n\n_beneficiary\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexternalTokenTransferFrom(address,address,address,uint256,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n_from\n \nof type \naddress\n\n\n_to\n \nof type \naddress\n\n\n_value\n \nof type \nuint256\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\naddGlobalConstraint(address,bytes32,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_globalConstraint\n \nof type \naddress\n\n\n_params\n \nof type \nbytes32\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexternalTokenDecreaseApproval(address,address,uint256,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n_spender\n \nof type \naddress\n\n\n_subtractedValue\n \nof type \nuint256\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexternalTokenTransfer(address,address,uint256,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n_to\n \nof type \naddress\n\n\n_value\n \nof type \nuint256\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexternalTokenIncreaseApproval(address,address,uint256,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n_spender\n \nof type \naddress\n\n\n_addedValue\n \nof type \nuint256\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nisSchemeRegistered(address,address)\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nmintTokens(uint256,address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_amount\n \nof type \nuint256\n\n\n_beneficiary\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nisGlobalConstraintRegistered(address,address)\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_globalConstraint\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ngetSchemeParameters(address,address)\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nglobalConstraintsCount(address)\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\noutput_1\n \nof type \nuint256\n\n\n\n\n\n\ngetSchemePermissions(address,address)\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes4\n\n\n\n\n\n\ngenericAction(bytes32[],address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_params\n \nof type \nbytes32[]\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nregisterScheme(address,bytes32,bytes4,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n_paramsHash\n \nof type \nbytes32\n\n\n_permissions\n \nof type \nbytes4\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nremoveGlobalConstraint(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_globalConstraint\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nsendEther(uint256,address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_amountInWei\n \nof type \nuint256\n\n\n_to\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nunregisterScheme(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nunregisterSelf(address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nupgradeController(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_newController\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\nBack to the top \u2191", 
            "title": "ControllerInterface"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#controllerinterface", 
            "text": "see the source  Execution cost : No bound available  Deployment cost : No bound available  Combined cost : No bound available", 
            "title": "ControllerInterface"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#mintreputationint256addressaddress", 
            "text": "Execution cost : No bound available  Params:   _amount   of type  int256  _beneficiary   of type  address  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "mintReputation(int256,address,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#externaltokentransferfromaddressaddressaddressuint256address", 
            "text": "Execution cost : No bound available  Params:   _externalToken   of type  address  _from   of type  address  _to   of type  address  _value   of type  uint256  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "externalTokenTransferFrom(address,address,address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#addglobalconstraintaddressbytes32address", 
            "text": "Execution cost : No bound available  Params:   _globalConstraint   of type  address  _params   of type  bytes32  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "addGlobalConstraint(address,bytes32,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#externaltokendecreaseapprovaladdressaddressuint256address", 
            "text": "Execution cost : No bound available  Params:   _externalToken   of type  address  _spender   of type  address  _subtractedValue   of type  uint256  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "externalTokenDecreaseApproval(address,address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#externaltokentransferaddressaddressuint256address", 
            "text": "Execution cost : No bound available  Params:   _externalToken   of type  address  _to   of type  address  _value   of type  uint256  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "externalTokenTransfer(address,address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#externaltokenincreaseapprovaladdressaddressuint256address", 
            "text": "Execution cost : No bound available  Params:   _externalToken   of type  address  _spender   of type  address  _addedValue   of type  uint256  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "externalTokenIncreaseApproval(address,address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#isschemeregisteredaddressaddress", 
            "text": "Execution cost : No bound available  Attributes : constant  Params:   _scheme   of type  address  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "isSchemeRegistered(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#minttokensuint256addressaddress", 
            "text": "Execution cost : No bound available  Params:   _amount   of type  uint256  _beneficiary   of type  address  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "mintTokens(uint256,address,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#isglobalconstraintregisteredaddressaddress", 
            "text": "Execution cost : No bound available  Attributes : constant  Params:   _globalConstraint   of type  address  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "isGlobalConstraintRegistered(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#getschemeparametersaddressaddress", 
            "text": "Execution cost : No bound available  Attributes : constant  Params:   _scheme   of type  address  _avatar   of type  address   Returns:   output_0   of type  bytes32", 
            "title": "getSchemeParameters(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#globalconstraintscountaddress", 
            "text": "Execution cost : No bound available  Attributes : constant  Params:   _avatar   of type  address   Returns:   output_0   of type  uint256  output_1   of type  uint256", 
            "title": "globalConstraintsCount(address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#getschemepermissionsaddressaddress", 
            "text": "Execution cost : No bound available  Attributes : constant  Params:   _scheme   of type  address  _avatar   of type  address   Returns:   output_0   of type  bytes4", 
            "title": "getSchemePermissions(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#genericactionbytes32address", 
            "text": "Execution cost : No bound available  Params:   _params   of type  bytes32[]  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "genericAction(bytes32[],address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#registerschemeaddressbytes32bytes4address", 
            "text": "Execution cost : No bound available  Params:   _scheme   of type  address  _paramsHash   of type  bytes32  _permissions   of type  bytes4  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "registerScheme(address,bytes32,bytes4,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#removeglobalconstraintaddressaddress", 
            "text": "Execution cost : No bound available  Params:   _globalConstraint   of type  address  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "removeGlobalConstraint(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#sendetheruint256addressaddress", 
            "text": "Execution cost : No bound available  Params:   _amountInWei   of type  uint256  _to   of type  address  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "sendEther(uint256,address,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#unregisterschemeaddressaddress", 
            "text": "Execution cost : No bound available  Params:   _scheme   of type  address  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "unregisterScheme(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#unregisterselfaddress", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "unregisterSelf(address)"
        }, 
        {
            "location": "/generated_docs/controller/ControllerInterface/#upgradecontrolleraddressaddress", 
            "text": "Execution cost : No bound available  Params:   _newController   of type  address  _avatar   of type  address   Returns:   output_0   of type  bool   Back to the top \u2191", 
            "title": "upgradeController(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/", 
            "text": "DAOToken\n\n\nsee the source\n\n\n\n\nDAOToken, base on zeppelin contract.\n\n\n\n\nExecution cost\n: No bound available\n\n\nDeployment cost\n: less than 687800 gas\n\n\nCombined cost\n: No bound available\n\n\nConstructor\n\n\nParams:\n\n\n\n\n_name\n \nof type \nstring\n\n\n_symbol\n \nof type \nstring\n\n\n\n\nEvents\n\n\nApproval(address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nowner\n \nof type \naddress\n\n\nspender\n \nof type \naddress\n\n\nvalue\n \nof type \nuint256\n\n\n\n\n\n\nBurn(address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nburner\n \nof type \naddress\n\n\nvalue\n \nof type \nuint256\n\n\n\n\n\n\nMint(address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nto\n \nof type \naddress\n\n\namount\n \nof type \nuint256\n\n\n\n\n\n\nMintFinished()\n\n\nExecution cost\n: No bound available\n\n\n\n\nOwnershipTransferred(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type \naddress\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\n\n\nTransfer(address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nfrom\n \nof type \naddress\n\n\nto\n \nof type \naddress\n\n\nvalue\n \nof type \nuint256\n\n\n\n\nMethods\n\n\nbalanceOf(address)\n\n\n\n\nGets the balance of the specified address.\n\n\n\n\nExecution cost\n: less than 796 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_owner\n \nof type \naddress\n\n\n\n\nThe address to query the the balance of.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nAn uint256 representing the amount owned by the passed address.\n\n\n\n\n\n\nbalance\n \nof type \nuint256\n\n\n\n\n\n\ndestroyAndSend(address)\n\n\nExecution cost\n: less than 30980 gas\n\n\nParams:\n\n\n\n\n_recipient\n \nof type \naddress\n\n\n\n\n\n\napprove(address,uint256)\n\n\n\n\nApprove the passed address to spend the specified amount of tokens on behalf of msg.sender.   * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n\n\n\nExecution cost\n: less than 22377 gas\n\n\nParams:\n\n\n\n\n\n\n_spender\n \nof type \naddress\n\n\n\n\nThe address which will spend the funds.\n\n\n\n\n\n\n\n\n_value\n \nof type \nuint256\n\n\n\n\nThe amount of tokens to be spent.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nallowance(address,address)\n\n\n\n\nFunction to check the amount of tokens that an owner allowed to a spender.\n\n\n\n\nExecution cost\n: less than 1049 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_owner\n \nof type \naddress\n\n\n\n\naddress The address which owns the funds.\n\n\n\n\n\n\n\n\n_spender\n \nof type \naddress\n\n\n\n\naddress The address which will spend the funds.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nA uint256 specifying the amount of tokens still available for the spender.\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\ndestroy()\n\n\n\n\nTransfers the current balance to the owner and terminates the contract.\n\n\n\n\nExecution cost\n: less than 30945 gas\n\n\n\n\nDECIMAL()\n\n\nExecution cost\n: less than 349 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nburn(uint256)\n\n\n\n\nBurns a specific amount of tokens.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_value\n \nof type \nuint256\n\n\n\n\nThe amount of token to be burned.\n\n\n\n\n\n\n\n\n\n\ndecreaseApproval(address,uint256)\n\n\n\n\nDecrease the amount of tokens that an owner allowed to a spender.   * approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_spender\n \nof type \naddress\n\n\n\n\nThe address which will spend the funds.\n\n\n\n\n\n\n\n\n_subtractedValue\n \nof type \nuint256\n\n\n\n\nThe amount of tokens to decrease the allowance by.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nsymbol()\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nstring\n\n\n\n\n\n\nmint(address,uint256)\n\n\n\n\nFunction to mint tokens\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_to\n \nof type \naddress\n\n\n\n\nThe address that will receive the minted tokens.\n\n\n\n\n\n\n\n\n_amount\n \nof type \nuint256\n\n\n\n\nThe amount of tokens to mint.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nA boolean that indicates if the operation was successful.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nfinishMinting()\n\n\n\n\nFunction to stop minting new tokens.\n\n\n\n\nExecution cost\n: less than 22080 gas\n\n\nReturns:\n\n\n\n\nTrue if the operation was successful.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nincreaseApproval(address,uint256)\n\n\n\n\nIncrease the amount of tokens that an owner allowed to a spender.   * approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\n\n\n\n\nExecution cost\n: less than 23173 gas\n\n\nParams:\n\n\n\n\n\n\n_spender\n \nof type \naddress\n\n\n\n\nThe address which will spend the funds.\n\n\n\n\n\n\n\n\n_addedValue\n \nof type \nuint256\n\n\n\n\nThe amount of tokens to increase the allowance by.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nmintingFinished()\n\n\nExecution cost\n: less than 459 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nname()\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nstring\n\n\n\n\n\n\nowner()\n\n\nExecution cost\n: less than 793 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\ntotalSupply()\n\n\n\n\ntotal number of tokens in existence\n\n\n\n\nExecution cost\n: less than 439 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\ntransfer(address,uint256)\n\n\n\n\ntransfer token for a specified address\n\n\n\n\nExecution cost\n: less than 43965 gas\n\n\nParams:\n\n\n\n\n\n\n_to\n \nof type \naddress\n\n\n\n\nThe address to transfer to.\n\n\n\n\n\n\n\n\n_value\n \nof type \nuint256\n\n\n\n\nThe amount to be transferred.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ntransferFrom(address,address,uint256)\n\n\n\n\nTransfer tokens from one address to another\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_from\n \nof type \naddress\n\n\n\n\naddress The address which you want to send tokens from\n\n\n\n\n\n\n\n\n_to\n \nof type \naddress\n\n\n\n\naddress The address which you want to transfer to\n\n\n\n\n\n\n\n\n_value\n \nof type \nuint256\n\n\n\n\nuint256 the amount of tokens to be transferred\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ntransferOwnership(address)\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost\n: less than 23118 gas\n\n\nParams:\n\n\n\n\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nThe address to transfer ownership to.\n\n\n\n\n\n\n\n\nBack to the top \u2191", 
            "title": "DAOToken"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#daotoken", 
            "text": "see the source   DAOToken, base on zeppelin contract.   Execution cost : No bound available  Deployment cost : less than 687800 gas  Combined cost : No bound available", 
            "title": "DAOToken"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#constructor", 
            "text": "Params:   _name   of type  string  _symbol   of type  string", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#approvaladdressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   owner   of type  address  spender   of type  address  value   of type  uint256", 
            "title": "Approval(address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#burnaddressuint256", 
            "text": "Execution cost : No bound available  Params:   burner   of type  address  value   of type  uint256", 
            "title": "Burn(address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#mintaddressuint256", 
            "text": "Execution cost : No bound available  Params:   to   of type  address  amount   of type  uint256", 
            "title": "Mint(address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#mintfinished", 
            "text": "Execution cost : No bound available", 
            "title": "MintFinished()"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#ownershiptransferredaddressaddress", 
            "text": "Execution cost : No bound available  Params:   previousOwner   of type  address  newOwner   of type  address", 
            "title": "OwnershipTransferred(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#transferaddressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   from   of type  address  to   of type  address  value   of type  uint256", 
            "title": "Transfer(address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#balanceofaddress", 
            "text": "Gets the balance of the specified address.   Execution cost : less than 796 gas  Attributes : constant  Params:    _owner   of type  address   The address to query the the balance of.     Returns:   An uint256 representing the amount owned by the passed address.    balance   of type  uint256", 
            "title": "balanceOf(address)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#destroyandsendaddress", 
            "text": "Execution cost : less than 30980 gas  Params:   _recipient   of type  address", 
            "title": "destroyAndSend(address)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#approveaddressuint256", 
            "text": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.   * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   Execution cost : less than 22377 gas  Params:    _spender   of type  address   The address which will spend the funds.     _value   of type  uint256   The amount of tokens to be spent.     Returns:   output_0   of type  bool", 
            "title": "approve(address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#allowanceaddressaddress", 
            "text": "Function to check the amount of tokens that an owner allowed to a spender.   Execution cost : less than 1049 gas  Attributes : constant  Params:    _owner   of type  address   address The address which owns the funds.     _spender   of type  address   address The address which will spend the funds.     Returns:   A uint256 specifying the amount of tokens still available for the spender.    output_0   of type  uint256", 
            "title": "allowance(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#destroy", 
            "text": "Transfers the current balance to the owner and terminates the contract.   Execution cost : less than 30945 gas", 
            "title": "destroy()"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#decimal", 
            "text": "Execution cost : less than 349 gas  Attributes : constant  Returns:   output_0   of type  uint256", 
            "title": "DECIMAL()"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#burnuint256", 
            "text": "Burns a specific amount of tokens.   Execution cost : No bound available  Params:    _value   of type  uint256   The amount of token to be burned.", 
            "title": "burn(uint256)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#decreaseapprovaladdressuint256", 
            "text": "Decrease the amount of tokens that an owner allowed to a spender.   * approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol   Execution cost : No bound available  Params:    _spender   of type  address   The address which will spend the funds.     _subtractedValue   of type  uint256   The amount of tokens to decrease the allowance by.     Returns:   output_0   of type  bool", 
            "title": "decreaseApproval(address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#symbol", 
            "text": "Execution cost : No bound available  Attributes : constant  Returns:   output_0   of type  string", 
            "title": "symbol()"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#mintaddressuint256_1", 
            "text": "Function to mint tokens   Execution cost : No bound available  Params:    _to   of type  address   The address that will receive the minted tokens.     _amount   of type  uint256   The amount of tokens to mint.     Returns:   A boolean that indicates if the operation was successful.    output_0   of type  bool", 
            "title": "mint(address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#finishminting", 
            "text": "Function to stop minting new tokens.   Execution cost : less than 22080 gas  Returns:   True if the operation was successful.    output_0   of type  bool", 
            "title": "finishMinting()"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#increaseapprovaladdressuint256", 
            "text": "Increase the amount of tokens that an owner allowed to a spender.   * approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol   Execution cost : less than 23173 gas  Params:    _spender   of type  address   The address which will spend the funds.     _addedValue   of type  uint256   The amount of tokens to increase the allowance by.     Returns:   output_0   of type  bool", 
            "title": "increaseApproval(address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#mintingfinished", 
            "text": "Execution cost : less than 459 gas  Attributes : constant  Returns:   output_0   of type  bool", 
            "title": "mintingFinished()"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#name", 
            "text": "Execution cost : No bound available  Attributes : constant  Returns:   output_0   of type  string", 
            "title": "name()"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#owner", 
            "text": "Execution cost : less than 793 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "owner()"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#totalsupply", 
            "text": "total number of tokens in existence   Execution cost : less than 439 gas  Attributes : constant  Returns:   output_0   of type  uint256", 
            "title": "totalSupply()"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#transferaddressuint256", 
            "text": "transfer token for a specified address   Execution cost : less than 43965 gas  Params:    _to   of type  address   The address to transfer to.     _value   of type  uint256   The amount to be transferred.     Returns:   output_0   of type  bool", 
            "title": "transfer(address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#transferfromaddressaddressuint256", 
            "text": "Transfer tokens from one address to another   Execution cost : No bound available  Params:    _from   of type  address   address The address which you want to send tokens from     _to   of type  address   address The address which you want to transfer to     _value   of type  uint256   uint256 the amount of tokens to be transferred     Returns:   output_0   of type  bool", 
            "title": "transferFrom(address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/DAOToken/#transferownershipaddress", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost : less than 23118 gas  Params:    newOwner   of type  address   The address to transfer ownership to.     Back to the top \u2191", 
            "title": "transferOwnership(address)"
        }, 
        {
            "location": "/generated_docs/controller/Reputation/", 
            "text": "Reputation\n\n\nsee the source\n\n\n\n\nSimple static reputation storage\n\n\n\n\nExecution cost\n: less than 50663 gas\n\n\nDeployment cost\n: less than 168000 gas\n\n\nCombined cost\n: less than 218663 gas\n\n\nConstructor\n\n\nEvents\n\n\nMint(address,int256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nto\n \nof type \naddress\n\n\namount\n \nof type \nint256\n\n\n\n\n\n\nOwnershipTransferred(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type \naddress\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nMethods\n\n\ndecimals()\n\n\nExecution cost\n: less than 395 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nmint(address,int256)\n\n\n\n\nadding/reducing reputation of a given address, updating the total supply, and triggering an event of the operation.\n\n\n\n\nExecution cost\n: less than 43407 gas\n\n\nParams:\n\n\n\n\n\n\n_to\n \nof type \naddress\n\n\n\n\nthe address which we gives/takes reputation amount\n\n\n\n\n\n\n\n\n_amount\n \nof type \nint256\n\n\n\n\nthe reputation amount to be added/reduced\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a successful of the function\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nowner()\n\n\nExecution cost\n: less than 573 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nreputationOf(address)\n\n\n\n\nreturn the reputation amount of a given owner\n\n\n\n\nExecution cost\n: less than 661 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_owner\n \nof type \naddress\n\n\n\n\nan address of the owner which we want to get his reputation\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbalance\n \nof type \nuint256\n\n\n\n\n\n\ntotalSupply()\n\n\nExecution cost\n: less than 373 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\ntransferOwnership(address)\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost\n: less than 22832 gas\n\n\nParams:\n\n\n\n\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nThe address to transfer ownership to.\n\n\n\n\n\n\n\n\nBack to the top \u2191", 
            "title": "Reputation"
        }, 
        {
            "location": "/generated_docs/controller/Reputation/#reputation", 
            "text": "see the source   Simple static reputation storage   Execution cost : less than 50663 gas  Deployment cost : less than 168000 gas  Combined cost : less than 218663 gas", 
            "title": "Reputation"
        }, 
        {
            "location": "/generated_docs/controller/Reputation/#constructor", 
            "text": "", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/controller/Reputation/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/controller/Reputation/#mintaddressint256", 
            "text": "Execution cost : No bound available  Params:   to   of type  address  amount   of type  int256", 
            "title": "Mint(address,int256)"
        }, 
        {
            "location": "/generated_docs/controller/Reputation/#ownershiptransferredaddressaddress", 
            "text": "Execution cost : No bound available  Params:   previousOwner   of type  address  newOwner   of type  address", 
            "title": "OwnershipTransferred(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/Reputation/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/controller/Reputation/#decimals", 
            "text": "Execution cost : less than 395 gas  Attributes : constant  Returns:   output_0   of type  uint256", 
            "title": "decimals()"
        }, 
        {
            "location": "/generated_docs/controller/Reputation/#mintaddressint256_1", 
            "text": "adding/reducing reputation of a given address, updating the total supply, and triggering an event of the operation.   Execution cost : less than 43407 gas  Params:    _to   of type  address   the address which we gives/takes reputation amount     _amount   of type  int256   the reputation amount to be added/reduced     Returns:   bool which represents a successful of the function    output_0   of type  bool", 
            "title": "mint(address,int256)"
        }, 
        {
            "location": "/generated_docs/controller/Reputation/#owner", 
            "text": "Execution cost : less than 573 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "owner()"
        }, 
        {
            "location": "/generated_docs/controller/Reputation/#reputationofaddress", 
            "text": "return the reputation amount of a given owner   Execution cost : less than 661 gas  Attributes : constant  Params:    _owner   of type  address   an address of the owner which we want to get his reputation     Returns:   balance   of type  uint256", 
            "title": "reputationOf(address)"
        }, 
        {
            "location": "/generated_docs/controller/Reputation/#totalsupply", 
            "text": "Execution cost : less than 373 gas  Attributes : constant  Returns:   output_0   of type  uint256", 
            "title": "totalSupply()"
        }, 
        {
            "location": "/generated_docs/controller/Reputation/#transferownershipaddress", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost : less than 22832 gas  Params:    newOwner   of type  address   The address to transfer ownership to.     Back to the top \u2191", 
            "title": "transferOwnership(address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/", 
            "text": "UController\n\n\nsee the source\n\n\n\n\nUniversal Controller contract\n\n\n\n\nExecution cost\n: less than 3847 gas\n\n\nDeployment cost\n: less than 3446000 gas\n\n\nCombined cost\n: less than 3449847 gas\n\n\nConstructor\n\n\nEvents\n\n\nExternalTokenTransfer(address,address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_externalToken\n \nof type \naddress\n\n\n_to\n \nof type \naddress\n\n\n_value\n \nof type \nuint256\n\n\n\n\n\n\nMintReputation(address,address,int256,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_beneficiary\n \nof type \naddress\n\n\n_amount\n \nof type \nint256\n\n\n_avatar\n \nof type \naddress\n\n\n\n\n\n\nAddGlobalConstraint(address,bytes32,uint8,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_globalConstraint\n \nof type \naddress\n\n\n_params\n \nof type \nbytes32\n\n\n_when\n \nof type \nuint8\n\n\n_avatar\n \nof type \naddress\n\n\n\n\n\n\nExternalTokenDecreaseApproval(address,address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_externalToken\n \nof type \naddress\n\n\n_spender\n \nof type \naddress\n\n\n_value\n \nof type \nuint256\n\n\n\n\n\n\nGenericAction(address,bytes32[])\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_params\n \nof type \nbytes32[]\n\n\n\n\n\n\nExternalTokenIncreaseApproval(address,address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_externalToken\n \nof type \naddress\n\n\n_spender\n \nof type \naddress\n\n\n_value\n \nof type \nuint256\n\n\n\n\n\n\nExternalTokenTransferFrom(address,address,address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_externalToken\n \nof type \naddress\n\n\n_from\n \nof type \naddress\n\n\n_to\n \nof type \naddress\n\n\n_value\n \nof type \nuint256\n\n\n\n\n\n\nMintTokens(address,address,uint256,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_beneficiary\n \nof type \naddress\n\n\n_amount\n \nof type \nuint256\n\n\n_avatar\n \nof type \naddress\n\n\n\n\n\n\nRegisterScheme(address,address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_scheme\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\n\n\nRemoveGlobalConstraint(address,uint256,bool,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_globalConstraint\n \nof type \naddress\n\n\n_index\n \nof type \nuint256\n\n\n_isPre\n \nof type \nbool\n\n\n_avatar\n \nof type \naddress\n\n\n\n\n\n\nSendEther(address,uint256,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_amountInWei\n \nof type \nuint256\n\n\n_to\n \nof type \naddress\n\n\n\n\n\n\nUnregisterScheme(address,address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_sender\n \nof type \naddress\n\n\n_scheme\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\n\n\nUpgradeController(address,address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_oldController\n \nof type \naddress\n\n\n_newController\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nMethods\n\n\nmintReputation(int256,address,address)\n\n\n\n\nmint reputation .\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_amount\n \nof type \nint256\n\n\n\n\namount of reputation to mint\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nbeneficiary address\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexternalTokenTransferFrom(address,address,address,uint256,address)\n\n\n\n\ntransfer token \"from\" address \"to\" address     One must to approve the amount of tokens which can be spend from the     \"from\" account.This can be done using externalTokenApprove.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n\n\nthe address of the Token Contract\n\n\n\n\n\n\n\n\n_from\n \nof type \naddress\n\n\n\n\naddress of the account to send from\n\n\n\n\n\n\n\n\n_to\n \nof type \naddress\n\n\n\n\naddress of the beneficiary\n\n\n\n\n\n\n\n\n_value\n \nof type \nuint256\n\n\n\n\nthe amount of ether (in Wei) to send\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\naddGlobalConstraint(address,bytes32,address)\n\n\n\n\nadd or update Global Constraint\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_globalConstraint\n \nof type \naddress\n\n\n\n\nthe address of the global constraint to be added.\n\n\n\n\n\n\n\n\n_params\n \nof type \nbytes32\n\n\n\n\nthe constraint parameters hash.\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe avatar of the organization\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexternalTokenDecreaseApproval(address,address,uint256,address)\n\n\n\n\ndecrease approval for the spender address to spend a specified amount of tokens     on behalf of msg.sender.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n\n\nthe address of the Token Contract\n\n\n\n\n\n\n\n\n_spender\n \nof type \naddress\n\n\n\n\naddress\n\n\n\n\n\n\n\n\n_subtractedValue\n \nof type \nuint256\n\n\n\n\nthe amount of ether (in Wei) which the approval is referring to.\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexternalTokenTransfer(address,address,uint256,address)\n\n\n\n\nsend some amount of arbitrary ERC20 Tokens\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n\n\nthe address of the Token Contract\n\n\n\n\n\n\n\n\n_to\n \nof type \naddress\n\n\n\n\naddress of the beneficiary\n\n\n\n\n\n\n\n\n_value\n \nof type \nuint256\n\n\n\n\nthe amount of ether (in Wei) to send\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexternalTokenIncreaseApproval(address,address,uint256,address)\n\n\n\n\nincrease approval for the spender address to spend a specified amount of tokens     on behalf of msg.sender.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n\n\nthe address of the Token Contract\n\n\n\n\n\n\n\n\n_spender\n \nof type \naddress\n\n\n\n\naddress\n\n\n\n\n\n\n\n\n_addedValue\n \nof type \nuint256\n\n\n\n\nthe amount of ether (in Wei) which the approval is referring to.\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nisSchemeRegistered(address,address)\n\n\nExecution cost\n: less than 1151 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nsendEther(uint256,address,address)\n\n\n\n\nsend some ether\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_amountInWei\n \nof type \nuint256\n\n\n\n\nthe amount of ether (in Wei) to send\n\n\n\n\n\n\n\n\n_to\n \nof type \naddress\n\n\n\n\naddress of the beneficiary\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ngenericAction(bytes32[],address)\n\n\n\n\ndo a generic delegate call to the contract which called us. This function use delegatecall and might expose the organization to security risk. Use this function only if you really knows what you are doing.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_params\n \nof type \nbytes32[]\n\n\n\n\nthe params for the call.\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nisGlobalConstraintRegistered(address,address)\n\n\nExecution cost\n: less than 1661 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_globalConstraint\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ngetSchemeParameters(address,address)\n\n\nExecution cost\n: less than 789 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nglobalConstraintsCount(address)\n\n\n\n\nglobalConstraintsCount return the global constraint pre and post count\n\n\n\n\nExecution cost\n: less than 1148 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\nuint globalConstraintsPre count.uint globalConstraintsPost count.\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\noutput_1\n \nof type \nuint256\n\n\n\n\n\n\ngetSchemePermissions(address,address)\n\n\nExecution cost\n: less than 1120 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes4\n\n\n\n\n\n\nmintTokens(uint256,address,address)\n\n\n\n\nmint tokens .\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_amount\n \nof type \nuint256\n\n\n\n\namount of token to mint\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nbeneficiary address\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nnewOrganization(address)\n\n\n\n\nnewOrganization set up a new organization with default daoCreator.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar\n\n\n\n\n\n\n\n\n\n\nnewControllers(address)\n\n\nExecution cost\n: less than 824 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nremoveGlobalConstraint(address,address)\n\n\n\n\nremove Global Constraint\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_globalConstraint\n \nof type \naddress\n\n\n\n\nthe address of the global constraint to be remove.\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nregisterScheme(address,bytes32,bytes4,address)\n\n\n\n\nregister or update a scheme\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n\n\nthe address of the scheme\n\n\n\n\n\n\n\n\n_paramsHash\n \nof type \nbytes32\n\n\n\n\na hashed configuration of the usage of the scheme\n\n\n\n\n\n\n\n\n_permissions\n \nof type \nbytes4\n\n\n\n\nthe permissions the new scheme will have\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nunregisterScheme(address,address)\n\n\n\n\nunregister a scheme\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n\n\nthe address of the scheme\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nunregisterSelf(address)\n\n\n\n\nunregister the caller's scheme\n\n\n\n\nExecution cost\n: less than 28509 gas\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nupgradeController(address,address)\n\n\n\n\nupgrade the Controller     The function will trigger an event 'UpgradeController'.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_newController\n \nof type \naddress\n\n\n\n\nthe address of the new controller.\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\nBack to the top \u2191", 
            "title": "UController"
        }, 
        {
            "location": "/generated_docs/controller/UController/#ucontroller", 
            "text": "see the source   Universal Controller contract   Execution cost : less than 3847 gas  Deployment cost : less than 3446000 gas  Combined cost : less than 3449847 gas", 
            "title": "UController"
        }, 
        {
            "location": "/generated_docs/controller/UController/#constructor", 
            "text": "", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/controller/UController/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/controller/UController/#externaltokentransferaddressaddressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _externalToken   of type  address  _to   of type  address  _value   of type  uint256", 
            "title": "ExternalTokenTransfer(address,address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#mintreputationaddressaddressint256address", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _beneficiary   of type  address  _amount   of type  int256  _avatar   of type  address", 
            "title": "MintReputation(address,address,int256,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#addglobalconstraintaddressbytes32uint8address", 
            "text": "Execution cost : No bound available  Params:   _globalConstraint   of type  address  _params   of type  bytes32  _when   of type  uint8  _avatar   of type  address", 
            "title": "AddGlobalConstraint(address,bytes32,uint8,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#externaltokendecreaseapprovaladdressaddressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _externalToken   of type  address  _spender   of type  address  _value   of type  uint256", 
            "title": "ExternalTokenDecreaseApproval(address,address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#genericactionaddressbytes32", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _params   of type  bytes32[]", 
            "title": "GenericAction(address,bytes32[])"
        }, 
        {
            "location": "/generated_docs/controller/UController/#externaltokenincreaseapprovaladdressaddressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _externalToken   of type  address  _spender   of type  address  _value   of type  uint256", 
            "title": "ExternalTokenIncreaseApproval(address,address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#externaltokentransferfromaddressaddressaddressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _externalToken   of type  address  _from   of type  address  _to   of type  address  _value   of type  uint256", 
            "title": "ExternalTokenTransferFrom(address,address,address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#minttokensaddressaddressuint256address", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _beneficiary   of type  address  _amount   of type  uint256  _avatar   of type  address", 
            "title": "MintTokens(address,address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#registerschemeaddressaddressaddress", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _scheme   of type  address  _avatar   of type  address", 
            "title": "RegisterScheme(address,address,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#removeglobalconstraintaddressuint256booladdress", 
            "text": "Execution cost : No bound available  Params:   _globalConstraint   of type  address  _index   of type  uint256  _isPre   of type  bool  _avatar   of type  address", 
            "title": "RemoveGlobalConstraint(address,uint256,bool,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#sendetheraddressuint256address", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _amountInWei   of type  uint256  _to   of type  address", 
            "title": "SendEther(address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#unregisterschemeaddressaddressaddress", 
            "text": "Execution cost : No bound available  Params:   _sender   of type  address  _scheme   of type  address  _avatar   of type  address", 
            "title": "UnregisterScheme(address,address,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#upgradecontrolleraddressaddressaddress", 
            "text": "Execution cost : No bound available  Params:   _oldController   of type  address  _newController   of type  address  _avatar   of type  address", 
            "title": "UpgradeController(address,address,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/controller/UController/#mintreputationint256addressaddress", 
            "text": "mint reputation .   Execution cost : No bound available  Params:    _amount   of type  int256   amount of reputation to mint     _beneficiary   of type  address   beneficiary address     _avatar   of type  address   the organization avatar.     Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "mintReputation(int256,address,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#externaltokentransferfromaddressaddressaddressuint256address", 
            "text": "transfer token \"from\" address \"to\" address     One must to approve the amount of tokens which can be spend from the     \"from\" account.This can be done using externalTokenApprove.   Execution cost : No bound available  Params:    _externalToken   of type  address   the address of the Token Contract     _from   of type  address   address of the account to send from     _to   of type  address   address of the beneficiary     _value   of type  uint256   the amount of ether (in Wei) to send     _avatar   of type  address   the organization avatar.     Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "externalTokenTransferFrom(address,address,address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#addglobalconstraintaddressbytes32address", 
            "text": "add or update Global Constraint   Execution cost : No bound available  Params:    _globalConstraint   of type  address   the address of the global constraint to be added.     _params   of type  bytes32   the constraint parameters hash.     _avatar   of type  address   the avatar of the organization     Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "addGlobalConstraint(address,bytes32,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#externaltokendecreaseapprovaladdressaddressuint256address", 
            "text": "decrease approval for the spender address to spend a specified amount of tokens     on behalf of msg.sender.   Execution cost : No bound available  Params:    _externalToken   of type  address   the address of the Token Contract     _spender   of type  address   address     _subtractedValue   of type  uint256   the amount of ether (in Wei) which the approval is referring to.     _avatar   of type  address   the organization avatar.     Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "externalTokenDecreaseApproval(address,address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#externaltokentransferaddressaddressuint256address", 
            "text": "send some amount of arbitrary ERC20 Tokens   Execution cost : No bound available  Params:    _externalToken   of type  address   the address of the Token Contract     _to   of type  address   address of the beneficiary     _value   of type  uint256   the amount of ether (in Wei) to send     _avatar   of type  address   the organization avatar.     Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "externalTokenTransfer(address,address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#externaltokenincreaseapprovaladdressaddressuint256address", 
            "text": "increase approval for the spender address to spend a specified amount of tokens     on behalf of msg.sender.   Execution cost : No bound available  Params:    _externalToken   of type  address   the address of the Token Contract     _spender   of type  address   address     _addedValue   of type  uint256   the amount of ether (in Wei) which the approval is referring to.     _avatar   of type  address   the organization avatar.     Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "externalTokenIncreaseApproval(address,address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#isschemeregisteredaddressaddress", 
            "text": "Execution cost : less than 1151 gas  Attributes : constant  Params:   _scheme   of type  address  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "isSchemeRegistered(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#sendetheruint256addressaddress", 
            "text": "send some ether   Execution cost : No bound available  Params:    _amountInWei   of type  uint256   the amount of ether (in Wei) to send     _to   of type  address   address of the beneficiary     _avatar   of type  address   the organization avatar.     Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "sendEther(uint256,address,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#genericactionbytes32address", 
            "text": "do a generic delegate call to the contract which called us. This function use delegatecall and might expose the organization to security risk. Use this function only if you really knows what you are doing.   Execution cost : No bound available  Params:    _params   of type  bytes32[]   the params for the call.     _avatar   of type  address   the organization avatar.     Returns:   bool which represents success    output_0   of type  bool", 
            "title": "genericAction(bytes32[],address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#isglobalconstraintregisteredaddressaddress", 
            "text": "Execution cost : less than 1661 gas  Attributes : constant  Params:   _globalConstraint   of type  address  _avatar   of type  address   Returns:   output_0   of type  bool", 
            "title": "isGlobalConstraintRegistered(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#getschemeparametersaddressaddress", 
            "text": "Execution cost : less than 789 gas  Attributes : constant  Params:   _scheme   of type  address  _avatar   of type  address   Returns:   output_0   of type  bytes32", 
            "title": "getSchemeParameters(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#globalconstraintscountaddress", 
            "text": "globalConstraintsCount return the global constraint pre and post count   Execution cost : less than 1148 gas  Attributes : constant  Params:   _avatar   of type  address   Returns:   uint globalConstraintsPre count.uint globalConstraintsPost count.    output_0   of type  uint256  output_1   of type  uint256", 
            "title": "globalConstraintsCount(address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#getschemepermissionsaddressaddress", 
            "text": "Execution cost : less than 1120 gas  Attributes : constant  Params:   _scheme   of type  address  _avatar   of type  address   Returns:   output_0   of type  bytes4", 
            "title": "getSchemePermissions(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#minttokensuint256addressaddress", 
            "text": "mint tokens .   Execution cost : No bound available  Params:    _amount   of type  uint256   amount of token to mint     _beneficiary   of type  address   beneficiary address     _avatar   of type  address   the organization avatar.     Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "mintTokens(uint256,address,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#neworganizationaddress", 
            "text": "newOrganization set up a new organization with default daoCreator.   Execution cost : No bound available  Params:    _avatar   of type  address   the organization avatar", 
            "title": "newOrganization(address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#newcontrollersaddress", 
            "text": "Execution cost : less than 824 gas  Attributes : constant  Params:   param_0   of type  address   Returns:   output_0   of type  address", 
            "title": "newControllers(address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#removeglobalconstraintaddressaddress", 
            "text": "remove Global Constraint   Execution cost : No bound available  Params:    _globalConstraint   of type  address   the address of the global constraint to be remove.     _avatar   of type  address   the organization avatar.     Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "removeGlobalConstraint(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#registerschemeaddressbytes32bytes4address", 
            "text": "register or update a scheme   Execution cost : No bound available  Params:    _scheme   of type  address   the address of the scheme     _paramsHash   of type  bytes32   a hashed configuration of the usage of the scheme     _permissions   of type  bytes4   the permissions the new scheme will have     _avatar   of type  address   the organization avatar.     Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "registerScheme(address,bytes32,bytes4,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#unregisterschemeaddressaddress", 
            "text": "unregister a scheme   Execution cost : No bound available  Params:    _scheme   of type  address   the address of the scheme     _avatar   of type  address   the organization avatar.     Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "unregisterScheme(address,address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#unregisterselfaddress", 
            "text": "unregister the caller's scheme   Execution cost : less than 28509 gas  Params:    _avatar   of type  address   the organization avatar.     Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "unregisterSelf(address)"
        }, 
        {
            "location": "/generated_docs/controller/UController/#upgradecontrolleraddressaddress", 
            "text": "upgrade the Controller     The function will trigger an event 'UpgradeController'.   Execution cost : No bound available  Params:    _newController   of type  address   the address of the new controller.     _avatar   of type  address   the organization avatar.     Returns:   bool which represents a success    output_0   of type  bool   Back to the top \u2191", 
            "title": "upgradeController(address,address)"
        }, 
        {
            "location": "/generated_docs/globalConstraints/GlobalConstraintInterface/", 
            "text": "GlobalConstraintInterface\n\n\nsee the source\n\n\nExecution cost\n: No bound available\n\n\nDeployment cost\n: No bound available\n\n\nCombined cost\n: No bound available\n\n\nMethods\n\n\npost(address,bytes32,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n_params\n \nof type \nbytes32\n\n\n_method\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\npre(address,bytes32,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n_params\n \nof type \nbytes32\n\n\n_method\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nwhen()\n\n\nExecution cost\n: No bound available\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nuint8\n\n\n\n\nBack to the top \u2191", 
            "title": "GlobalConstraintInterface"
        }, 
        {
            "location": "/generated_docs/globalConstraints/GlobalConstraintInterface/#globalconstraintinterface", 
            "text": "see the source  Execution cost : No bound available  Deployment cost : No bound available  Combined cost : No bound available", 
            "title": "GlobalConstraintInterface"
        }, 
        {
            "location": "/generated_docs/globalConstraints/GlobalConstraintInterface/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/globalConstraints/GlobalConstraintInterface/#postaddressbytes32bytes32", 
            "text": "Execution cost : No bound available  Params:   _scheme   of type  address  _params   of type  bytes32  _method   of type  bytes32   Returns:   output_0   of type  bool", 
            "title": "post(address,bytes32,bytes32)"
        }, 
        {
            "location": "/generated_docs/globalConstraints/GlobalConstraintInterface/#preaddressbytes32bytes32", 
            "text": "Execution cost : No bound available  Params:   _scheme   of type  address  _params   of type  bytes32  _method   of type  bytes32   Returns:   output_0   of type  bool", 
            "title": "pre(address,bytes32,bytes32)"
        }, 
        {
            "location": "/generated_docs/globalConstraints/GlobalConstraintInterface/#when", 
            "text": "Execution cost : No bound available  Returns:   output_0   of type  uint8   Back to the top \u2191", 
            "title": "when()"
        }, 
        {
            "location": "/generated_docs/globalConstraints/TokenCapGC/", 
            "text": "TokenCapGC\n\n\nsee the source\n\n\n\n\nToken Cap Global Constraint\n\n\n\n\nExecution cost\n: less than 233 gas\n\n\nDeployment cost\n: less than 197600 gas\n\n\nCombined cost\n: less than 197833 gas\n\n\nMethods\n\n\ngetParametersHash(address,uint256)\n\n\n\n\ncalculate and returns the hash of the given parameters\n\n\n\n\nExecution cost\n: less than 485 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_token\n \nof type \naddress\n\n\n\n\nthe token to add to the params.\n\n\n\n\n\n\n\n\n_cap\n \nof type \nuint256\n\n\n\n\nthe cap to check the total supply against.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nthe calculated parameters hash\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nparams(bytes32)\n\n\nExecution cost\n: less than 934 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\ntoken\n \nof type \naddress\n\n\ncap\n \nof type \nuint256\n\n\n\n\n\n\npost(address,bytes32,bytes)\n\n\n\n\ncheck the total supply cap.\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\n\n\n_paramsHash\n \nof type \nbytes32\n\n\n\n\nthe parameters hash to check the total supply cap against.\n\n\n\n\n\n\n\n\nparam_2\n \nof type \nbytes\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a success\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\npre(address,bytes32,bytes)\n\n\n\n\ncheck the constraint after the action. This global constraint only checks the state after the action, so here we just return true:\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\nparam_1\n \nof type \nbytes32\n\n\nparam_2\n \nof type \nbytes\n\n\n\n\nReturns:\n\n\n\n\ntrue\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nsetParameters(address,uint256)\n\n\n\n\nadding a new set of parameters\n\n\n\n\nExecution cost\n: less than 40976 gas\n\n\nParams:\n\n\n\n\n\n\n_token\n \nof type \naddress\n\n\n\n\nthe token to add to the params.\n\n\n\n\n\n\n\n\n_cap\n \nof type \nuint256\n\n\n\n\nthe cap to check the total supply against.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nthe calculated parameters hash\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nwhen()\n\n\n\n\nwhen return if this globalConstraints is pre, post or both.\n\n\n\n\nExecution cost\n: less than 325 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\nCallPhase enum indication  Pre, Post or PreAndPost.\n\n\n\n\n\n\noutput_0\n \nof type \nuint8\n\n\n\n\nBack to the top \u2191", 
            "title": "TokenCapGC"
        }, 
        {
            "location": "/generated_docs/globalConstraints/TokenCapGC/#tokencapgc", 
            "text": "see the source   Token Cap Global Constraint   Execution cost : less than 233 gas  Deployment cost : less than 197600 gas  Combined cost : less than 197833 gas", 
            "title": "TokenCapGC"
        }, 
        {
            "location": "/generated_docs/globalConstraints/TokenCapGC/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/globalConstraints/TokenCapGC/#getparametershashaddressuint256", 
            "text": "calculate and returns the hash of the given parameters   Execution cost : less than 485 gas  Attributes : constant  Params:    _token   of type  address   the token to add to the params.     _cap   of type  uint256   the cap to check the total supply against.     Returns:   the calculated parameters hash    output_0   of type  bytes32", 
            "title": "getParametersHash(address,uint256)"
        }, 
        {
            "location": "/generated_docs/globalConstraints/TokenCapGC/#paramsbytes32", 
            "text": "Execution cost : less than 934 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   token   of type  address  cap   of type  uint256", 
            "title": "params(bytes32)"
        }, 
        {
            "location": "/generated_docs/globalConstraints/TokenCapGC/#postaddressbytes32bytes", 
            "text": "check the total supply cap.   Execution cost : No bound available  Attributes : constant  Params:   param_0   of type  address   _paramsHash   of type  bytes32   the parameters hash to check the total supply cap against.     param_2   of type  bytes    Returns:   bool which represents a success    output_0   of type  bool", 
            "title": "post(address,bytes32,bytes)"
        }, 
        {
            "location": "/generated_docs/globalConstraints/TokenCapGC/#preaddressbytes32bytes", 
            "text": "check the constraint after the action. This global constraint only checks the state after the action, so here we just return true:   Execution cost : No bound available  Attributes : constant  Params:   param_0   of type  address  param_1   of type  bytes32  param_2   of type  bytes   Returns:   true    output_0   of type  bool", 
            "title": "pre(address,bytes32,bytes)"
        }, 
        {
            "location": "/generated_docs/globalConstraints/TokenCapGC/#setparametersaddressuint256", 
            "text": "adding a new set of parameters   Execution cost : less than 40976 gas  Params:    _token   of type  address   the token to add to the params.     _cap   of type  uint256   the cap to check the total supply against.     Returns:   the calculated parameters hash    output_0   of type  bytes32", 
            "title": "setParameters(address,uint256)"
        }, 
        {
            "location": "/generated_docs/globalConstraints/TokenCapGC/#when", 
            "text": "when return if this globalConstraints is pre, post or both.   Execution cost : less than 325 gas  Attributes : constant  Returns:   CallPhase enum indication  Pre, Post or PreAndPost.    output_0   of type  uint8   Back to the top \u2191", 
            "title": "when()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/", 
            "text": "ContributionReward\n\n\nsee the source\n\n\n\n\nA scheme for proposing and rewarding contributions to an organization\n\n\n\n\nExecution cost\n: less than 21874 gas\n\n\nDeployment cost\n: less than 1445600 gas\n\n\nCombined cost\n: less than 1467474 gas\n\n\nConstructor\n\n\nEvents\n\n\nNewContributionProposal(address,bytes32,address,bytes32,int256,uint256[5],address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_intVoteInterface\n \nof type \naddress\n\n\n_contributionDescription\n \nof type \nbytes32\n\n\n_reputationChange\n \nof type \nint256\n\n\n_rewards\n \nof type \nuint256[5]\n\n\n_externalToken\n \nof type \naddress\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\n\n\nNewProposal(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nproposalId\n \nof type \nbytes32\n\n\n\n\n\n\nOwnershipTransferred(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type \naddress\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\n\n\nProposalDeleted(address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\n\n\nProposalExecuted(address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\n\n\nRedeemEther(address,bytes32,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_beneficiary\n \nof type \naddress\n\n\n_amount\n \nof type \nuint256\n\n\n\n\n\n\nRedeemExternalToken(address,bytes32,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_beneficiary\n \nof type \naddress\n\n\n_amount\n \nof type \nuint256\n\n\n\n\n\n\nRedeemNativeToken(address,bytes32,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_beneficiary\n \nof type \naddress\n\n\n_amount\n \nof type \nuint256\n\n\n\n\n\n\nRedeemReputation(address,bytes32,address,int256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_beneficiary\n \nof type \naddress\n\n\n_amount\n \nof type \nint256\n\n\n\n\nMethods\n\n\ngetParametersHash(uint256,bytes32,address)\n\n\n\n\nreturn a hash of the given parameters\n\n\n\n\nExecution cost\n: less than 755 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_orgNativeTokenFee\n \nof type \nuint256\n\n\n\n\nthe fee for submitting a contribution in organizations native token\n\n\n\n\n\n\n\n\n_voteApproveParams\n \nof type \nbytes32\n\n\n\n\nparameters for the voting machine used to approve a contribution\n\n\n\n\n\n\n\n\n_intVote\n \nof type \naddress\n\n\n\n\nthe voting machine used to approve a contribution\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\na hash of the parameters\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nhashedParameters()\n\n\nExecution cost\n: less than 766 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ngetPeriodsToPay(bytes32,address,uint256)\n\n\n\n\ngetPeriodsToPay return the periods left to be paid for reputation,nativeToken,ether or externalToken. The function ignore the reward amount to be paid (which can be zero).\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the voting in the voting machine\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\naddress of the controller\n\n\n\n\n\n\n\n\n_redeemType\n \nof type \nuint256\n\n\n\n\n\n\nthe type of the reward  :        0 - reputation        1 - nativeTokenReward        2 - Ether        3 - ExternalToken\n\n\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nperiods left to be paid.\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nexecute(bytes32,address,int256)\n\n\n\n\nexecution of proposals, can only be called by the voting machine in which the vote is held.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the voting in the voting machine\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\naddress of the controller\n\n\n\n\n\n\n\n\n_param\n \nof type \nint256\n\n\n\n\na parameter of the voting result, 1 yes and 2 is no.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nredeemEther(bytes32,address)\n\n\n\n\nRedeemEther reward for proposal\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the voting in the voting machine\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\naddress of the controller\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nresult boolean for success indication.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nparameters(bytes32)\n\n\nExecution cost\n: less than 1148 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\norgNativeTokenFee\n \nof type \nuint256\n\n\nvoteApproveParams\n \nof type \nbytes32\n\n\nintVote\n \nof type \naddress\n\n\n\n\n\n\nowner()\n\n\nExecution cost\n: less than 721 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\norganizationsProposals(address,bytes32)\n\n\nExecution cost\n: less than 2981 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\nparam_1\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\ncontributionDescriptionHash\n \nof type \nbytes32\n\n\nnativeTokenReward\n \nof type \nuint256\n\n\nreputationChange\n \nof type \nint256\n\n\nethReward\n \nof type \nuint256\n\n\nexternalToken\n \nof type \naddress\n\n\nexternalTokenReward\n \nof type \nuint256\n\n\nbeneficiary\n \nof type \naddress\n\n\nperiodLength\n \nof type \nuint256\n\n\nnumberOfPeriods\n \nof type \nuint256\n\n\nexecutionTime\n \nof type \nuint256\n\n\n\n\n\n\nproposeContributionReward(address,bytes32,int256,uint256[5],address,address)\n\n\n\n\nSubmit a proposal for a reward for a contribution:\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nAvatar of the organization that the contribution was made for\n\n\n\n\n\n\n\n\n_contributionDescriptionHash\n \nof type \nbytes32\n\n\n\n\nA hash of the contribution's description\n\n\n\n\n\n\n\n\n_reputationChange\n \nof type \nint256\n\n\n\n\n\n\nAmount of reputation change requested .Can be negative.\n\n\n\n\n\n\n\n\n\n\n_rewards\n \nof type \nuint256[5]\n\n\n\n\nrewards array:        rewards[0] - Amount of tokens requested per period        rewards[1] - Amount of ETH requested per period        rewards[2] - Amount of external tokens requested per period        rewards[3] - Period length        rewards[4] - Number of periods\n\n\n\n\n\n\n\n\n_externalToken\n \nof type \naddress\n\n\n\n\nAddress of external token, if reward is requested there\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nWho gets the rewards\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nredeem(bytes32,address,bool[4])\n\n\n\n\nredeem rewards for proposal\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the voting in the voting machine\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\naddress of the controller\n\n\n\n\n\n\n\n\n_whatToRedeem\n \nof type \nbool[4]\n\n\n\n\nwhatToRedeem array:        whatToRedeem[0] - reputation        whatToRedeem[1] - nativeTokenReward        whatToRedeem[2] - Ether        whatToRedeem[3] - ExternalToken\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nresult boolean array for each redeem type.\n\n\n\n\n\n\nresult\n \nof type \nbool[4]\n\n\n\n\n\n\nredeemExternalToken(bytes32,address)\n\n\n\n\nRedeemNativeToken reward for proposal\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the voting in the voting machine\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\naddress of the controller\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nresult boolean for success indication.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nredeemNativeToken(bytes32,address)\n\n\n\n\nRedeemNativeToken reward for proposal\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the voting in the voting machine\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\naddress of the controller\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nresult boolean for success indication.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nredeemReputation(bytes32,address)\n\n\n\n\nRedeemReputation reward for proposal\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the voting in the voting machine\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\naddress of the controller\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nresult boolean for success indication.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nsetParameters(uint256,bytes32,address)\n\n\n\n\nhash the parameters, save them if necessary, and return the hash value\n\n\n\n\nExecution cost\n: less than 61154 gas\n\n\nParams:\n\n\n\n\n_orgNativeTokenFee\n \nof type \nuint256\n\n\n_voteApproveParams\n \nof type \nbytes32\n\n\n_intVote\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ntransferOwnership(address)\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost\n: less than 23115 gas\n\n\nParams:\n\n\n\n\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nThe address to transfer ownership to.\n\n\n\n\n\n\n\n\n\n\nupdateParameters(bytes32)\n\n\nExecution cost\n: less than 20572 gas\n\n\nParams:\n\n\n\n\n_hashedParameters\n \nof type \nbytes32\n\n\n\n\nBack to the top \u2191", 
            "title": "ContributionReward"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#contributionreward", 
            "text": "see the source   A scheme for proposing and rewarding contributions to an organization   Execution cost : less than 21874 gas  Deployment cost : less than 1445600 gas  Combined cost : less than 1467474 gas", 
            "title": "ContributionReward"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#constructor", 
            "text": "", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#newcontributionproposaladdressbytes32addressbytes32int256uint2565addressaddress", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32  _intVoteInterface   of type  address  _contributionDescription   of type  bytes32  _reputationChange   of type  int256  _rewards   of type  uint256[5]  _externalToken   of type  address  _beneficiary   of type  address", 
            "title": "NewContributionProposal(address,bytes32,address,bytes32,int256,uint256[5],address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#newproposalbytes32", 
            "text": "Execution cost : No bound available  Params:   proposalId   of type  bytes32", 
            "title": "NewProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#ownershiptransferredaddressaddress", 
            "text": "Execution cost : No bound available  Params:   previousOwner   of type  address  newOwner   of type  address", 
            "title": "OwnershipTransferred(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#proposaldeletedaddressbytes32", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32", 
            "title": "ProposalDeleted(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#proposalexecutedaddressbytes32", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32", 
            "title": "ProposalExecuted(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#redeemetheraddressbytes32addressuint256", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32  _beneficiary   of type  address  _amount   of type  uint256", 
            "title": "RedeemEther(address,bytes32,address,uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#redeemexternaltokenaddressbytes32addressuint256", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32  _beneficiary   of type  address  _amount   of type  uint256", 
            "title": "RedeemExternalToken(address,bytes32,address,uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#redeemnativetokenaddressbytes32addressuint256", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32  _beneficiary   of type  address  _amount   of type  uint256", 
            "title": "RedeemNativeToken(address,bytes32,address,uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#redeemreputationaddressbytes32addressint256", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32  _beneficiary   of type  address  _amount   of type  int256", 
            "title": "RedeemReputation(address,bytes32,address,int256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#getparametershashuint256bytes32address", 
            "text": "return a hash of the given parameters   Execution cost : less than 755 gas  Attributes : constant  Params:    _orgNativeTokenFee   of type  uint256   the fee for submitting a contribution in organizations native token     _voteApproveParams   of type  bytes32   parameters for the voting machine used to approve a contribution     _intVote   of type  address   the voting machine used to approve a contribution     Returns:   a hash of the parameters    output_0   of type  bytes32", 
            "title": "getParametersHash(uint256,bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#hashedparameters", 
            "text": "Execution cost : less than 766 gas  Attributes : constant  Returns:   output_0   of type  bytes32", 
            "title": "hashedParameters()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#getperiodstopaybytes32addressuint256", 
            "text": "getPeriodsToPay return the periods left to be paid for reputation,nativeToken,ether or externalToken. The function ignore the reward amount to be paid (which can be zero).   Execution cost : No bound available  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the voting in the voting machine     _avatar   of type  address   address of the controller     _redeemType   of type  uint256    the type of the reward  :        0 - reputation        1 - nativeTokenReward        2 - Ether        3 - ExternalToken      Returns:   periods left to be paid.    output_0   of type  uint256", 
            "title": "getPeriodsToPay(bytes32,address,uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#executebytes32addressint256", 
            "text": "execution of proposals, can only be called by the voting machine in which the vote is held.   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the ID of the voting in the voting machine     _avatar   of type  address   address of the controller     _param   of type  int256   a parameter of the voting result, 1 yes and 2 is no.     Returns:   output_0   of type  bool", 
            "title": "execute(bytes32,address,int256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#redeemetherbytes32address", 
            "text": "RedeemEther reward for proposal   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the ID of the voting in the voting machine     _avatar   of type  address   address of the controller     Returns:   result boolean for success indication.    output_0   of type  bool", 
            "title": "redeemEther(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#parametersbytes32", 
            "text": "Execution cost : less than 1148 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   orgNativeTokenFee   of type  uint256  voteApproveParams   of type  bytes32  intVote   of type  address", 
            "title": "parameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#owner", 
            "text": "Execution cost : less than 721 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "owner()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#organizationsproposalsaddressbytes32", 
            "text": "Execution cost : less than 2981 gas  Attributes : constant  Params:   param_0   of type  address  param_1   of type  bytes32   Returns:   contributionDescriptionHash   of type  bytes32  nativeTokenReward   of type  uint256  reputationChange   of type  int256  ethReward   of type  uint256  externalToken   of type  address  externalTokenReward   of type  uint256  beneficiary   of type  address  periodLength   of type  uint256  numberOfPeriods   of type  uint256  executionTime   of type  uint256", 
            "title": "organizationsProposals(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#proposecontributionrewardaddressbytes32int256uint2565addressaddress", 
            "text": "Submit a proposal for a reward for a contribution:   Execution cost : No bound available  Params:    _avatar   of type  address   Avatar of the organization that the contribution was made for     _contributionDescriptionHash   of type  bytes32   A hash of the contribution's description     _reputationChange   of type  int256    Amount of reputation change requested .Can be negative.      _rewards   of type  uint256[5]   rewards array:        rewards[0] - Amount of tokens requested per period        rewards[1] - Amount of ETH requested per period        rewards[2] - Amount of external tokens requested per period        rewards[3] - Period length        rewards[4] - Number of periods     _externalToken   of type  address   Address of external token, if reward is requested there     _beneficiary   of type  address   Who gets the rewards     Returns:   output_0   of type  bytes32", 
            "title": "proposeContributionReward(address,bytes32,int256,uint256[5],address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#redeembytes32addressbool4", 
            "text": "redeem rewards for proposal   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the ID of the voting in the voting machine     _avatar   of type  address   address of the controller     _whatToRedeem   of type  bool[4]   whatToRedeem array:        whatToRedeem[0] - reputation        whatToRedeem[1] - nativeTokenReward        whatToRedeem[2] - Ether        whatToRedeem[3] - ExternalToken     Returns:   result boolean array for each redeem type.    result   of type  bool[4]", 
            "title": "redeem(bytes32,address,bool[4])"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#redeemexternaltokenbytes32address", 
            "text": "RedeemNativeToken reward for proposal   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the ID of the voting in the voting machine     _avatar   of type  address   address of the controller     Returns:   result boolean for success indication.    output_0   of type  bool", 
            "title": "redeemExternalToken(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#redeemnativetokenbytes32address", 
            "text": "RedeemNativeToken reward for proposal   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the ID of the voting in the voting machine     _avatar   of type  address   address of the controller     Returns:   result boolean for success indication.    output_0   of type  bool", 
            "title": "redeemNativeToken(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#redeemreputationbytes32address", 
            "text": "RedeemReputation reward for proposal   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the ID of the voting in the voting machine     _avatar   of type  address   address of the controller     Returns:   result boolean for success indication.    output_0   of type  bool", 
            "title": "redeemReputation(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#setparametersuint256bytes32address", 
            "text": "hash the parameters, save them if necessary, and return the hash value   Execution cost : less than 61154 gas  Params:   _orgNativeTokenFee   of type  uint256  _voteApproveParams   of type  bytes32  _intVote   of type  address   Returns:   output_0   of type  bytes32", 
            "title": "setParameters(uint256,bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#transferownershipaddress", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost : less than 23115 gas  Params:    newOwner   of type  address   The address to transfer ownership to.", 
            "title": "transferOwnership(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ContributionReward/#updateparametersbytes32", 
            "text": "Execution cost : less than 20572 gas  Params:   _hashedParameters   of type  bytes32   Back to the top \u2191", 
            "title": "updateParameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/DaoCreator/", 
            "text": "DaoCreator\n\n\nsee the source\n\n\n\n\nGenesis Scheme that creates organizations\n\n\n\n\nExecution cost\n: less than 5493 gas\n\n\nDeployment cost\n: less than 4685000 gas\n\n\nCombined cost\n: less than 4690493 gas\n\n\nConstructor\n\n\nEvents\n\n\nInitialSchemesSet(address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\n\n\nNewOrg(address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nMethods\n\n\nforgeOrg(bytes32,string,string,address[],uint256[],int256[],address)\n\n\n\n\nCreate a new organization\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_orgName\n \nof type \nbytes32\n\n\n\n\nThe name of the new organization\n\n\n\n\n\n\n\n\n_tokenName\n \nof type \nstring\n\n\n\n\nThe name of the token associated with the organization\n\n\n\n\n\n\n\n\n_tokenSymbol\n \nof type \nstring\n\n\n\n\nThe symbol of the token\n\n\n\n\n\n\n\n\n_founders\n \nof type \naddress[]\n\n\n\n\nAn array with the addresses of the founders of the organization\n\n\n\n\n\n\n\n\n_foundersTokenAmount\n \nof type \nuint256[]\n\n\n\n\nAn array of amount of tokens that the founders receive in the new organization\n\n\n\n\n\n\n\n\n_foundersReputationAmount\n \nof type \nint256[]\n\n\n\n\nAn array of amount of reputation that the  founders receive in the new organization\n\n\n\n\n\n\n\n\n_uController\n \nof type \naddress\n\n\n\n\nuniversal controller instance        if _uController address equal to zero the organization will use none universal controller.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nThe address of the avatar of the controller\n\n\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nsetSchemes(address,address[],bytes32[],bytes4[])\n\n\n\n\nSet initial schemes for the organization.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\norganization avatar (returns from forgeOrg)\n\n\n\n\n\n\n\n\n_schemes\n \nof type \naddress[]\n\n\n\n\nthe schemes to register for the organization\n\n\n\n\n\n\n\n\n_params\n \nof type \nbytes32[]\n\n\n\n\nthe schemes's params\n\n\n\n\n\n\n\n\n_permissions\n \nof type \nbytes4[]\n\n\n\n\nthe schemes permissions.\n\n\n\n\n\n\n\n\nBack to the top \u2191", 
            "title": "DaoCreator"
        }, 
        {
            "location": "/generated_docs/universalSchemes/DaoCreator/#daocreator", 
            "text": "see the source   Genesis Scheme that creates organizations   Execution cost : less than 5493 gas  Deployment cost : less than 4685000 gas  Combined cost : less than 4690493 gas", 
            "title": "DaoCreator"
        }, 
        {
            "location": "/generated_docs/universalSchemes/DaoCreator/#constructor", 
            "text": "", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/universalSchemes/DaoCreator/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/universalSchemes/DaoCreator/#initialschemessetaddress", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address", 
            "title": "InitialSchemesSet(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/DaoCreator/#neworgaddress", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address", 
            "title": "NewOrg(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/DaoCreator/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/universalSchemes/DaoCreator/#forgeorgbytes32stringstringaddressuint256int256address", 
            "text": "Create a new organization   Execution cost : No bound available  Params:    _orgName   of type  bytes32   The name of the new organization     _tokenName   of type  string   The name of the token associated with the organization     _tokenSymbol   of type  string   The symbol of the token     _founders   of type  address[]   An array with the addresses of the founders of the organization     _foundersTokenAmount   of type  uint256[]   An array of amount of tokens that the founders receive in the new organization     _foundersReputationAmount   of type  int256[]   An array of amount of reputation that the  founders receive in the new organization     _uController   of type  address   universal controller instance        if _uController address equal to zero the organization will use none universal controller.     Returns:   The address of the avatar of the controller    output_0   of type  address", 
            "title": "forgeOrg(bytes32,string,string,address[],uint256[],int256[],address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/DaoCreator/#setschemesaddressaddressbytes32bytes4", 
            "text": "Set initial schemes for the organization.   Execution cost : No bound available  Params:    _avatar   of type  address   organization avatar (returns from forgeOrg)     _schemes   of type  address[]   the schemes to register for the organization     _params   of type  bytes32[]   the schemes's params     _permissions   of type  bytes4[]   the schemes permissions.     Back to the top \u2191", 
            "title": "setSchemes(address,address[],bytes32[],bytes4[])"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ExecutableInterface/", 
            "text": "ExecutableInterface\n\n\nsee the source\n\n\nExecution cost\n: No bound available\n\n\nDeployment cost\n: No bound available\n\n\nCombined cost\n: No bound available\n\n\nMethods\n\n\nexecute(bytes32,address,int256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_avatar\n \nof type \naddress\n\n\n_param\n \nof type \nint256\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\nBack to the top \u2191", 
            "title": "ExecutableInterface"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ExecutableInterface/#executableinterface", 
            "text": "see the source  Execution cost : No bound available  Deployment cost : No bound available  Combined cost : No bound available", 
            "title": "ExecutableInterface"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ExecutableInterface/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/universalSchemes/ExecutableInterface/#executebytes32addressint256", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _avatar   of type  address  _param   of type  int256   Returns:   output_0   of type  bool   Back to the top \u2191", 
            "title": "execute(bytes32,address,int256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/", 
            "text": "GlobalConstraintRegistrar\n\n\nsee the source\n\n\n\n\nA scheme to manage global constraint for organizations\n\n\n\n\nExecution cost\n: less than 21121 gas\n\n\nDeployment cost\n: less than 721000 gas\n\n\nCombined cost\n: less than 742121 gas\n\n\nConstructor\n\n\nEvents\n\n\nNewGlobalConstraintsProposal(address,bytes32,address,address,bytes32,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_intVoteInterface\n \nof type \naddress\n\n\n_gc\n \nof type \naddress\n\n\n_params\n \nof type \nbytes32\n\n\n_voteToRemoveParams\n \nof type \nbytes32\n\n\n\n\n\n\nNewProposal(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nproposalId\n \nof type \nbytes32\n\n\n\n\n\n\nOwnershipTransferred(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type \naddress\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\n\n\nProposalDeleted(address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\n\n\nProposalExecuted(address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\n\n\nRemoveGlobalConstraintsProposal(address,bytes32,address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_intVoteInterface\n \nof type \naddress\n\n\n_gc\n \nof type \naddress\n\n\n\n\nMethods\n\n\nexecute(bytes32,address,int256)\n\n\n\n\nexecution of proposals, can only be called by the voting machine in which the vote is held.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the voting in the voting machine\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\naddress of the controller\n\n\n\n\n\n\n\n\n_param\n \nof type \nint256\n\n\n\n\na parameter of the voting result, 0 is no and 1 is yes.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a successful of the function.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nhashedParameters()\n\n\nExecution cost\n: less than 656 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ngetParametersHash(bytes32,address)\n\n\n\n\nHash the parameters and return the hash value\n\n\n\n\nExecution cost\n: less than 586 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_voteRegisterParams\n \nof type \nbytes32\n\n\n\n\n\n\nvoting parameters\n\n\n\n\n\n\n\n\n\n\n_intVote\n \nof type \naddress\n\n\n\n\n\n\nvoting machine contract.\n\n\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbytes32 -the parameters hash\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\norganizationsData(address)\n\n\nExecution cost\n: less than 1013 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\nvoteRegisterParams\n \nof type \nbytes32\n\n\nintVote\n \nof type \naddress\n\n\n\n\n\n\nowner()\n\n\nExecution cost\n: less than 743 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nparameters(bytes32)\n\n\nExecution cost\n: less than 894 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\nvoteRegisterParams\n \nof type \nbytes32\n\n\nintVote\n \nof type \naddress\n\n\n\n\n\n\nproposeGlobalConstraint(address,address,bytes32,bytes32)\n\n\n\n\npropose to add a new global constraint:\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe avatar of the organization that the constraint is proposed for\n\n\n\n\n\n\n\n\n_gc\n \nof type \naddress\n\n\n\n\nthe address of the global constraint that is being proposed\n\n\n\n\n\n\n\n\n_params\n \nof type \nbytes32\n\n\n\n\nthe parameters for the global constraint\n\n\n\n\n\n\n\n\n_voteToRemoveParams\n \nof type \nbytes32\n\n\n\n\nthe conditions (on the voting machine) for removing this global constraint\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbytes32 -the proposal id\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nproposeToRemoveGC(address,address)\n\n\n\n\npropose to remove a global constraint:\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe avatar of the organization that the constraint is proposed for\n\n\n\n\n\n\n\n\n_gc\n \nof type \naddress\n\n\n\n\nthe address of the global constraint that is being proposed\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbytes32 -the proposal id\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nsetParameters(bytes32,address)\n\n\n\n\nHash the parameters, save them if necessary, and return the hash value\n\n\n\n\nExecution cost\n: less than 41096 gas\n\n\nParams:\n\n\n\n\n\n\n_voteRegisterParams\n \nof type \nbytes32\n\n\n\n\n\n\nvoting parameters for register global constraint\n\n\n\n\n\n\n\n\n\n\n_intVote\n \nof type \naddress\n\n\n\n\n\n\nvoting machine contract.\n\n\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbytes32 -the parameters hash\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ntransferOwnership(address)\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost\n: less than 22983 gas\n\n\nParams:\n\n\n\n\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nThe address to transfer ownership to.\n\n\n\n\n\n\n\n\n\n\nupdateParameters(bytes32)\n\n\nExecution cost\n: less than 20594 gas\n\n\nParams:\n\n\n\n\n_hashedParameters\n \nof type \nbytes32\n\n\n\n\nBack to the top \u2191", 
            "title": "GlobalConstraintRegistrar"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#globalconstraintregistrar", 
            "text": "see the source   A scheme to manage global constraint for organizations   Execution cost : less than 21121 gas  Deployment cost : less than 721000 gas  Combined cost : less than 742121 gas", 
            "title": "GlobalConstraintRegistrar"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#constructor", 
            "text": "", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#newglobalconstraintsproposaladdressbytes32addressaddressbytes32bytes32", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32  _intVoteInterface   of type  address  _gc   of type  address  _params   of type  bytes32  _voteToRemoveParams   of type  bytes32", 
            "title": "NewGlobalConstraintsProposal(address,bytes32,address,address,bytes32,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#newproposalbytes32", 
            "text": "Execution cost : No bound available  Params:   proposalId   of type  bytes32", 
            "title": "NewProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#ownershiptransferredaddressaddress", 
            "text": "Execution cost : No bound available  Params:   previousOwner   of type  address  newOwner   of type  address", 
            "title": "OwnershipTransferred(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#proposaldeletedaddressbytes32", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32", 
            "title": "ProposalDeleted(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#proposalexecutedaddressbytes32", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32", 
            "title": "ProposalExecuted(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#removeglobalconstraintsproposaladdressbytes32addressaddress", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32  _intVoteInterface   of type  address  _gc   of type  address", 
            "title": "RemoveGlobalConstraintsProposal(address,bytes32,address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#executebytes32addressint256", 
            "text": "execution of proposals, can only be called by the voting machine in which the vote is held.   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the ID of the voting in the voting machine     _avatar   of type  address   address of the controller     _param   of type  int256   a parameter of the voting result, 0 is no and 1 is yes.     Returns:   bool which represents a successful of the function.    output_0   of type  bool", 
            "title": "execute(bytes32,address,int256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#hashedparameters", 
            "text": "Execution cost : less than 656 gas  Attributes : constant  Returns:   output_0   of type  bytes32", 
            "title": "hashedParameters()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#getparametershashbytes32address", 
            "text": "Hash the parameters and return the hash value   Execution cost : less than 586 gas  Attributes : constant  Params:    _voteRegisterParams   of type  bytes32    voting parameters      _intVote   of type  address    voting machine contract.      Returns:   bytes32 -the parameters hash    output_0   of type  bytes32", 
            "title": "getParametersHash(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#organizationsdataaddress", 
            "text": "Execution cost : less than 1013 gas  Attributes : constant  Params:   param_0   of type  address   Returns:   voteRegisterParams   of type  bytes32  intVote   of type  address", 
            "title": "organizationsData(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#owner", 
            "text": "Execution cost : less than 743 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "owner()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#parametersbytes32", 
            "text": "Execution cost : less than 894 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   voteRegisterParams   of type  bytes32  intVote   of type  address", 
            "title": "parameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#proposeglobalconstraintaddressaddressbytes32bytes32", 
            "text": "propose to add a new global constraint:   Execution cost : No bound available  Params:    _avatar   of type  address   the avatar of the organization that the constraint is proposed for     _gc   of type  address   the address of the global constraint that is being proposed     _params   of type  bytes32   the parameters for the global constraint     _voteToRemoveParams   of type  bytes32   the conditions (on the voting machine) for removing this global constraint     Returns:   bytes32 -the proposal id    output_0   of type  bytes32", 
            "title": "proposeGlobalConstraint(address,address,bytes32,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#proposetoremovegcaddressaddress", 
            "text": "propose to remove a global constraint:   Execution cost : No bound available  Params:    _avatar   of type  address   the avatar of the organization that the constraint is proposed for     _gc   of type  address   the address of the global constraint that is being proposed     Returns:   bytes32 -the proposal id    output_0   of type  bytes32", 
            "title": "proposeToRemoveGC(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#setparametersbytes32address", 
            "text": "Hash the parameters, save them if necessary, and return the hash value   Execution cost : less than 41096 gas  Params:    _voteRegisterParams   of type  bytes32    voting parameters for register global constraint      _intVote   of type  address    voting machine contract.      Returns:   bytes32 -the parameters hash    output_0   of type  bytes32", 
            "title": "setParameters(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#transferownershipaddress", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost : less than 22983 gas  Params:    newOwner   of type  address   The address to transfer ownership to.", 
            "title": "transferOwnership(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/GlobalConstraintRegistrar/#updateparametersbytes32", 
            "text": "Execution cost : less than 20594 gas  Params:   _hashedParameters   of type  bytes32   Back to the top \u2191", 
            "title": "updateParameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/", 
            "text": "OrganizationRegister\n\n\nsee the source\n\n\n\n\nA universal organization registry.\n\n\n\n\nExecution cost\n: less than 20761 gas\n\n\nDeployment cost\n: less than 358000 gas\n\n\nCombined cost\n: less than 378761 gas\n\n\nConstructor\n\n\nEvents\n\n\nNewProposal(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nproposalId\n \nof type \nbytes32\n\n\n\n\n\n\nOrgAdded(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_registry\n \nof type \naddress\n\n\n_org\n \nof type \naddress\n\n\n\n\n\n\nOwnershipTransferred(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type \naddress\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\n\n\nPromotion(address,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_registry\n \nof type \naddress\n\n\n_org\n \nof type \naddress\n\n\n_amount\n \nof type \nuint256\n\n\n\n\nMethods\n\n\naddOrPromoteAddress(address,address,uint256)\n\n\n\n\nAdding or promoting an address on the registry.     An address(record) to add or promote can be organization address or any contract address.     Adding a record is done by paying at least the minimum required by the registry params.     Promoting a record is done by paying(adding)amount of token to the registry beneficiary.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nThe _avatar of the organization which own the registry.\n\n\n\n\n\n\n\n\n_record\n \nof type \naddress\n\n\n\n\nThe address to add or promote.\n\n\n\n\n\n\n\n\n_amount\n \nof type \nuint256\n\n\n\n\namount to pay for adding or promoting\n\n\n\n\n\n\n\n\n\n\ngetParametersHash(address,uint256,address)\n\n\n\n\nHash the parameters ,and return the hash value\n\n\n\n\nExecution cost\n: less than 722 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_token\n \nof type \naddress\n\n\n\n\n\n\nthe token to pay for register or promotion an address.\n\n\n\n\n\n\n\n\n\n\n_fee\n \nof type \nuint256\n\n\n\n\n\n\nfee needed for register an address.\n\n\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\n\n\nthe beneficiary payment address\n\n\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbytes32 -the parameters hash\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nhashedParameters()\n\n\nExecution cost\n: less than 612 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\norganizationsRegistery(address,address)\n\n\nExecution cost\n: less than 736 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\nparam_1\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nowner()\n\n\nExecution cost\n: less than 677 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nparameters(bytes32)\n\n\nExecution cost\n: less than 1157 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\nfee\n \nof type \nuint256\n\n\ntoken\n \nof type \naddress\n\n\nbeneficiary\n \nof type \naddress\n\n\n\n\n\n\nsetParameters(address,uint256,address)\n\n\n\n\nHash the parameters, save if needed and return the hash value\n\n\n\n\nExecution cost\n: less than 61765 gas\n\n\nParams:\n\n\n\n\n\n\n_token\n \nof type \naddress\n\n\n\n\n\n\nthe token to pay for register or promotion an address.\n\n\n\n\n\n\n\n\n\n\n_fee\n \nof type \nuint256\n\n\n\n\n\n\nfee needed for register an address.\n\n\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\n\n\nthe beneficiary payment address\n\n\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbytes32 -the parameters hash\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ntransferOwnership(address)\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost\n: less than 22961 gas\n\n\nParams:\n\n\n\n\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nThe address to transfer ownership to.\n\n\n\n\n\n\n\n\n\n\nupdateParameters(bytes32)\n\n\nExecution cost\n: less than 20550 gas\n\n\nParams:\n\n\n\n\n_hashedParameters\n \nof type \nbytes32\n\n\n\n\nBack to the top \u2191", 
            "title": "OrganizationRegister"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#organizationregister", 
            "text": "see the source   A universal organization registry.   Execution cost : less than 20761 gas  Deployment cost : less than 358000 gas  Combined cost : less than 378761 gas", 
            "title": "OrganizationRegister"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#constructor", 
            "text": "", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#newproposalbytes32", 
            "text": "Execution cost : No bound available  Params:   proposalId   of type  bytes32", 
            "title": "NewProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#orgaddedaddressaddress", 
            "text": "Execution cost : No bound available  Params:   _registry   of type  address  _org   of type  address", 
            "title": "OrgAdded(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#ownershiptransferredaddressaddress", 
            "text": "Execution cost : No bound available  Params:   previousOwner   of type  address  newOwner   of type  address", 
            "title": "OwnershipTransferred(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#promotionaddressaddressuint256", 
            "text": "Execution cost : No bound available  Params:   _registry   of type  address  _org   of type  address  _amount   of type  uint256", 
            "title": "Promotion(address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#addorpromoteaddressaddressaddressuint256", 
            "text": "Adding or promoting an address on the registry.     An address(record) to add or promote can be organization address or any contract address.     Adding a record is done by paying at least the minimum required by the registry params.     Promoting a record is done by paying(adding)amount of token to the registry beneficiary.   Execution cost : No bound available  Params:    _avatar   of type  address   The _avatar of the organization which own the registry.     _record   of type  address   The address to add or promote.     _amount   of type  uint256   amount to pay for adding or promoting", 
            "title": "addOrPromoteAddress(address,address,uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#getparametershashaddressuint256address", 
            "text": "Hash the parameters ,and return the hash value   Execution cost : less than 722 gas  Attributes : constant  Params:    _token   of type  address    the token to pay for register or promotion an address.      _fee   of type  uint256    fee needed for register an address.      _beneficiary   of type  address    the beneficiary payment address      Returns:   bytes32 -the parameters hash    output_0   of type  bytes32", 
            "title": "getParametersHash(address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#hashedparameters", 
            "text": "Execution cost : less than 612 gas  Attributes : constant  Returns:   output_0   of type  bytes32", 
            "title": "hashedParameters()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#organizationsregisteryaddressaddress", 
            "text": "Execution cost : less than 736 gas  Attributes : constant  Params:   param_0   of type  address  param_1   of type  address   Returns:   output_0   of type  uint256", 
            "title": "organizationsRegistery(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#owner", 
            "text": "Execution cost : less than 677 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "owner()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#parametersbytes32", 
            "text": "Execution cost : less than 1157 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   fee   of type  uint256  token   of type  address  beneficiary   of type  address", 
            "title": "parameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#setparametersaddressuint256address", 
            "text": "Hash the parameters, save if needed and return the hash value   Execution cost : less than 61765 gas  Params:    _token   of type  address    the token to pay for register or promotion an address.      _fee   of type  uint256    fee needed for register an address.      _beneficiary   of type  address    the beneficiary payment address      Returns:   bytes32 -the parameters hash    output_0   of type  bytes32", 
            "title": "setParameters(address,uint256,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#transferownershipaddress", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost : less than 22961 gas  Params:    newOwner   of type  address   The address to transfer ownership to.", 
            "title": "transferOwnership(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/OrganizationRegister/#updateparametersbytes32", 
            "text": "Execution cost : less than 20550 gas  Params:   _hashedParameters   of type  bytes32   Back to the top \u2191", 
            "title": "updateParameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/", 
            "text": "SchemeRegistrar\n\n\nsee the source\n\n\n\n\nA registrar for Schemes for organizations\n\n\n\n\nExecution cost\n: less than 21141 gas\n\n\nDeployment cost\n: less than 741400 gas\n\n\nCombined cost\n: less than 762541 gas\n\n\nConstructor\n\n\nEvents\n\n\nNewProposal(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nproposalId\n \nof type \nbytes32\n\n\n\n\n\n\nNewSchemeProposal(address,bytes32,address,address,bytes32,bool)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_intVoteInterface\n \nof type \naddress\n\n\n_scheme\n \nof type \naddress\n\n\n_parametersHash\n \nof type \nbytes32\n\n\n_isRegistering\n \nof type \nbool\n\n\n\n\n\n\nOwnershipTransferred(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type \naddress\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\n\n\nProposalDeleted(address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\n\n\nProposalExecuted(address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\n\n\nRemoveSchemeProposal(address,bytes32,address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_intVoteInterface\n \nof type \naddress\n\n\n_scheme\n \nof type \naddress\n\n\n\n\nMethods\n\n\nproposeToRemoveScheme(address,address)\n\n\n\n\npropose to remove a scheme for a controller\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe address of the controller from which we want to remove a scheme\n\n\n\n\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n\n\nthe address of the scheme we want to remove    * NB: not only registers the proposal, but also votes for it\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nhashedParameters()\n\n\nExecution cost\n: less than 656 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ngetParametersHash(bytes32,bytes32,address)\n\n\nExecution cost\n: less than 711 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_voteRegisterParams\n \nof type \nbytes32\n\n\n_voteRemoveParams\n \nof type \nbytes32\n\n\n_intVote\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nexecute(bytes32,address,int256)\n\n\n\n\nexecute a  proposal This method can only be called by the voting machine in which the vote is held.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal in the voting machine\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\naddress of the controller\n\n\n\n\n\n\n\n\n_param\n \nof type \nint256\n\n\n\n\nidentifies the action to be taken\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\norganizationsProposals(address,bytes32)\n\n\nExecution cost\n: less than 1571 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\nparam_1\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\nscheme\n \nof type \naddress\n\n\nparametersHash\n \nof type \nbytes32\n\n\nproposalType\n \nof type \nuint256\n\n\nisRegistering\n \nof type \nbool\n\n\n\n\n\n\nowner()\n\n\nExecution cost\n: less than 765 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nparameters(bytes32)\n\n\nExecution cost\n: less than 1148 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\nvoteRegisterParams\n \nof type \nbytes32\n\n\nvoteRemoveParams\n \nof type \nbytes32\n\n\nintVote\n \nof type \naddress\n\n\n\n\n\n\nproposeScheme(address,address,bytes32,bool)\n\n\n\n\ncreate a proposal to register a schemeNB: not only proposes the vote, but also votes for it\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe address of the organization the scheme will be registered for\n\n\n\n\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n\n\nthe address of the scheme to be registered\n\n\n\n\n\n\n\n\n_parametersHash\n \nof type \nbytes32\n\n\n\n\na hash of the configuration of the _scheme\n\n\n\n\n\n\n\n\n_isRegistering\n \nof type \nbool\n\n\n\n\na boolean represent if the scheme is a registering scheme     that can register other schemes\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\na proposal Id\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nsetParameters(bytes32,bytes32,address)\n\n\n\n\nhash the parameters, save them if necessary, and return the hash value\n\n\n\n\nExecution cost\n: less than 61088 gas\n\n\nParams:\n\n\n\n\n_voteRegisterParams\n \nof type \nbytes32\n\n\n_voteRemoveParams\n \nof type \nbytes32\n\n\n_intVote\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ntransferOwnership(address)\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost\n: less than 23005 gas\n\n\nParams:\n\n\n\n\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nThe address to transfer ownership to.\n\n\n\n\n\n\n\n\n\n\nupdateParameters(bytes32)\n\n\nExecution cost\n: less than 20572 gas\n\n\nParams:\n\n\n\n\n_hashedParameters\n \nof type \nbytes32\n\n\n\n\nBack to the top \u2191", 
            "title": "SchemeRegistrar"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#schemeregistrar", 
            "text": "see the source   A registrar for Schemes for organizations   Execution cost : less than 21141 gas  Deployment cost : less than 741400 gas  Combined cost : less than 762541 gas", 
            "title": "SchemeRegistrar"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#constructor", 
            "text": "", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#newproposalbytes32", 
            "text": "Execution cost : No bound available  Params:   proposalId   of type  bytes32", 
            "title": "NewProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#newschemeproposaladdressbytes32addressaddressbytes32bool", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32  _intVoteInterface   of type  address  _scheme   of type  address  _parametersHash   of type  bytes32  _isRegistering   of type  bool", 
            "title": "NewSchemeProposal(address,bytes32,address,address,bytes32,bool)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#ownershiptransferredaddressaddress", 
            "text": "Execution cost : No bound available  Params:   previousOwner   of type  address  newOwner   of type  address", 
            "title": "OwnershipTransferred(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#proposaldeletedaddressbytes32", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32", 
            "title": "ProposalDeleted(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#proposalexecutedaddressbytes32", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32", 
            "title": "ProposalExecuted(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#removeschemeproposaladdressbytes32addressaddress", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32  _intVoteInterface   of type  address  _scheme   of type  address", 
            "title": "RemoveSchemeProposal(address,bytes32,address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#proposetoremoveschemeaddressaddress", 
            "text": "propose to remove a scheme for a controller   Execution cost : No bound available  Params:    _avatar   of type  address   the address of the controller from which we want to remove a scheme     _scheme   of type  address   the address of the scheme we want to remove    * NB: not only registers the proposal, but also votes for it     Returns:   output_0   of type  bytes32", 
            "title": "proposeToRemoveScheme(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#hashedparameters", 
            "text": "Execution cost : less than 656 gas  Attributes : constant  Returns:   output_0   of type  bytes32", 
            "title": "hashedParameters()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#getparametershashbytes32bytes32address", 
            "text": "Execution cost : less than 711 gas  Attributes : constant  Params:   _voteRegisterParams   of type  bytes32  _voteRemoveParams   of type  bytes32  _intVote   of type  address   Returns:   output_0   of type  bytes32", 
            "title": "getParametersHash(bytes32,bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#executebytes32addressint256", 
            "text": "execute a  proposal This method can only be called by the voting machine in which the vote is held.   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the ID of the proposal in the voting machine     _avatar   of type  address   address of the controller     _param   of type  int256   identifies the action to be taken     Returns:   output_0   of type  bool", 
            "title": "execute(bytes32,address,int256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#organizationsproposalsaddressbytes32", 
            "text": "Execution cost : less than 1571 gas  Attributes : constant  Params:   param_0   of type  address  param_1   of type  bytes32   Returns:   scheme   of type  address  parametersHash   of type  bytes32  proposalType   of type  uint256  isRegistering   of type  bool", 
            "title": "organizationsProposals(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#owner", 
            "text": "Execution cost : less than 765 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "owner()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#parametersbytes32", 
            "text": "Execution cost : less than 1148 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   voteRegisterParams   of type  bytes32  voteRemoveParams   of type  bytes32  intVote   of type  address", 
            "title": "parameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#proposeschemeaddressaddressbytes32bool", 
            "text": "create a proposal to register a schemeNB: not only proposes the vote, but also votes for it   Execution cost : No bound available  Params:    _avatar   of type  address   the address of the organization the scheme will be registered for     _scheme   of type  address   the address of the scheme to be registered     _parametersHash   of type  bytes32   a hash of the configuration of the _scheme     _isRegistering   of type  bool   a boolean represent if the scheme is a registering scheme     that can register other schemes     Returns:   a proposal Id    output_0   of type  bytes32", 
            "title": "proposeScheme(address,address,bytes32,bool)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#setparametersbytes32bytes32address", 
            "text": "hash the parameters, save them if necessary, and return the hash value   Execution cost : less than 61088 gas  Params:   _voteRegisterParams   of type  bytes32  _voteRemoveParams   of type  bytes32  _intVote   of type  address   Returns:   output_0   of type  bytes32", 
            "title": "setParameters(bytes32,bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#transferownershipaddress", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost : less than 23005 gas  Params:    newOwner   of type  address   The address to transfer ownership to.", 
            "title": "transferOwnership(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SchemeRegistrar/#updateparametersbytes32", 
            "text": "Execution cost : less than 20572 gas  Params:   _hashedParameters   of type  bytes32   Back to the top \u2191", 
            "title": "updateParameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/", 
            "text": "SimpleICO\n\n\nsee the source\n\n\n\n\nSimpleICO scheme.\n\n\n\n\nExecution cost\n: less than 21277 gas\n\n\nDeployment cost\n: less than 876400 gas\n\n\nCombined cost\n: less than 897677 gas\n\n\nConstructor\n\n\nEvents\n\n\nDonationReceived(address,address,uint256,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\norganization\n \nof type \naddress\n\n\n_beneficiary\n \nof type \naddress\n\n\n_incomingEther\n \nof type \nuint256\n\n\n_tokensAmount\n \nof type \nuint256\n\n\n\n\n\n\nNewProposal(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nproposalId\n \nof type \nbytes32\n\n\n\n\n\n\nOwnershipTransferred(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type \naddress\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nMethods\n\n\nowner()\n\n\nExecution cost\n: less than 721 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nhashedParameters()\n\n\nExecution cost\n: less than 700 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ndonate(address,address)\n\n\n\n\nDonating ethers to get tokens. If the donation is higher than the remaining ethers in the \"cap\", The donator will get the change in ethers.\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: payable\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nThe Avatar's of the organization.\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nThe donator's address - which will receive the ICO's tokens.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a successful of the function\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nhaltICO(address)\n\n\n\n\nAllowing admin to halt an ICO.\n\n\n\n\nExecution cost\n: less than 21475 gas\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nThe Avatar's of the organization\n\n\n\n\n\n\n\n\n\n\ngetParametersHash(uint256,uint256,uint256,uint256,address,address)\n\n\n\n\nHash the parameters and return the hash value\n\n\n\n\nExecution cost\n: less than 829 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_cap\n \nof type \nuint256\n\n\n\n\nthe ico cap\n\n\n\n\n\n\n\n\n_price\n \nof type \nuint256\n\n\n\n\nrepresents Tokens per 1 Eth\n\n\n\n\n\n\n\n\n_startBlock\n \nof type \nuint256\n\n\n\n\nico start block\n\n\n\n\n\n\n\n\n_endBlock\n \nof type \nuint256\n\n\n\n\nico end\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nthe ico ether beneficiary\n\n\n\n\n\n\n\n\n_admin\n \nof type \naddress\n\n\n\n\nthe address of the ico admin which can hold and resume the ICO.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbytes32 -the params hash\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nisActive(address)\n\n\n\n\nCheck is an ICO is active (halted is still considered active). Active ICO: 1. The organization is registered. 2. The ICO didn't reach it's cap yet. 3. The current block isn't bigger than the \"endBlock\" \n Smaller then the \"startBlock\"\n\n\n\n\nExecution cost\n: less than 3761 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nThe Avatar's of the organization\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a successful of the function\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\norganizationsICOInfo(address)\n\n\nExecution cost\n: less than 1559 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\nparamsHash\n \nof type \nbytes32\n\n\navatarContractICO\n \nof type \naddress\n\n\ntotalEthRaised\n \nof type \nuint256\n\n\nisHalted\n \nof type \nbool\n\n\n\n\n\n\nparameters(bytes32)\n\n\nExecution cost\n: less than 1880 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\ncap\n \nof type \nuint256\n\n\nprice\n \nof type \nuint256\n\n\nstartBlock\n \nof type \nuint256\n\n\nendBlock\n \nof type \nuint256\n\n\nbeneficiary\n \nof type \naddress\n\n\nadmin\n \nof type \naddress\n\n\n\n\n\n\nresumeICO(address)\n\n\n\n\nAllowing admin to reopen an ICO.\n\n\n\n\nExecution cost\n: less than 21513 gas\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nThe Avatar's of the organization\n\n\n\n\n\n\n\n\n\n\nsetParameters(uint256,uint256,uint256,uint256,address,address)\n\n\n\n\nHash the parameters, save them if necessary, and return the hash value\n\n\n\n\nExecution cost\n: less than 122123 gas\n\n\nParams:\n\n\n\n\n\n\n_cap\n \nof type \nuint256\n\n\n\n\nthe ico cap\n\n\n\n\n\n\n\n\n_price\n \nof type \nuint256\n\n\n\n\nrepresents Tokens per 1 Eth\n\n\n\n\n\n\n\n\n_startBlock\n \nof type \nuint256\n\n\n\n\nico start block\n\n\n\n\n\n\n\n\n_endBlock\n \nof type \nuint256\n\n\n\n\nico end\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nthe ico ether beneficiary\n\n\n\n\n\n\n\n\n_admin\n \nof type \naddress\n\n\n\n\nthe address of the ico admin which can hold and resume the ICO.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbytes32 -the params hash\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nstart(address)\n\n\n\n\nstart an ICO\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nThe Avatar's of the organization\n\n\n\n\n\n\n\n\n\n\ntransferOwnership(address)\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost\n: less than 23049 gas\n\n\nParams:\n\n\n\n\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nThe address to transfer ownership to.\n\n\n\n\n\n\n\n\n\n\nupdateParameters(bytes32)\n\n\nExecution cost\n: less than 20572 gas\n\n\nParams:\n\n\n\n\n_hashedParameters\n \nof type \nbytes32\n\n\n\n\nBack to the top \u2191", 
            "title": "SimpleICO"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#simpleico", 
            "text": "see the source   SimpleICO scheme.   Execution cost : less than 21277 gas  Deployment cost : less than 876400 gas  Combined cost : less than 897677 gas", 
            "title": "SimpleICO"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#constructor", 
            "text": "", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#donationreceivedaddressaddressuint256uint256", 
            "text": "Execution cost : No bound available  Params:   organization   of type  address  _beneficiary   of type  address  _incomingEther   of type  uint256  _tokensAmount   of type  uint256", 
            "title": "DonationReceived(address,address,uint256,uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#newproposalbytes32", 
            "text": "Execution cost : No bound available  Params:   proposalId   of type  bytes32", 
            "title": "NewProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#ownershiptransferredaddressaddress", 
            "text": "Execution cost : No bound available  Params:   previousOwner   of type  address  newOwner   of type  address", 
            "title": "OwnershipTransferred(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#owner", 
            "text": "Execution cost : less than 721 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "owner()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#hashedparameters", 
            "text": "Execution cost : less than 700 gas  Attributes : constant  Returns:   output_0   of type  bytes32", 
            "title": "hashedParameters()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#donateaddressaddress", 
            "text": "Donating ethers to get tokens. If the donation is higher than the remaining ethers in the \"cap\", The donator will get the change in ethers.   Execution cost : No bound available  Attributes : payable  Params:    _avatar   of type  address   The Avatar's of the organization.     _beneficiary   of type  address   The donator's address - which will receive the ICO's tokens.     Returns:   bool which represents a successful of the function    output_0   of type  uint256", 
            "title": "donate(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#halticoaddress", 
            "text": "Allowing admin to halt an ICO.   Execution cost : less than 21475 gas  Params:    _avatar   of type  address   The Avatar's of the organization", 
            "title": "haltICO(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#getparametershashuint256uint256uint256uint256addressaddress", 
            "text": "Hash the parameters and return the hash value   Execution cost : less than 829 gas  Attributes : constant  Params:    _cap   of type  uint256   the ico cap     _price   of type  uint256   represents Tokens per 1 Eth     _startBlock   of type  uint256   ico start block     _endBlock   of type  uint256   ico end     _beneficiary   of type  address   the ico ether beneficiary     _admin   of type  address   the address of the ico admin which can hold and resume the ICO.     Returns:   bytes32 -the params hash    output_0   of type  bytes32", 
            "title": "getParametersHash(uint256,uint256,uint256,uint256,address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#isactiveaddress", 
            "text": "Check is an ICO is active (halted is still considered active). Active ICO: 1. The organization is registered. 2. The ICO didn't reach it's cap yet. 3. The current block isn't bigger than the \"endBlock\"   Smaller then the \"startBlock\"   Execution cost : less than 3761 gas  Attributes : constant  Params:    _avatar   of type  address   The Avatar's of the organization     Returns:   bool which represents a successful of the function    output_0   of type  bool", 
            "title": "isActive(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#organizationsicoinfoaddress", 
            "text": "Execution cost : less than 1559 gas  Attributes : constant  Params:   param_0   of type  address   Returns:   paramsHash   of type  bytes32  avatarContractICO   of type  address  totalEthRaised   of type  uint256  isHalted   of type  bool", 
            "title": "organizationsICOInfo(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#parametersbytes32", 
            "text": "Execution cost : less than 1880 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   cap   of type  uint256  price   of type  uint256  startBlock   of type  uint256  endBlock   of type  uint256  beneficiary   of type  address  admin   of type  address", 
            "title": "parameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#resumeicoaddress", 
            "text": "Allowing admin to reopen an ICO.   Execution cost : less than 21513 gas  Params:    _avatar   of type  address   The Avatar's of the organization", 
            "title": "resumeICO(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#setparametersuint256uint256uint256uint256addressaddress", 
            "text": "Hash the parameters, save them if necessary, and return the hash value   Execution cost : less than 122123 gas  Params:    _cap   of type  uint256   the ico cap     _price   of type  uint256   represents Tokens per 1 Eth     _startBlock   of type  uint256   ico start block     _endBlock   of type  uint256   ico end     _beneficiary   of type  address   the ico ether beneficiary     _admin   of type  address   the address of the ico admin which can hold and resume the ICO.     Returns:   bytes32 -the params hash    output_0   of type  bytes32", 
            "title": "setParameters(uint256,uint256,uint256,uint256,address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#startaddress", 
            "text": "start an ICO   Execution cost : No bound available  Params:    _avatar   of type  address   The Avatar's of the organization", 
            "title": "start(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#transferownershipaddress", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost : less than 23049 gas  Params:    newOwner   of type  address   The address to transfer ownership to.", 
            "title": "transferOwnership(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/SimpleICO/#updateparametersbytes32", 
            "text": "Execution cost : less than 20572 gas  Params:   _hashedParameters   of type  bytes32   Back to the top \u2191", 
            "title": "updateParameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UniversalScheme/", 
            "text": "UniversalScheme\n\n\nsee the source\n\n\nExecution cost\n: less than 20496 gas\n\n\nDeployment cost\n: less than 98600 gas\n\n\nCombined cost\n: less than 119096 gas\n\n\nEvents\n\n\nNewProposal(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nproposalId\n \nof type \nbytes32\n\n\n\n\n\n\nOwnershipTransferred(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type \naddress\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nMethods\n\n\nhashedParameters()\n\n\nExecution cost\n: less than 439 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nowner()\n\n\nExecution cost\n: less than 548 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\ntransferOwnership(address)\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost\n: less than 22788 gas\n\n\nParams:\n\n\n\n\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nThe address to transfer ownership to.\n\n\n\n\n\n\n\n\n\n\nupdateParameters(bytes32)\n\n\nExecution cost\n: less than 20443 gas\n\n\nParams:\n\n\n\n\n_hashedParameters\n \nof type \nbytes32\n\n\n\n\nBack to the top \u2191", 
            "title": "UniversalScheme"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UniversalScheme/#universalscheme", 
            "text": "see the source  Execution cost : less than 20496 gas  Deployment cost : less than 98600 gas  Combined cost : less than 119096 gas", 
            "title": "UniversalScheme"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UniversalScheme/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UniversalScheme/#newproposalbytes32", 
            "text": "Execution cost : No bound available  Params:   proposalId   of type  bytes32", 
            "title": "NewProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UniversalScheme/#ownershiptransferredaddressaddress", 
            "text": "Execution cost : No bound available  Params:   previousOwner   of type  address  newOwner   of type  address", 
            "title": "OwnershipTransferred(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UniversalScheme/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UniversalScheme/#hashedparameters", 
            "text": "Execution cost : less than 439 gas  Attributes : constant  Returns:   output_0   of type  bytes32", 
            "title": "hashedParameters()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UniversalScheme/#owner", 
            "text": "Execution cost : less than 548 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "owner()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UniversalScheme/#transferownershipaddress", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost : less than 22788 gas  Params:    newOwner   of type  address   The address to transfer ownership to.", 
            "title": "transferOwnership(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UniversalScheme/#updateparametersbytes32", 
            "text": "Execution cost : less than 20443 gas  Params:   _hashedParameters   of type  bytes32   Back to the top \u2191", 
            "title": "updateParameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UniversalSchemeInterface/", 
            "text": "UniversalSchemeInterface\n\n\nsee the source\n\n\nExecution cost\n: No bound available\n\n\nDeployment cost\n: No bound available\n\n\nCombined cost\n: No bound available\n\n\nMethods\n\n\nupdateParameters(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_hashedParameters\n \nof type \nbytes32\n\n\n\n\nBack to the top \u2191", 
            "title": "UniversalSchemeInterface"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UniversalSchemeInterface/#universalschemeinterface", 
            "text": "see the source  Execution cost : No bound available  Deployment cost : No bound available  Combined cost : No bound available", 
            "title": "UniversalSchemeInterface"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UniversalSchemeInterface/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UniversalSchemeInterface/#updateparametersbytes32", 
            "text": "Execution cost : No bound available  Params:   _hashedParameters   of type  bytes32   Back to the top \u2191", 
            "title": "updateParameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/", 
            "text": "UpgradeScheme\n\n\nsee the source\n\n\n\n\nA scheme to manage the upgrade of an organization.\n\n\n\n\nExecution cost\n: less than 21115 gas\n\n\nDeployment cost\n: less than 714400 gas\n\n\nCombined cost\n: less than 735515 gas\n\n\nConstructor\n\n\nEvents\n\n\nChangeUpgradeSchemeProposal(address,bytes32,address,address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_intVoteInterface\n \nof type \naddress\n\n\nnewUpgradeScheme\n \nof type \naddress\n\n\n_params\n \nof type \nbytes32\n\n\n\n\n\n\nNewProposal(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nproposalId\n \nof type \nbytes32\n\n\n\n\n\n\nNewUpgradeProposal(address,bytes32,address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_intVoteInterface\n \nof type \naddress\n\n\n_newController\n \nof type \naddress\n\n\n\n\n\n\nOwnershipTransferred(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type \naddress\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\n\n\nProposalDeleted(address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\n\n\nProposalExecuted(address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nMethods\n\n\nexecute(bytes32,address,int256)\n\n\n\n\nexecution of proposals, can only be called by the voting machine in which the vote is held.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the voting in the voting machine\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\naddress of the controller\n\n\n\n\n\n\n\n\n_param\n \nof type \nint256\n\n\n\n\na parameter of the voting result, 0 is no and 1 is yes.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nhashedParameters()\n\n\nExecution cost\n: less than 656 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ngetParametersHash(bytes32,address)\n\n\n\n\nreturn a hash of the given parameters\n\n\n\n\nExecution cost\n: less than 586 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_voteParams\n \nof type \nbytes32\n\n\n_intVote\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\norganizationsProposals(address,bytes32)\n\n\nExecution cost\n: less than 1348 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\nparam_1\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\nupgradeContract\n \nof type \naddress\n\n\nparams\n \nof type \nbytes32\n\n\nproposalType\n \nof type \nuint256\n\n\n\n\n\n\nowner()\n\n\nExecution cost\n: less than 765 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nparameters(bytes32)\n\n\nExecution cost\n: less than 894 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\nvoteParams\n \nof type \nbytes32\n\n\nintVote\n \nof type \naddress\n\n\n\n\n\n\nproposeChangeUpgradingScheme(address,address,bytes32)\n\n\n\n\npropose to replace this scheme by another upgrading scheme\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\navatar of the organization\n\n\n\n\n\n\n\n\n_scheme\n \nof type \naddress\n\n\n\n\naddress of the new upgrading scheme\n\n\n\n\n\n\n\n\n_params\n \nof type \nbytes32\n\n\n\n\n???\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nan id which represents the proposal\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nproposeUpgrade(address,address)\n\n\n\n\npropose an upgrade of the organization's controller\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\navatar of the organization\n\n\n\n\n\n\n\n\n_newController\n \nof type \naddress\n\n\n\n\naddress of the new controller that is being proposed\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nan id which represents the proposal\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nsetParameters(bytes32,address)\n\n\n\n\nhash the parameters, save them if necessary, and return the hash value\n\n\n\n\nExecution cost\n: less than 41096 gas\n\n\nParams:\n\n\n\n\n_voteParams\n \nof type \nbytes32\n\n\n_intVote\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ntransferOwnership(address)\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost\n: less than 23005 gas\n\n\nParams:\n\n\n\n\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nThe address to transfer ownership to.\n\n\n\n\n\n\n\n\n\n\nupdateParameters(bytes32)\n\n\nExecution cost\n: less than 20594 gas\n\n\nParams:\n\n\n\n\n_hashedParameters\n \nof type \nbytes32\n\n\n\n\nBack to the top \u2191", 
            "title": "UpgradeScheme"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#upgradescheme", 
            "text": "see the source   A scheme to manage the upgrade of an organization.   Execution cost : less than 21115 gas  Deployment cost : less than 714400 gas  Combined cost : less than 735515 gas", 
            "title": "UpgradeScheme"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#constructor", 
            "text": "", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#changeupgradeschemeproposaladdressbytes32addressaddressbytes32", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32  _intVoteInterface   of type  address  newUpgradeScheme   of type  address  _params   of type  bytes32", 
            "title": "ChangeUpgradeSchemeProposal(address,bytes32,address,address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#newproposalbytes32", 
            "text": "Execution cost : No bound available  Params:   proposalId   of type  bytes32", 
            "title": "NewProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#newupgradeproposaladdressbytes32addressaddress", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32  _intVoteInterface   of type  address  _newController   of type  address", 
            "title": "NewUpgradeProposal(address,bytes32,address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#ownershiptransferredaddressaddress", 
            "text": "Execution cost : No bound available  Params:   previousOwner   of type  address  newOwner   of type  address", 
            "title": "OwnershipTransferred(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#proposaldeletedaddressbytes32", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32", 
            "title": "ProposalDeleted(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#proposalexecutedaddressbytes32", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32", 
            "title": "ProposalExecuted(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#executebytes32addressint256", 
            "text": "execution of proposals, can only be called by the voting machine in which the vote is held.   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the ID of the voting in the voting machine     _avatar   of type  address   address of the controller     _param   of type  int256   a parameter of the voting result, 0 is no and 1 is yes.     Returns:   output_0   of type  bool", 
            "title": "execute(bytes32,address,int256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#hashedparameters", 
            "text": "Execution cost : less than 656 gas  Attributes : constant  Returns:   output_0   of type  bytes32", 
            "title": "hashedParameters()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#getparametershashbytes32address", 
            "text": "return a hash of the given parameters   Execution cost : less than 586 gas  Attributes : constant  Params:   _voteParams   of type  bytes32  _intVote   of type  address   Returns:   output_0   of type  bytes32", 
            "title": "getParametersHash(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#organizationsproposalsaddressbytes32", 
            "text": "Execution cost : less than 1348 gas  Attributes : constant  Params:   param_0   of type  address  param_1   of type  bytes32   Returns:   upgradeContract   of type  address  params   of type  bytes32  proposalType   of type  uint256", 
            "title": "organizationsProposals(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#owner", 
            "text": "Execution cost : less than 765 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "owner()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#parametersbytes32", 
            "text": "Execution cost : less than 894 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   voteParams   of type  bytes32  intVote   of type  address", 
            "title": "parameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#proposechangeupgradingschemeaddressaddressbytes32", 
            "text": "propose to replace this scheme by another upgrading scheme   Execution cost : No bound available  Params:    _avatar   of type  address   avatar of the organization     _scheme   of type  address   address of the new upgrading scheme     _params   of type  bytes32   ???     Returns:   an id which represents the proposal    output_0   of type  bytes32", 
            "title": "proposeChangeUpgradingScheme(address,address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#proposeupgradeaddressaddress", 
            "text": "propose an upgrade of the organization's controller   Execution cost : No bound available  Params:    _avatar   of type  address   avatar of the organization     _newController   of type  address   address of the new controller that is being proposed     Returns:   an id which represents the proposal    output_0   of type  bytes32", 
            "title": "proposeUpgrade(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#setparametersbytes32address", 
            "text": "hash the parameters, save them if necessary, and return the hash value   Execution cost : less than 41096 gas  Params:   _voteParams   of type  bytes32  _intVote   of type  address   Returns:   output_0   of type  bytes32", 
            "title": "setParameters(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#transferownershipaddress", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost : less than 23005 gas  Params:    newOwner   of type  address   The address to transfer ownership to.", 
            "title": "transferOwnership(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/UpgradeScheme/#updateparametersbytes32", 
            "text": "Execution cost : less than 20594 gas  Params:   _hashedParameters   of type  bytes32   Back to the top \u2191", 
            "title": "updateParameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/", 
            "text": "VestingScheme\n\n\nsee the source\n\n\n\n\nA scheme for vesting.\n\n\n\n\nExecution cost\n: less than 21840 gas\n\n\nDeployment cost\n: less than 1413000 gas\n\n\nCombined cost\n: less than 1434840 gas\n\n\nConstructor\n\n\nEvents\n\n\nAgreementCancel(uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_agreementId\n \nof type \nuint256\n\n\n\n\n\n\nAgreementProposal(address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\n\n\nCollect(uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_agreementId\n \nof type \nuint256\n\n\n\n\n\n\nExecution(address,bytes32,int256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_result\n \nof type \nint256\n\n\n\n\n\n\nNewProposal(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nproposalId\n \nof type \nbytes32\n\n\n\n\n\n\nNewVestedAgreement(uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_agreementId\n \nof type \nuint256\n\n\n\n\n\n\nOwnershipTransferred(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type \naddress\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\n\n\nProposalExecuted(address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\n\n\nRevokeSignToCancelAgreement(uint256,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_agreementId\n \nof type \nuint256\n\n\n_signer\n \nof type \naddress\n\n\n\n\n\n\nSignToCancelAgreement(uint256,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_agreementId\n \nof type \nuint256\n\n\n_signer\n \nof type \naddress\n\n\n\n\nMethods\n\n\nrevokeSignToCancelAgreement(uint256)\n\n\n\n\nFunction to revoke vote for canceling agreement.\n\n\n\n\nExecution cost\n: less than 43398 gas\n\n\nParams:\n\n\n\n\n\n\n_agreementId\n \nof type \nuint256\n\n\n\n\nthe relevant agreement.\n\n\n\n\n\n\n\n\n\n\nhashedParameters()\n\n\nExecution cost\n: less than 744 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ngetParametersHash(bytes32,address)\n\n\n\n\nHash the parameters, and return the hash value\n\n\n\n\nExecution cost\n: less than 564 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_voteParams\n \nof type \nbytes32\n\n\n\n\n\n\nvoting parameters\n\n\n\n\n\n\n\n\n\n\n_intVote\n \nof type \naddress\n\n\n\n\n\n\nvoting machine contract.\n\n\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbytes32 -the parameters hash\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ncreateVestedAgreement(address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address[])\n\n\n\n\nCreating a vesting agreement.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_token\n \nof type \naddress\n\n\n\n\nthe relevant token in the agreement.\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nthe beneficiary of the agreement.\n\n\n\n\n\n\n\n\n_returnOnCancelAddress\n \nof type \naddress\n\n\n\n\nwhere to send the tokens in case of stoping.\n\n\n\n\n\n\n\n\n_startingBlock\n \nof type \nuint256\n\n\n\n\nthe block from which the agreement starts.\n\n\n\n\n\n\n\n\n_amountPerPeriod\n \nof type \nuint256\n\n\n\n\namount of tokens per period.\n\n\n\n\n\n\n\n\n_periodLength\n \nof type \nuint256\n\n\n\n\nperiod length in blocks.\n\n\n\n\n\n\n\n\n_numOfAgreedPeriods\n \nof type \nuint256\n\n\n\n\nhow many periods agreed on.\n\n\n\n\n\n\n\n\n_cliffInPeriods\n \nof type \nuint256\n\n\n\n\nthe length of the cliff in periods.\n\n\n\n\n\n\n\n\n_signaturesReqToCancel\n \nof type \nuint256\n\n\n\n\nnumber of signatures required to cancel agreement.\n\n\n\n\n\n\n\n\n_signersArray\n \nof type \naddress[]\n\n\n\n\navatar array of addresses that can sign to cancel agreement.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint the agreement index.\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nexecute(bytes32,address,int256)\n\n\n\n\nexecution of proposals, can only be called by the voting machine in which the vote is held.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the voting in the voting machine\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\naddress of the controller\n\n\n\n\n\n\n\n\n_param\n \nof type \nint256\n\n\n\n\na parameter of the voting result, 0 is no and 1 is yes.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which represents a successful of the function\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ncollect(uint256)\n\n\n\n\nFunction for a beneficiary to collect.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_agreementId\n \nof type \nuint256\n\n\n\n\nthe relevant agreement.\n\n\n\n\n\n\n\n\n\n\nagreements(uint256)\n\n\nExecution cost\n: less than 3271 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nuint256\n\n\n\n\nReturns:\n\n\n\n\ntoken\n \nof type \naddress\n\n\nbeneficiary\n \nof type \naddress\n\n\nreturnOnCancelAddress\n \nof type \naddress\n\n\nstartingBlock\n \nof type \nuint256\n\n\namountPerPeriod\n \nof type \nuint256\n\n\nperiodLength\n \nof type \nuint256\n\n\nnumOfAgreedPeriods\n \nof type \nuint256\n\n\ncliffInPeriods\n \nof type \nuint256\n\n\nsignaturesReqToCancel\n \nof type \nuint256\n\n\ncollectedPeriods\n \nof type \nuint256\n\n\nsignaturesReceivedCounter\n \nof type \nuint256\n\n\n\n\n\n\norganizationsData(address,bytes32)\n\n\nExecution cost\n: less than 3220 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\nparam_1\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\ntoken\n \nof type \naddress\n\n\nbeneficiary\n \nof type \naddress\n\n\nreturnOnCancelAddress\n \nof type \naddress\n\n\nstartingBlock\n \nof type \nuint256\n\n\namountPerPeriod\n \nof type \nuint256\n\n\nperiodLength\n \nof type \nuint256\n\n\nnumOfAgreedPeriods\n \nof type \nuint256\n\n\ncliffInPeriods\n \nof type \nuint256\n\n\nsignaturesReqToCancel\n \nof type \nuint256\n\n\ncollectedPeriods\n \nof type \nuint256\n\n\nsignaturesReceivedCounter\n \nof type \nuint256\n\n\n\n\n\n\nowner()\n\n\nExecution cost\n: less than 787 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nparameters(bytes32)\n\n\nExecution cost\n: less than 894 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\nvoteParams\n \nof type \nbytes32\n\n\nintVote\n \nof type \naddress\n\n\n\n\n\n\nproposeVestingAgreement(address,address,uint256,uint256,uint256,uint256,uint256,uint256,address[],address)\n\n\n\n\nProposing a vesting agreement in an organization.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nthe beneficiary of the agreement.\n\n\n\n\n\n\n\n\n_returnOnCancelAddress\n \nof type \naddress\n\n\n\n\nwhere to send the tokens in case of stoping.\n\n\n\n\n\n\n\n\n_startingBlock\n \nof type \nuint256\n\n\n\n\nthe block from which the agreement starts.\n\n\n\n\n\n\n\n\n_amountPerPeriod\n \nof type \nuint256\n\n\n\n\namount of tokens per period.\n\n\n\n\n\n\n\n\n_periodLength\n \nof type \nuint256\n\n\n\n\nperiod length in blocks.\n\n\n\n\n\n\n\n\n_numOfAgreedPeriods\n \nof type \nuint256\n\n\n\n\nhow many periods agreed on.\n\n\n\n\n\n\n\n\n_cliffInPeriods\n \nof type \nuint256\n\n\n\n\nthe length of the cliff in periods.\n\n\n\n\n\n\n\n\n_signaturesReqToCancel\n \nof type \nuint256\n\n\n\n\nnumber of signatures required to cancel agreement.\n\n\n\n\n\n\n\n\n_signersArray\n \nof type \naddress[]\n\n\n\n\navatar array of addresses that can sign to cancel agreement.\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\navatar of the organization.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbytes32 the proposalId\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nsetParameters(bytes32,address)\n\n\n\n\nHash the parameters, save them if necessary, and return the hash value\n\n\n\n\nExecution cost\n: less than 41091 gas\n\n\nParams:\n\n\n\n\n\n\n_voteParams\n \nof type \nbytes32\n\n\n\n\n\n\nvoting parameters\n\n\n\n\n\n\n\n\n\n\n_intVote\n \nof type \naddress\n\n\n\n\n\n\nvoting machine contract.\n\n\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbytes32 -the parameters hash\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nsignToCancelAgreement(uint256)\n\n\n\n\nFunction to sign to cancel an agreement.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_agreementId\n \nof type \nuint256\n\n\n\n\nthe relevant agreement.\n\n\n\n\n\n\n\n\n\n\ntransferOwnership(address)\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost\n: less than 23071 gas\n\n\nParams:\n\n\n\n\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nThe address to transfer ownership to.\n\n\n\n\n\n\n\n\n\n\nupdateParameters(bytes32)\n\n\nExecution cost\n: less than 20572 gas\n\n\nParams:\n\n\n\n\n_hashedParameters\n \nof type \nbytes32\n\n\n\n\nBack to the top \u2191", 
            "title": "VestingScheme"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#vestingscheme", 
            "text": "see the source   A scheme for vesting.   Execution cost : less than 21840 gas  Deployment cost : less than 1413000 gas  Combined cost : less than 1434840 gas", 
            "title": "VestingScheme"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#constructor", 
            "text": "", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#agreementcanceluint256", 
            "text": "Execution cost : No bound available  Params:   _agreementId   of type  uint256", 
            "title": "AgreementCancel(uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#agreementproposaladdressbytes32", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32", 
            "title": "AgreementProposal(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#collectuint256", 
            "text": "Execution cost : No bound available  Params:   _agreementId   of type  uint256", 
            "title": "Collect(uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#executionaddressbytes32int256", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32  _result   of type  int256", 
            "title": "Execution(address,bytes32,int256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#newproposalbytes32", 
            "text": "Execution cost : No bound available  Params:   proposalId   of type  bytes32", 
            "title": "NewProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#newvestedagreementuint256", 
            "text": "Execution cost : No bound available  Params:   _agreementId   of type  uint256", 
            "title": "NewVestedAgreement(uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#ownershiptransferredaddressaddress", 
            "text": "Execution cost : No bound available  Params:   previousOwner   of type  address  newOwner   of type  address", 
            "title": "OwnershipTransferred(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#proposalexecutedaddress", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address", 
            "title": "ProposalExecuted(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#revokesigntocancelagreementuint256address", 
            "text": "Execution cost : No bound available  Params:   _agreementId   of type  uint256  _signer   of type  address", 
            "title": "RevokeSignToCancelAgreement(uint256,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#signtocancelagreementuint256address", 
            "text": "Execution cost : No bound available  Params:   _agreementId   of type  uint256  _signer   of type  address", 
            "title": "SignToCancelAgreement(uint256,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#revokesigntocancelagreementuint256", 
            "text": "Function to revoke vote for canceling agreement.   Execution cost : less than 43398 gas  Params:    _agreementId   of type  uint256   the relevant agreement.", 
            "title": "revokeSignToCancelAgreement(uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#hashedparameters", 
            "text": "Execution cost : less than 744 gas  Attributes : constant  Returns:   output_0   of type  bytes32", 
            "title": "hashedParameters()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#getparametershashbytes32address", 
            "text": "Hash the parameters, and return the hash value   Execution cost : less than 564 gas  Attributes : constant  Params:    _voteParams   of type  bytes32    voting parameters      _intVote   of type  address    voting machine contract.      Returns:   bytes32 -the parameters hash    output_0   of type  bytes32", 
            "title": "getParametersHash(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#createvestedagreementaddressaddressaddressuint256uint256uint256uint256uint256uint256address", 
            "text": "Creating a vesting agreement.   Execution cost : No bound available  Params:    _token   of type  address   the relevant token in the agreement.     _beneficiary   of type  address   the beneficiary of the agreement.     _returnOnCancelAddress   of type  address   where to send the tokens in case of stoping.     _startingBlock   of type  uint256   the block from which the agreement starts.     _amountPerPeriod   of type  uint256   amount of tokens per period.     _periodLength   of type  uint256   period length in blocks.     _numOfAgreedPeriods   of type  uint256   how many periods agreed on.     _cliffInPeriods   of type  uint256   the length of the cliff in periods.     _signaturesReqToCancel   of type  uint256   number of signatures required to cancel agreement.     _signersArray   of type  address[]   avatar array of addresses that can sign to cancel agreement.     Returns:   uint the agreement index.    output_0   of type  uint256", 
            "title": "createVestedAgreement(address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,address[])"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#executebytes32addressint256", 
            "text": "execution of proposals, can only be called by the voting machine in which the vote is held.   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the ID of the voting in the voting machine     _avatar   of type  address   address of the controller     _param   of type  int256   a parameter of the voting result, 0 is no and 1 is yes.     Returns:   bool which represents a successful of the function    output_0   of type  bool", 
            "title": "execute(bytes32,address,int256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#collectuint256_1", 
            "text": "Function for a beneficiary to collect.   Execution cost : No bound available  Params:    _agreementId   of type  uint256   the relevant agreement.", 
            "title": "collect(uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#agreementsuint256", 
            "text": "Execution cost : less than 3271 gas  Attributes : constant  Params:   param_0   of type  uint256   Returns:   token   of type  address  beneficiary   of type  address  returnOnCancelAddress   of type  address  startingBlock   of type  uint256  amountPerPeriod   of type  uint256  periodLength   of type  uint256  numOfAgreedPeriods   of type  uint256  cliffInPeriods   of type  uint256  signaturesReqToCancel   of type  uint256  collectedPeriods   of type  uint256  signaturesReceivedCounter   of type  uint256", 
            "title": "agreements(uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#organizationsdataaddressbytes32", 
            "text": "Execution cost : less than 3220 gas  Attributes : constant  Params:   param_0   of type  address  param_1   of type  bytes32   Returns:   token   of type  address  beneficiary   of type  address  returnOnCancelAddress   of type  address  startingBlock   of type  uint256  amountPerPeriod   of type  uint256  periodLength   of type  uint256  numOfAgreedPeriods   of type  uint256  cliffInPeriods   of type  uint256  signaturesReqToCancel   of type  uint256  collectedPeriods   of type  uint256  signaturesReceivedCounter   of type  uint256", 
            "title": "organizationsData(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#owner", 
            "text": "Execution cost : less than 787 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "owner()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#parametersbytes32", 
            "text": "Execution cost : less than 894 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   voteParams   of type  bytes32  intVote   of type  address", 
            "title": "parameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#proposevestingagreementaddressaddressuint256uint256uint256uint256uint256uint256addressaddress", 
            "text": "Proposing a vesting agreement in an organization.   Execution cost : No bound available  Params:    _beneficiary   of type  address   the beneficiary of the agreement.     _returnOnCancelAddress   of type  address   where to send the tokens in case of stoping.     _startingBlock   of type  uint256   the block from which the agreement starts.     _amountPerPeriod   of type  uint256   amount of tokens per period.     _periodLength   of type  uint256   period length in blocks.     _numOfAgreedPeriods   of type  uint256   how many periods agreed on.     _cliffInPeriods   of type  uint256   the length of the cliff in periods.     _signaturesReqToCancel   of type  uint256   number of signatures required to cancel agreement.     _signersArray   of type  address[]   avatar array of addresses that can sign to cancel agreement.     _avatar   of type  address   avatar of the organization.     Returns:   bytes32 the proposalId    output_0   of type  bytes32", 
            "title": "proposeVestingAgreement(address,address,uint256,uint256,uint256,uint256,uint256,uint256,address[],address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#setparametersbytes32address", 
            "text": "Hash the parameters, save them if necessary, and return the hash value   Execution cost : less than 41091 gas  Params:    _voteParams   of type  bytes32    voting parameters      _intVote   of type  address    voting machine contract.      Returns:   bytes32 -the parameters hash    output_0   of type  bytes32", 
            "title": "setParameters(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#signtocancelagreementuint256", 
            "text": "Function to sign to cancel an agreement.   Execution cost : No bound available  Params:    _agreementId   of type  uint256   the relevant agreement.", 
            "title": "signToCancelAgreement(uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#transferownershipaddress", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost : less than 23071 gas  Params:    newOwner   of type  address   The address to transfer ownership to.", 
            "title": "transferOwnership(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VestingScheme/#updateparametersbytes32", 
            "text": "Execution cost : less than 20572 gas  Params:   _hashedParameters   of type  bytes32   Back to the top \u2191", 
            "title": "updateParameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/", 
            "text": "VoteInOrganizationScheme\n\n\nsee the source\n\n\n\n\nVoteInOrganizationScheme.\n\n\n\n\nExecution cost\n: less than 21070 gas\n\n\nDeployment cost\n: less than 669800 gas\n\n\nCombined cost\n: less than 690870 gas\n\n\nConstructor\n\n\nEvents\n\n\nNewProposal(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nproposalId\n \nof type \nbytes32\n\n\n\n\n\n\nNewVoteProposal(address,bytes32,address,address,bytes32,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_intVoteInterface\n \nof type \naddress\n\n\n_originalIntVote\n \nof type \naddress\n\n\n_originalProposalId\n \nof type \nbytes32\n\n\n_originalNumOfChoices\n \nof type \nuint256\n\n\n\n\n\n\nOwnershipTransferred(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type \naddress\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\n\n\nProposalDeleted(address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\n\n\nProposalExecuted(address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\n\n\nVoteOnBehalf(bytes32[])\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_params\n \nof type \nbytes32[]\n\n\n\n\nMethods\n\n\nproposeVote(address,address,bytes32)\n\n\n\n\npropose to vote in other organization     The function trigger NewVoteProposal event\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\navatar of the organization\n\n\n\n\n\n\n\n\n_originalIntVote\n \nof type \naddress\n\n\n\n\nthe other organization voting machine\n\n\n\n\n\n\n\n\n_originalProposalId\n \nof type \nbytes32\n\n\n\n\nthe other organization proposal id\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nan id which represents the proposal\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nhashedParameters()\n\n\nExecution cost\n: less than 656 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ngetParametersHash(bytes32,address)\n\n\n\n\nHash the parameters, and return the hash value\n\n\n\n\nExecution cost\n: less than 564 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_voteParams\n \nof type \nbytes32\n\n\n\n\n\n\nvoting parameters\n\n\n\n\n\n\n\n\n\n\n_intVote\n \nof type \naddress\n\n\n\n\n\n\nvoting machine contract.\n\n\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbytes32 -the parameters hash\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\naction(bytes32[])\n\n\n\n\ndo the actual voting in the other organization in behalf of the organization's avatar.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_params\n \nof type \nbytes32[]\n\n\n\n\narray represent the voting .       _params[0] - the address of the voting machine.       _params[1] - the proposalId.       _params[2] - the voting machine params.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which indicate success.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexecute(bytes32,address,int256)\n\n\n\n\nexecution of proposals, can only be called by the voting machine in which the vote is held.     This function will trigger ProposalDeleted and ProposalExecuted events\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the voting in the voting machine\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\naddress of the controller\n\n\n\n\n\n\n\n\n_param\n \nof type \nint256\n\n\n\n\na parameter of the voting result 0 to numOfChoices .\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool which indicate success.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\norganizationsData(address,bytes32)\n\n\nExecution cost\n: less than 1326 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\nparam_1\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\noriginalIntVote\n \nof type \naddress\n\n\noriginalProposalId\n \nof type \nbytes32\n\n\noriginalNumOfChoices\n \nof type \nuint256\n\n\n\n\n\n\nowner()\n\n\nExecution cost\n: less than 765 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nparameters(bytes32)\n\n\nExecution cost\n: less than 906 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\nintVote\n \nof type \naddress\n\n\nvoteParams\n \nof type \nbytes32\n\n\n\n\n\n\nsetParameters(bytes32,address)\n\n\n\n\nHash the parameters, save them if necessary, and return the hash value\n\n\n\n\nExecution cost\n: less than 41099 gas\n\n\nParams:\n\n\n\n\n\n\n_voteParams\n \nof type \nbytes32\n\n\n\n\n\n\nvoting parameters\n\n\n\n\n\n\n\n\n\n\n_intVote\n \nof type \naddress\n\n\n\n\n\n\nvoting machine contract.\n\n\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbytes32 -the parameters hash\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ntransferOwnership(address)\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost\n: less than 23005 gas\n\n\nParams:\n\n\n\n\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nThe address to transfer ownership to.\n\n\n\n\n\n\n\n\n\n\nupdateParameters(bytes32)\n\n\nExecution cost\n: less than 20572 gas\n\n\nParams:\n\n\n\n\n_hashedParameters\n \nof type \nbytes32\n\n\n\n\nBack to the top \u2191", 
            "title": "VoteInOrganizationScheme"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#voteinorganizationscheme", 
            "text": "see the source   VoteInOrganizationScheme.   Execution cost : less than 21070 gas  Deployment cost : less than 669800 gas  Combined cost : less than 690870 gas", 
            "title": "VoteInOrganizationScheme"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#constructor", 
            "text": "", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#newproposalbytes32", 
            "text": "Execution cost : No bound available  Params:   proposalId   of type  bytes32", 
            "title": "NewProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#newvoteproposaladdressbytes32addressaddressbytes32uint256", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32  _intVoteInterface   of type  address  _originalIntVote   of type  address  _originalProposalId   of type  bytes32  _originalNumOfChoices   of type  uint256", 
            "title": "NewVoteProposal(address,bytes32,address,address,bytes32,uint256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#ownershiptransferredaddressaddress", 
            "text": "Execution cost : No bound available  Params:   previousOwner   of type  address  newOwner   of type  address", 
            "title": "OwnershipTransferred(address,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#proposaldeletedaddressbytes32", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32", 
            "title": "ProposalDeleted(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#proposalexecutedaddressbytes32", 
            "text": "Execution cost : No bound available  Params:   _avatar   of type  address  _proposalId   of type  bytes32", 
            "title": "ProposalExecuted(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#voteonbehalfbytes32", 
            "text": "Execution cost : No bound available  Params:   _params   of type  bytes32[]", 
            "title": "VoteOnBehalf(bytes32[])"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#proposevoteaddressaddressbytes32", 
            "text": "propose to vote in other organization     The function trigger NewVoteProposal event   Execution cost : No bound available  Params:    _avatar   of type  address   avatar of the organization     _originalIntVote   of type  address   the other organization voting machine     _originalProposalId   of type  bytes32   the other organization proposal id     Returns:   an id which represents the proposal    output_0   of type  bytes32", 
            "title": "proposeVote(address,address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#hashedparameters", 
            "text": "Execution cost : less than 656 gas  Attributes : constant  Returns:   output_0   of type  bytes32", 
            "title": "hashedParameters()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#getparametershashbytes32address", 
            "text": "Hash the parameters, and return the hash value   Execution cost : less than 564 gas  Attributes : constant  Params:    _voteParams   of type  bytes32    voting parameters      _intVote   of type  address    voting machine contract.      Returns:   bytes32 -the parameters hash    output_0   of type  bytes32", 
            "title": "getParametersHash(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#actionbytes32", 
            "text": "do the actual voting in the other organization in behalf of the organization's avatar.   Execution cost : No bound available  Params:    _params   of type  bytes32[]   array represent the voting .       _params[0] - the address of the voting machine.       _params[1] - the proposalId.       _params[2] - the voting machine params.     Returns:   bool which indicate success.    output_0   of type  bool", 
            "title": "action(bytes32[])"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#executebytes32addressint256", 
            "text": "execution of proposals, can only be called by the voting machine in which the vote is held.     This function will trigger ProposalDeleted and ProposalExecuted events   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the ID of the voting in the voting machine     _avatar   of type  address   address of the controller     _param   of type  int256   a parameter of the voting result 0 to numOfChoices .     Returns:   bool which indicate success.    output_0   of type  bool", 
            "title": "execute(bytes32,address,int256)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#organizationsdataaddressbytes32", 
            "text": "Execution cost : less than 1326 gas  Attributes : constant  Params:   param_0   of type  address  param_1   of type  bytes32   Returns:   originalIntVote   of type  address  originalProposalId   of type  bytes32  originalNumOfChoices   of type  uint256", 
            "title": "organizationsData(address,bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#owner", 
            "text": "Execution cost : less than 765 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "owner()"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#parametersbytes32", 
            "text": "Execution cost : less than 906 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   intVote   of type  address  voteParams   of type  bytes32", 
            "title": "parameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#setparametersbytes32address", 
            "text": "Hash the parameters, save them if necessary, and return the hash value   Execution cost : less than 41099 gas  Params:    _voteParams   of type  bytes32    voting parameters      _intVote   of type  address    voting machine contract.      Returns:   bytes32 -the parameters hash    output_0   of type  bytes32", 
            "title": "setParameters(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#transferownershipaddress", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost : less than 23005 gas  Params:    newOwner   of type  address   The address to transfer ownership to.", 
            "title": "transferOwnership(address)"
        }, 
        {
            "location": "/generated_docs/universalSchemes/VoteInOrganizationScheme/#updateparametersbytes32", 
            "text": "Execution cost : less than 20572 gas  Params:   _hashedParameters   of type  bytes32   Back to the top \u2191", 
            "title": "updateParameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/", 
            "text": "AbsoluteVote\n\n\nsee the source\n\n\nExecution cost\n: less than 872 gas\n\n\nDeployment cost\n: less than 842800 gas\n\n\nCombined cost\n: less than 843672 gas\n\n\nEvents\n\n\nCancelProposal(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\n\n\nCancelVoting(bytes32,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_voter\n \nof type \naddress\n\n\n\n\n\n\nExecuteProposal(bytes32,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_decision\n \nof type \nuint256\n\n\n\n\n\n\nNewProposal(bytes32,uint256,address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_numOfChoices\n \nof type \nuint256\n\n\n_proposer\n \nof type \naddress\n\n\n_paramsHash\n \nof type \nbytes32\n\n\n\n\n\n\nVoteProposal(bytes32,address,uint256,uint256,bool)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_voter\n \nof type \naddress\n\n\n_vote\n \nof type \nuint256\n\n\n_reputation\n \nof type \nuint256\n\n\n_isOwnerVote\n \nof type \nbool\n\n\n\n\nMethods\n\n\ncancelVote(bytes32)\n\n\n\n\nCancel the vote of the msg.sender: subtract the reputation amount from the votes and delete the voter from the proposal struct\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nid of the proposal\n\n\n\n\n\n\n\n\n\n\nparameters(bytes32)\n\n\nExecution cost\n: less than 1169 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\nreputationSystem\n \nof type \naddress\n\n\nprecReq\n \nof type \nuint256\n\n\nallowOwner\n \nof type \nbool\n\n\n\n\n\n\nexecute(bytes32)\n\n\n\n\nexecute check if the proposal has been decided, and if so, execute the proposal\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe id of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool true - the proposal has been executed             false - otherwise.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nisVotable(bytes32)\n\n\n\n\nisVotable check if the proposal is votable\n\n\n\n\nExecution cost\n: less than 812 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool true or false\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ngetNumberOfChoices(bytes32)\n\n\n\n\ngetNumberOfChoices returns the number of choices possible in this proposal\n\n\n\n\nExecution cost\n: less than 734 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint that contains number of choices\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nownerVote(bytes32,uint256,address)\n\n\n\n\nvoting function with owner functionality (can vote on behalf of someone else)\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nid of the proposal\n\n\n\n\n\n\n\n\n_vote\n \nof type \nuint256\n\n\n\n\na value between 0 to and the proposal number of choices.\n\n\n\n\n\n\n\n\n_voter\n \nof type \naddress\n\n\n\n\nwill be voted with that voter's address\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool true - the proposal has been executed             false - otherwise.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ncancelProposal(bytes32)\n\n\n\n\nCancel a proposal, only the owner can call this function and only if allowOwner flag is true.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe proposal ID\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nisAbstainAllow()\n\n\n\n\nisAbstainAllow returns if the voting machine allow abstain (0)\n\n\n\n\nExecution cost\n: less than 396 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\nbool true or false\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ngetParametersHash(address,uint256,bool)\n\n\n\n\nhashParameters returns a hash of the given parameters\n\n\n\n\nExecution cost\n: less than 603 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_reputationSystem\n \nof type \naddress\n\n\n_precReq\n \nof type \nuint256\n\n\n_allowOwner\n \nof type \nbool\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nproposals(bytes32)\n\n\nExecution cost\n: less than 2210 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\nowner\n \nof type \naddress\n\n\navatar\n \nof type \naddress\n\n\nnumOfChoices\n \nof type \nuint256\n\n\nexecutable\n \nof type \naddress\n\n\nparamsHash\n \nof type \nbytes32\n\n\ntotalVotes\n \nof type \nuint256\n\n\nopen\n \nof type \nbool\n\n\n\n\n\n\npropose(uint256,bytes32,address,address,address)\n\n\n\n\nregister a new proposal with the given parameters. Every proposal has a unique ID which is being generated by calculating keccak256 of a incremented counter.\n\n\n\n\nExecution cost\n: less than 150314 gas\n\n\nParams:\n\n\n\n\n\n\n_numOfChoices\n \nof type \nuint256\n\n\n\n\nnumber of voting choices\n\n\n\n\n\n\n\n\n_paramsHash\n \nof type \nbytes32\n\n\n\n\ndefined the parameters of the voting machine used for this proposal\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nan address to be sent as the payload to the _executable contract.\n\n\n\n\n\n\n\n\n_executable\n \nof type \naddress\n\n\n\n\nThis contract will be executed when vote is over.\n\n\n\n\n\n\n\n\nparam_4\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nproposal's id.\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nsetParameters(address,uint256,bool)\n\n\n\n\nhash the parameters, save them if necessary, and return the hash value\n\n\n\n\nExecution cost\n: less than 61851 gas\n\n\nParams:\n\n\n\n\n_reputationSystem\n \nof type \naddress\n\n\n_precReq\n \nof type \nuint256\n\n\n_allowOwner\n \nof type \nbool\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nvote(bytes32,uint256)\n\n\n\n\nvoting function\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nid of the proposal\n\n\n\n\n\n\n\n\n_vote\n \nof type \nuint256\n\n\n\n\na value between 0 to and the proposal number of choices.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool true - the proposal has been executed             false - otherwise.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nvoteInfo(bytes32,address)\n\n\n\n\nvoteInfo returns the vote and the amount of reputation of the user committed to this proposal\n\n\n\n\nExecution cost\n: less than 1230 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\n_voter\n \nof type \naddress\n\n\n\n\nthe address of the voter\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint vote - the voters vote       uint reputation - amount of reputation committed by _voter to _proposalId\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\noutput_1\n \nof type \nuint256\n\n\n\n\n\n\nvoteStatus(bytes32,uint256)\n\n\n\n\nvoteStatus returns the reputation voted for a proposal for a specific voting choice.\n\n\n\n\nExecution cost\n: less than 859 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\n_choice\n \nof type \nuint256\n\n\n\n\nthe index in the\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nvoted reputation for the given choice\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nvoteWithSpecifiedAmounts(bytes32,uint256,uint256,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_vote\n \nof type \nuint256\n\n\n_rep\n \nof type \nuint256\n\n\nparam_3\n \nof type \nuint256\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\nBack to the top \u2191", 
            "title": "AbsoluteVote"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#absolutevote", 
            "text": "see the source  Execution cost : less than 872 gas  Deployment cost : less than 842800 gas  Combined cost : less than 843672 gas", 
            "title": "AbsoluteVote"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#cancelproposalbytes32", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32", 
            "title": "CancelProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#cancelvotingbytes32address", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _voter   of type  address", 
            "title": "CancelVoting(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#executeproposalbytes32uint256", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _decision   of type  uint256", 
            "title": "ExecuteProposal(bytes32,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#newproposalbytes32uint256addressbytes32", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _numOfChoices   of type  uint256  _proposer   of type  address  _paramsHash   of type  bytes32", 
            "title": "NewProposal(bytes32,uint256,address,bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#voteproposalbytes32addressuint256uint256bool", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _voter   of type  address  _vote   of type  uint256  _reputation   of type  uint256  _isOwnerVote   of type  bool", 
            "title": "VoteProposal(bytes32,address,uint256,uint256,bool)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#cancelvotebytes32", 
            "text": "Cancel the vote of the msg.sender: subtract the reputation amount from the votes and delete the voter from the proposal struct   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   id of the proposal", 
            "title": "cancelVote(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#parametersbytes32", 
            "text": "Execution cost : less than 1169 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   reputationSystem   of type  address  precReq   of type  uint256  allowOwner   of type  bool", 
            "title": "parameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#executebytes32", 
            "text": "execute check if the proposal has been decided, and if so, execute the proposal   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the id of the proposal     Returns:   bool true - the proposal has been executed             false - otherwise.    output_0   of type  bool", 
            "title": "execute(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#isvotablebytes32", 
            "text": "isVotable check if the proposal is votable   Execution cost : less than 812 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     Returns:   bool true or false    output_0   of type  bool", 
            "title": "isVotable(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#getnumberofchoicesbytes32", 
            "text": "getNumberOfChoices returns the number of choices possible in this proposal   Execution cost : less than 734 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     Returns:   uint that contains number of choices    output_0   of type  uint256", 
            "title": "getNumberOfChoices(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#ownervotebytes32uint256address", 
            "text": "voting function with owner functionality (can vote on behalf of someone else)   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   id of the proposal     _vote   of type  uint256   a value between 0 to and the proposal number of choices.     _voter   of type  address   will be voted with that voter's address     Returns:   bool true - the proposal has been executed             false - otherwise.    output_0   of type  bool", 
            "title": "ownerVote(bytes32,uint256,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#cancelproposalbytes32_1", 
            "text": "Cancel a proposal, only the owner can call this function and only if allowOwner flag is true.   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the proposal ID     Returns:   output_0   of type  bool", 
            "title": "cancelProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#isabstainallow", 
            "text": "isAbstainAllow returns if the voting machine allow abstain (0)   Execution cost : less than 396 gas  Attributes : constant  Returns:   bool true or false    output_0   of type  bool", 
            "title": "isAbstainAllow()"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#getparametershashaddressuint256bool", 
            "text": "hashParameters returns a hash of the given parameters   Execution cost : less than 603 gas  Attributes : constant  Params:   _reputationSystem   of type  address  _precReq   of type  uint256  _allowOwner   of type  bool   Returns:   output_0   of type  bytes32", 
            "title": "getParametersHash(address,uint256,bool)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#proposalsbytes32", 
            "text": "Execution cost : less than 2210 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   owner   of type  address  avatar   of type  address  numOfChoices   of type  uint256  executable   of type  address  paramsHash   of type  bytes32  totalVotes   of type  uint256  open   of type  bool", 
            "title": "proposals(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#proposeuint256bytes32addressaddressaddress", 
            "text": "register a new proposal with the given parameters. Every proposal has a unique ID which is being generated by calculating keccak256 of a incremented counter.   Execution cost : less than 150314 gas  Params:    _numOfChoices   of type  uint256   number of voting choices     _paramsHash   of type  bytes32   defined the parameters of the voting machine used for this proposal     _avatar   of type  address   an address to be sent as the payload to the _executable contract.     _executable   of type  address   This contract will be executed when vote is over.     param_4   of type  address    Returns:   proposal's id.    output_0   of type  bytes32", 
            "title": "propose(uint256,bytes32,address,address,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#setparametersaddressuint256bool", 
            "text": "hash the parameters, save them if necessary, and return the hash value   Execution cost : less than 61851 gas  Params:   _reputationSystem   of type  address  _precReq   of type  uint256  _allowOwner   of type  bool   Returns:   output_0   of type  bytes32", 
            "title": "setParameters(address,uint256,bool)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#votebytes32uint256", 
            "text": "voting function   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   id of the proposal     _vote   of type  uint256   a value between 0 to and the proposal number of choices.     Returns:   bool true - the proposal has been executed             false - otherwise.    output_0   of type  bool", 
            "title": "vote(bytes32,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#voteinfobytes32address", 
            "text": "voteInfo returns the vote and the amount of reputation of the user committed to this proposal   Execution cost : less than 1230 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     _voter   of type  address   the address of the voter     Returns:   uint vote - the voters vote       uint reputation - amount of reputation committed by _voter to _proposalId    output_0   of type  uint256  output_1   of type  uint256", 
            "title": "voteInfo(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#votestatusbytes32uint256", 
            "text": "voteStatus returns the reputation voted for a proposal for a specific voting choice.   Execution cost : less than 859 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     _choice   of type  uint256   the index in the     Returns:   voted reputation for the given choice    output_0   of type  uint256", 
            "title": "voteStatus(bytes32,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/AbsoluteVote/#votewithspecifiedamountsbytes32uint256uint256uint256", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _vote   of type  uint256  _rep   of type  uint256  param_3   of type  uint256   Returns:   output_0   of type  bool   Back to the top \u2191", 
            "title": "voteWithSpecifiedAmounts(bytes32,uint256,uint256,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/", 
            "text": "GenesisProtocol\n\n\nsee the source\n\n\n\n\nA governance contract -an organization's voting machine scheme.\n\n\n\n\nExecution cost\n: less than 43822 gas\n\n\nDeployment cost\n: less than 2895400 gas\n\n\nCombined cost\n: less than 2939222 gas\n\n\nConstructor\n\n\nParams:\n\n\n\n\n_stakingToken\n \nof type \naddress\n\n\n\n\nEvents\n\n\nExecuteProposal(bytes32,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_decision\n \nof type \nuint256\n\n\n\n\n\n\nNewProposal(bytes32,uint256,address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_numOfChoices\n \nof type \nuint256\n\n\n_proposer\n \nof type \naddress\n\n\n_paramsHash\n \nof type \nbytes32\n\n\n\n\n\n\nNewProposal(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\nproposalId\n \nof type \nbytes32\n\n\n\n\n\n\nOwnershipTransferred(address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\npreviousOwner\n \nof type \naddress\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\n\n\nRedeem(bytes32,address,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_beneficiary\n \nof type \naddress\n\n\n_amount\n \nof type \nuint256\n\n\n\n\n\n\nRedeemReputation(bytes32,address,int256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_beneficiary\n \nof type \naddress\n\n\n_amount\n \nof type \nint256\n\n\n\n\n\n\nStake(bytes32,address,uint256,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_voter\n \nof type \naddress\n\n\n_vote\n \nof type \nuint256\n\n\n_amount\n \nof type \nuint256\n\n\n\n\n\n\nVoteProposal(bytes32,address,uint256,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_voter\n \nof type \naddress\n\n\n_vote\n \nof type \nuint256\n\n\n_reputation\n \nof type \nuint256\n\n\n\n\nMethods\n\n\ngetRedeemableReputationStaker(bytes32,address)\n\n\n\n\ngetRedeemableReputationStaker return the redeemable reputation which a staker is entitle to.\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nthe beneficiary .\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint proposer redeem reputation amount.\n\n\n\n\n\n\noutput_0\n \nof type \nint256\n\n\n\n\n\n\nhashedParameters()\n\n\nExecution cost\n: less than 1338 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nNO()\n\n\nExecution cost\n: less than 280 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\ngetRedeemableReputationProposer(bytes32)\n\n\n\n\ngetRedeemableReputationProposer return the redeemable reputation which a proposer is entitle to.\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nint proposer redeem reputation.\n\n\n\n\n\n\noutput_0\n \nof type \nint256\n\n\n\n\n\n\ngetRedeemableReputationVoter(bytes32,address)\n\n\n\n\ngetRedeemableReputationVoter return the redeemable reputation which a voter is entitle to.\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nthe beneficiary .\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint proposer redeem reputation amount.\n\n\n\n\n\n\noutput_0\n \nof type \nint256\n\n\n\n\n\n\nexecute(bytes32)\n\n\n\n\nexecute check if the proposal has been decided, and if so, execute the proposal\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe id of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool true - the proposal has been executed             false - otherwise.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ngetParametersHash(uint256[12],address)\n\n\n\n\nhashParameters returns a hash of the given parameters\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_params\n \nof type \nuint256[12]\n\n\n_governanceFormulasInterface\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\ngetRedeemableTokensVoter(bytes32,address)\n\n\n\n\ngetRedeemableTokensVoter return the redeemable amount which a voter is entitle to.\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nthe beneficiary .\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint proposer redeem reputation amount.\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\ncancelProposal(bytes32)\n\n\n\n\nCancel a proposal, only the owner can call this function and only if allowOwner flag is true.\n\n\n\n\nExecution cost\n: less than 1485 gas\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe proposal ID\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nYES()\n\n\nExecution cost\n: less than 808 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\ngetRedeemableTokensStaker(bytes32,address)\n\n\n\n\ngetRedeemableTokensStaker return the redeem amount which a certain staker is entitle to.\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nthe beneficiary .\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint redeem amount .\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\ngetNumberOfChoices(bytes32)\n\n\n\n\ngetNumberOfChoices returns the number of choices possible in this proposal\n\n\n\n\nExecution cost\n: less than 1020 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposals\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint that contains number of choices\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\ncancelVote(bytes32)\n\n\n\n\nCancel the vote of the msg.sender: subtract the reputation amount from the votes and delete the voter from the proposal struct\n\n\n\n\nExecution cost\n: less than 1678 gas\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nid of the proposal\n\n\n\n\n\n\n\n\n\n\nvoteStatus(bytes32,uint256)\n\n\n\n\nvoteStatus returns the reputation voted for a proposal for a specific voting choice.\n\n\n\n\nExecution cost\n: less than 1189 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\n_choice\n \nof type \nuint256\n\n\n\n\nthe index in the\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nvoted reputation for the given choice\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nparameters(bytes32)\n\n\nExecution cost\n: less than 3496 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\npreBoostedVoteRequiredPercentage\n \nof type \nuint256\n\n\npreBoostedVotePeriodLimit\n \nof type \nuint256\n\n\nboostedVotePeriodLimit\n \nof type \nuint256\n\n\nthresholdConstA\n \nof type \nuint256\n\n\nthresholdConstB\n \nof type \nuint256\n\n\ngovernanceFormulasInterface\n \nof type \naddress\n\n\nminimumStakingFee\n \nof type \nuint256\n\n\nquietEndingPeriod\n \nof type \nuint256\n\n\nproposingRepRewardConstA\n \nof type \nuint256\n\n\nproposingRepRewardConstB\n \nof type \nuint256\n\n\nstakerFeeRatioForVoters\n \nof type \nuint256\n\n\nvotersReputationLossRatio\n \nof type \nuint256\n\n\nvotersGainRepRatioFromLostRep\n \nof type \nuint256\n\n\n\n\n\n\norgBoostedProposalsCnt(address)\n\n\nExecution cost\n: less than 1419 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nownerVote(bytes32,uint256,address)\n\n\n\n\nvoting function with owner functionality (can vote on behalf of someone else)\n\n\n\n\nExecution cost\n: less than 1550 gas\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nid of the proposal\n\n\n\n\n\n\n\n\nparam_1\n \nof type \nuint256\n\n\n\n\nparam_2\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\nbool true - the proposal has been executed             false - otherwise.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nisVotable(bytes32)\n\n\n\n\nisVotable check if the proposal is votable\n\n\n\n\nExecution cost\n: less than 1848 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool true or false\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nisAbstainAllow()\n\n\n\n\nisAbstainAllow returns if the voting machine allow abstain (0)\n\n\n\n\nExecution cost\n: less than 462 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\nbool true or false\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nowner()\n\n\nExecution cost\n: less than 1007 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nredeem(bytes32,address)\n\n\n\n\nredeem a reward for a successful stake, vote or proposing. The function use a beneficiary address as a parameter (and not msg.sender) to enable users to redeem on behalf of someone else.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\n\n\nthe beneficiary address\n\n\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool true or false.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nsetParameters(uint256[12],address)\n\n\n\n\nhash the parameters, save them if necessary, and return the hash value\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_params\n \nof type \nuint256[12]\n\n\n\n\na parameters array   _params[0] - _preBoostedVoteRequiredPercentage,   _params[1] - _preBoostedVotePeriodLimit, //the time limit for a proposal to be in an absolute voting mode.   _params[2] -_boostedVotePeriodLimit, //the time limit for a proposal to be in an relative voting mode.   _params[3] -_thresholdConstA,   _params[4] -_thresholdConstB,   _params[5] -_minimumStakingFee,   _params[6] -_quietEndingPeriod,   _params[7] -_proposingRepRewardConstA,   _params[8] -_proposingRepRewardConstB,   _params[9] -_stakerFeeRatioForVoters,   _params[10] -_votersReputationLossRatio,   _params[11] -_votersGainRepRatioFromLostRep\n\n\n\n\n\n\n\n\n_governanceFormulasInterface\n \nof type \naddress\n\n\n\n\noverride the default formulas.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nproposalAvatar(bytes32)\n\n\n\n\nproposalAvatar return the avatar for a given proposal\n\n\n\n\nExecution cost\n: less than 1541 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint total reputation supply\n\n\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nscoreThresholdParams(address)\n\n\n\n\nscoreThresholdParams return the score threshold params for a given organization.\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization's avatar\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint thresholdConstAuint thresholdConstB\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\noutput_1\n \nof type \nuint256\n\n\n\n\n\n\nscore(bytes32)\n\n\n\n\nscore return the proposal score\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint proposal score.\n\n\n\n\n\n\noutput_0\n \nof type \nint256\n\n\n\n\n\n\nproposals(bytes32)\n\n\nExecution cost\n: less than 4066 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\navatar\n \nof type \naddress\n\n\nnumOfChoices\n \nof type \nuint256\n\n\nexecutable\n \nof type \naddress\n\n\ntotalVotes\n \nof type \nuint256\n\n\ntotalStakes\n \nof type \nuint256\n\n\nvotersStakes\n \nof type \nuint256\n\n\nlostReputation\n \nof type \nuint256\n\n\nsubmittedTime\n \nof type \nuint256\n\n\nboostedPhaseTime\n \nof type \nuint256\n\n\nstate\n \nof type \nuint8\n\n\nwinningVote\n \nof type \nuint256\n\n\nproposer\n \nof type \naddress\n\n\nboostedVotePeriodLimit\n \nof type \nuint256\n\n\n\n\n\n\npropose(uint256,bytes32,address,address,address)\n\n\n\n\nregister a new proposal with the given parameters. Every proposal has a unique ID which is being generated by calculating keccak256 of a incremented counter.\n\n\n\n\nExecution cost\n: less than 211315 gas\n\n\nParams:\n\n\n\n\n\n\n_numOfChoices\n \nof type \nuint256\n\n\n\n\nnumber of voting choices\n\n\n\n\n\n\n\n\n_paramsHash\n \nof type \nbytes32\n\n\n\n\ndefined the parameters of the voting machine used for this proposal\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nan address to be sent as the payload to the _executable contract.\n\n\n\n\n\n\n\n\n_executable\n \nof type \naddress\n\n\n\n\nThis contract will be executed when vote is over.\n\n\n\n\n\n\n\n\n_proposer\n \nof type \naddress\n\n\n\n\naddress\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nproposal's id.\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nproposalStatus(bytes32)\n\n\n\n\nproposalStatus return the total votes and stakes for a given proposal\n\n\n\n\nExecution cost\n: less than 1352 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint totalVotesuint totalStakesuint voterStakes\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\noutput_1\n \nof type \nuint256\n\n\noutput_2\n \nof type \nuint256\n\n\n\n\n\n\nstake(bytes32,uint256,uint256)\n\n\n\n\nstaking function\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nid of the proposal\n\n\n\n\n\n\n\n\n_vote\n \nof type \nuint256\n\n\n\n\nNO(2) or YES(1).\n\n\n\n\n\n\n\n\n_amount\n \nof type \nuint256\n\n\n\n\nthe betting amount\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool true - the proposal has been executed             false - otherwise.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nshouldBoost(bytes32)\n\n\n\n\nshouldBoost check if a proposal should be shifted to boosted phase.\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool true or false.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nupdateParameters(bytes32)\n\n\nExecution cost\n: less than 20594 gas\n\n\nParams:\n\n\n\n\n_hashedParameters\n \nof type \nbytes32\n\n\n\n\n\n\nstate(bytes32)\n\n\n\n\nvoteStake return the state for a given proposal\n\n\n\n\nExecution cost\n: less than 826 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nProposalState proposal state\n\n\n\n\n\n\noutput_0\n \nof type \nuint8\n\n\n\n\n\n\nstakingToken()\n\n\nExecution cost\n: less than 919 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \naddress\n\n\n\n\n\n\nstaker(bytes32,address)\n\n\n\n\nstaker return the vote and stake amount for a given proposal and staker\n\n\n\n\nExecution cost\n: less than 1386 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\n_staker\n \nof type \naddress\n\n\n\n\nstaker address\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint voteuint amount\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\noutput_1\n \nof type \nuint256\n\n\n\n\n\n\nthreshold(address)\n\n\n\n\nthreshold return the organization's score threshold which required by a proposal to shift to boosted state. This threshold is dynamically set and it depend on the number of boosted proposal.\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nthe organization avatar\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nint thresholdConstA.\n\n\n\n\n\n\noutput_0\n \nof type \nint256\n\n\n\n\n\n\ntotalReputationSupply(bytes32)\n\n\n\n\ntotalReputationSupply return the total reputation supply for a given proposal\n\n\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint total reputation supply\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\ntransferOwnership(address)\n\n\n\n\nAllows the current owner to transfer control of the contract to a newOwner.\n\n\n\n\nExecution cost\n: less than 23734 gas\n\n\nParams:\n\n\n\n\n\n\nnewOwner\n \nof type \naddress\n\n\n\n\nThe address to transfer ownership to.\n\n\n\n\n\n\n\n\n\n\nvote(bytes32,uint256)\n\n\n\n\nvoting function\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nid of the proposal\n\n\n\n\n\n\n\n\n_vote\n \nof type \nuint256\n\n\n\n\nNO(2) or YES(1).\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool true - the proposal has been executed             false - otherwise.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nvoteInfo(bytes32,address)\n\n\n\n\nvoteInfo returns the vote and the amount of reputation of the user committed to this proposal\n\n\n\n\nExecution cost\n: less than 1511 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\n_voter\n \nof type \naddress\n\n\n\n\nthe address of the voter\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint vote - the voters vote       uint reputation - amount of reputation committed by _voter to _proposalId\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\noutput_1\n \nof type \nuint256\n\n\n\n\n\n\nvoteStake(bytes32,uint256)\n\n\n\n\nvoteStake return the amount stakes for a given proposal and vote\n\n\n\n\nExecution cost\n: less than 903 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\n_vote\n \nof type \nuint256\n\n\n\n\nvote number\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint stake amount\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nvoteWithSpecifiedAmounts(bytes32,uint256,uint256,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_vote\n \nof type \nuint256\n\n\n_rep\n \nof type \nuint256\n\n\nparam_3\n \nof type \nuint256\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nwinningVote(bytes32)\n\n\n\n\nvoteStake return the winningVote for a given proposal\n\n\n\n\nExecution cost\n: less than 712 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint winningVote\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\nBack to the top \u2191", 
            "title": "GenesisProtocol"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#genesisprotocol", 
            "text": "see the source   A governance contract -an organization's voting machine scheme.   Execution cost : less than 43822 gas  Deployment cost : less than 2895400 gas  Combined cost : less than 2939222 gas", 
            "title": "GenesisProtocol"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#constructor", 
            "text": "Params:   _stakingToken   of type  address", 
            "title": "Constructor"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#executeproposalbytes32uint256", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _decision   of type  uint256", 
            "title": "ExecuteProposal(bytes32,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#newproposalbytes32uint256addressbytes32", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _numOfChoices   of type  uint256  _proposer   of type  address  _paramsHash   of type  bytes32", 
            "title": "NewProposal(bytes32,uint256,address,bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#newproposalbytes32", 
            "text": "Execution cost : No bound available  Params:   proposalId   of type  bytes32", 
            "title": "NewProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#ownershiptransferredaddressaddress", 
            "text": "Execution cost : No bound available  Params:   previousOwner   of type  address  newOwner   of type  address", 
            "title": "OwnershipTransferred(address,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#redeembytes32addressuint256", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _beneficiary   of type  address  _amount   of type  uint256", 
            "title": "Redeem(bytes32,address,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#redeemreputationbytes32addressint256", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _beneficiary   of type  address  _amount   of type  int256", 
            "title": "RedeemReputation(bytes32,address,int256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#stakebytes32addressuint256uint256", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _voter   of type  address  _vote   of type  uint256  _amount   of type  uint256", 
            "title": "Stake(bytes32,address,uint256,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#voteproposalbytes32addressuint256uint256", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _voter   of type  address  _vote   of type  uint256  _reputation   of type  uint256", 
            "title": "VoteProposal(bytes32,address,uint256,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#getredeemablereputationstakerbytes32address", 
            "text": "getRedeemableReputationStaker return the redeemable reputation which a staker is entitle to.   Execution cost : No bound available  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     _beneficiary   of type  address   the beneficiary .     Returns:   uint proposer redeem reputation amount.    output_0   of type  int256", 
            "title": "getRedeemableReputationStaker(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#hashedparameters", 
            "text": "Execution cost : less than 1338 gas  Attributes : constant  Returns:   output_0   of type  bytes32", 
            "title": "hashedParameters()"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#no", 
            "text": "Execution cost : less than 280 gas  Attributes : constant  Returns:   output_0   of type  uint256", 
            "title": "NO()"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#getredeemablereputationproposerbytes32", 
            "text": "getRedeemableReputationProposer return the redeemable reputation which a proposer is entitle to.   Execution cost : No bound available  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     Returns:   int proposer redeem reputation.    output_0   of type  int256", 
            "title": "getRedeemableReputationProposer(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#getredeemablereputationvoterbytes32address", 
            "text": "getRedeemableReputationVoter return the redeemable reputation which a voter is entitle to.   Execution cost : No bound available  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     _beneficiary   of type  address   the beneficiary .     Returns:   uint proposer redeem reputation amount.    output_0   of type  int256", 
            "title": "getRedeemableReputationVoter(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#executebytes32", 
            "text": "execute check if the proposal has been decided, and if so, execute the proposal   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the id of the proposal     Returns:   bool true - the proposal has been executed             false - otherwise.    output_0   of type  bool", 
            "title": "execute(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#getparametershashuint25612address", 
            "text": "hashParameters returns a hash of the given parameters   Execution cost : No bound available  Attributes : constant  Params:   _params   of type  uint256[12]  _governanceFormulasInterface   of type  address   Returns:   output_0   of type  bytes32", 
            "title": "getParametersHash(uint256[12],address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#getredeemabletokensvoterbytes32address", 
            "text": "getRedeemableTokensVoter return the redeemable amount which a voter is entitle to.   Execution cost : No bound available  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     _beneficiary   of type  address   the beneficiary .     Returns:   uint proposer redeem reputation amount.    output_0   of type  uint256", 
            "title": "getRedeemableTokensVoter(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#cancelproposalbytes32", 
            "text": "Cancel a proposal, only the owner can call this function and only if allowOwner flag is true.   Execution cost : less than 1485 gas  Params:    _proposalId   of type  bytes32   the proposal ID     Returns:   output_0   of type  bool", 
            "title": "cancelProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#yes", 
            "text": "Execution cost : less than 808 gas  Attributes : constant  Returns:   output_0   of type  uint256", 
            "title": "YES()"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#getredeemabletokensstakerbytes32address", 
            "text": "getRedeemableTokensStaker return the redeem amount which a certain staker is entitle to.   Execution cost : No bound available  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     _beneficiary   of type  address   the beneficiary .     Returns:   uint redeem amount .    output_0   of type  uint256", 
            "title": "getRedeemableTokensStaker(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#getnumberofchoicesbytes32", 
            "text": "getNumberOfChoices returns the number of choices possible in this proposal   Execution cost : less than 1020 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposals     Returns:   uint that contains number of choices    output_0   of type  uint256", 
            "title": "getNumberOfChoices(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#cancelvotebytes32", 
            "text": "Cancel the vote of the msg.sender: subtract the reputation amount from the votes and delete the voter from the proposal struct   Execution cost : less than 1678 gas  Params:    _proposalId   of type  bytes32   id of the proposal", 
            "title": "cancelVote(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#votestatusbytes32uint256", 
            "text": "voteStatus returns the reputation voted for a proposal for a specific voting choice.   Execution cost : less than 1189 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     _choice   of type  uint256   the index in the     Returns:   voted reputation for the given choice    output_0   of type  uint256", 
            "title": "voteStatus(bytes32,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#parametersbytes32", 
            "text": "Execution cost : less than 3496 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   preBoostedVoteRequiredPercentage   of type  uint256  preBoostedVotePeriodLimit   of type  uint256  boostedVotePeriodLimit   of type  uint256  thresholdConstA   of type  uint256  thresholdConstB   of type  uint256  governanceFormulasInterface   of type  address  minimumStakingFee   of type  uint256  quietEndingPeriod   of type  uint256  proposingRepRewardConstA   of type  uint256  proposingRepRewardConstB   of type  uint256  stakerFeeRatioForVoters   of type  uint256  votersReputationLossRatio   of type  uint256  votersGainRepRatioFromLostRep   of type  uint256", 
            "title": "parameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#orgboostedproposalscntaddress", 
            "text": "Execution cost : less than 1419 gas  Attributes : constant  Params:   param_0   of type  address   Returns:   output_0   of type  uint256", 
            "title": "orgBoostedProposalsCnt(address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#ownervotebytes32uint256address", 
            "text": "voting function with owner functionality (can vote on behalf of someone else)   Execution cost : less than 1550 gas  Params:    _proposalId   of type  bytes32   id of the proposal     param_1   of type  uint256   param_2   of type  address   Returns:   bool true - the proposal has been executed             false - otherwise.    output_0   of type  bool", 
            "title": "ownerVote(bytes32,uint256,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#isvotablebytes32", 
            "text": "isVotable check if the proposal is votable   Execution cost : less than 1848 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     Returns:   bool true or false    output_0   of type  bool", 
            "title": "isVotable(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#isabstainallow", 
            "text": "isAbstainAllow returns if the voting machine allow abstain (0)   Execution cost : less than 462 gas  Attributes : constant  Returns:   bool true or false    output_0   of type  bool", 
            "title": "isAbstainAllow()"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#owner", 
            "text": "Execution cost : less than 1007 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "owner()"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#redeembytes32address", 
            "text": "redeem a reward for a successful stake, vote or proposing. The function use a beneficiary address as a parameter (and not msg.sender) to enable users to redeem on behalf of someone else.   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the ID of the proposal     _beneficiary   of type  address    the beneficiary address      Returns:   bool true or false.    output_0   of type  bool", 
            "title": "redeem(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#setparametersuint25612address", 
            "text": "hash the parameters, save them if necessary, and return the hash value   Execution cost : No bound available  Params:    _params   of type  uint256[12]   a parameters array   _params[0] - _preBoostedVoteRequiredPercentage,   _params[1] - _preBoostedVotePeriodLimit, //the time limit for a proposal to be in an absolute voting mode.   _params[2] -_boostedVotePeriodLimit, //the time limit for a proposal to be in an relative voting mode.   _params[3] -_thresholdConstA,   _params[4] -_thresholdConstB,   _params[5] -_minimumStakingFee,   _params[6] -_quietEndingPeriod,   _params[7] -_proposingRepRewardConstA,   _params[8] -_proposingRepRewardConstB,   _params[9] -_stakerFeeRatioForVoters,   _params[10] -_votersReputationLossRatio,   _params[11] -_votersGainRepRatioFromLostRep     _governanceFormulasInterface   of type  address   override the default formulas.     Returns:   output_0   of type  bytes32", 
            "title": "setParameters(uint256[12],address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#proposalavatarbytes32", 
            "text": "proposalAvatar return the avatar for a given proposal   Execution cost : less than 1541 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     Returns:   uint total reputation supply    output_0   of type  address", 
            "title": "proposalAvatar(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#scorethresholdparamsaddress", 
            "text": "scoreThresholdParams return the score threshold params for a given organization.   Execution cost : No bound available  Attributes : constant  Params:    _avatar   of type  address   the organization's avatar     Returns:   uint thresholdConstAuint thresholdConstB    output_0   of type  uint256  output_1   of type  uint256", 
            "title": "scoreThresholdParams(address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#scorebytes32", 
            "text": "score return the proposal score   Execution cost : No bound available  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     Returns:   uint proposal score.    output_0   of type  int256", 
            "title": "score(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#proposalsbytes32", 
            "text": "Execution cost : less than 4066 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   avatar   of type  address  numOfChoices   of type  uint256  executable   of type  address  totalVotes   of type  uint256  totalStakes   of type  uint256  votersStakes   of type  uint256  lostReputation   of type  uint256  submittedTime   of type  uint256  boostedPhaseTime   of type  uint256  state   of type  uint8  winningVote   of type  uint256  proposer   of type  address  boostedVotePeriodLimit   of type  uint256", 
            "title": "proposals(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#proposeuint256bytes32addressaddressaddress", 
            "text": "register a new proposal with the given parameters. Every proposal has a unique ID which is being generated by calculating keccak256 of a incremented counter.   Execution cost : less than 211315 gas  Params:    _numOfChoices   of type  uint256   number of voting choices     _paramsHash   of type  bytes32   defined the parameters of the voting machine used for this proposal     _avatar   of type  address   an address to be sent as the payload to the _executable contract.     _executable   of type  address   This contract will be executed when vote is over.     _proposer   of type  address   address     Returns:   proposal's id.    output_0   of type  bytes32", 
            "title": "propose(uint256,bytes32,address,address,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#proposalstatusbytes32", 
            "text": "proposalStatus return the total votes and stakes for a given proposal   Execution cost : less than 1352 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     Returns:   uint totalVotesuint totalStakesuint voterStakes    output_0   of type  uint256  output_1   of type  uint256  output_2   of type  uint256", 
            "title": "proposalStatus(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#stakebytes32uint256uint256", 
            "text": "staking function   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   id of the proposal     _vote   of type  uint256   NO(2) or YES(1).     _amount   of type  uint256   the betting amount     Returns:   bool true - the proposal has been executed             false - otherwise.    output_0   of type  bool", 
            "title": "stake(bytes32,uint256,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#shouldboostbytes32", 
            "text": "shouldBoost check if a proposal should be shifted to boosted phase.   Execution cost : No bound available  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     Returns:   bool true or false.    output_0   of type  bool", 
            "title": "shouldBoost(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#updateparametersbytes32", 
            "text": "Execution cost : less than 20594 gas  Params:   _hashedParameters   of type  bytes32", 
            "title": "updateParameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#statebytes32", 
            "text": "voteStake return the state for a given proposal   Execution cost : less than 826 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     Returns:   ProposalState proposal state    output_0   of type  uint8", 
            "title": "state(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#stakingtoken", 
            "text": "Execution cost : less than 919 gas  Attributes : constant  Returns:   output_0   of type  address", 
            "title": "stakingToken()"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#stakerbytes32address", 
            "text": "staker return the vote and stake amount for a given proposal and staker   Execution cost : less than 1386 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     _staker   of type  address   staker address     Returns:   uint voteuint amount    output_0   of type  uint256  output_1   of type  uint256", 
            "title": "staker(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#thresholdaddress", 
            "text": "threshold return the organization's score threshold which required by a proposal to shift to boosted state. This threshold is dynamically set and it depend on the number of boosted proposal.   Execution cost : No bound available  Attributes : constant  Params:    _avatar   of type  address   the organization avatar     Returns:   int thresholdConstA.    output_0   of type  int256", 
            "title": "threshold(address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#totalreputationsupplybytes32", 
            "text": "totalReputationSupply return the total reputation supply for a given proposal   Execution cost : No bound available  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     Returns:   uint total reputation supply    output_0   of type  uint256", 
            "title": "totalReputationSupply(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#transferownershipaddress", 
            "text": "Allows the current owner to transfer control of the contract to a newOwner.   Execution cost : less than 23734 gas  Params:    newOwner   of type  address   The address to transfer ownership to.", 
            "title": "transferOwnership(address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#votebytes32uint256", 
            "text": "voting function   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   id of the proposal     _vote   of type  uint256   NO(2) or YES(1).     Returns:   bool true - the proposal has been executed             false - otherwise.    output_0   of type  bool", 
            "title": "vote(bytes32,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#voteinfobytes32address", 
            "text": "voteInfo returns the vote and the amount of reputation of the user committed to this proposal   Execution cost : less than 1511 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     _voter   of type  address   the address of the voter     Returns:   uint vote - the voters vote       uint reputation - amount of reputation committed by _voter to _proposalId    output_0   of type  uint256  output_1   of type  uint256", 
            "title": "voteInfo(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#votestakebytes32uint256", 
            "text": "voteStake return the amount stakes for a given proposal and vote   Execution cost : less than 903 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     _vote   of type  uint256   vote number     Returns:   uint stake amount    output_0   of type  uint256", 
            "title": "voteStake(bytes32,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#votewithspecifiedamountsbytes32uint256uint256uint256", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _vote   of type  uint256  _rep   of type  uint256  param_3   of type  uint256   Returns:   output_0   of type  bool", 
            "title": "voteWithSpecifiedAmounts(bytes32,uint256,uint256,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocol/#winningvotebytes32", 
            "text": "voteStake return the winningVote for a given proposal   Execution cost : less than 712 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     Returns:   uint winningVote    output_0   of type  uint256   Back to the top \u2191", 
            "title": "winningVote(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocolFormulasInterface/", 
            "text": "GenesisProtocolFormulasInterface\n\n\nsee the source\n\n\nExecution cost\n: No bound available\n\n\nDeployment cost\n: No bound available\n\n\nCombined cost\n: No bound available\n\n\nMethods\n\n\ngetRedeemableReputationProposer(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nint256\n\n\n\n\n\n\ngetRedeemableTokensStaker(bytes32,address)\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_staker\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\ngetRedeemableTokensVoter(bytes32,address)\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_beneficiary\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nscore(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nint256\n\n\n\n\n\n\nshouldBoost(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nthreshold(address)\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nint256\n\n\n\n\nBack to the top \u2191", 
            "title": "GenesisProtocolFormulasInterface"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocolFormulasInterface/#genesisprotocolformulasinterface", 
            "text": "see the source  Execution cost : No bound available  Deployment cost : No bound available  Combined cost : No bound available", 
            "title": "GenesisProtocolFormulasInterface"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocolFormulasInterface/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocolFormulasInterface/#getredeemablereputationproposerbytes32", 
            "text": "Execution cost : No bound available  Attributes : constant  Params:   _proposalId   of type  bytes32   Returns:   output_0   of type  int256", 
            "title": "getRedeemableReputationProposer(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocolFormulasInterface/#getredeemabletokensstakerbytes32address", 
            "text": "Execution cost : No bound available  Attributes : constant  Params:   _proposalId   of type  bytes32  _staker   of type  address   Returns:   output_0   of type  uint256", 
            "title": "getRedeemableTokensStaker(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocolFormulasInterface/#getredeemabletokensvoterbytes32address", 
            "text": "Execution cost : No bound available  Attributes : constant  Params:   _proposalId   of type  bytes32  _beneficiary   of type  address   Returns:   output_0   of type  uint256", 
            "title": "getRedeemableTokensVoter(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocolFormulasInterface/#scorebytes32", 
            "text": "Execution cost : No bound available  Attributes : constant  Params:   _proposalId   of type  bytes32   Returns:   output_0   of type  int256", 
            "title": "score(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocolFormulasInterface/#shouldboostbytes32", 
            "text": "Execution cost : No bound available  Attributes : constant  Params:   _proposalId   of type  bytes32   Returns:   output_0   of type  bool", 
            "title": "shouldBoost(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/GenesisProtocolFormulasInterface/#thresholdaddress", 
            "text": "Execution cost : No bound available  Attributes : constant  Params:   _avatar   of type  address   Returns:   output_0   of type  int256   Back to the top \u2191", 
            "title": "threshold(address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/IntVoteInterface/", 
            "text": "IntVoteInterface\n\n\nsee the source\n\n\nExecution cost\n: No bound available\n\n\nDeployment cost\n: No bound available\n\n\nCombined cost\n: No bound available\n\n\nMethods\n\n\nvote(bytes32,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_vote\n \nof type \nuint256\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nexecute(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ncancelProposal(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ncancelVote(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\n\n\ngetNumberOfChoices(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nisAbstainAllow()\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nisVotable(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nownerVote(bytes32,uint256,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_vote\n \nof type \nuint256\n\n\n_voter\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\npropose(uint256,bytes32,address,address,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_numOfChoices\n \nof type \nuint256\n\n\n_proposalParameters\n \nof type \nbytes32\n\n\n_avatar\n \nof type \naddress\n\n\n_executable\n \nof type \naddress\n\n\n_proposer\n \nof type \naddress\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nvoteStatus(bytes32,uint256)\n\n\nExecution cost\n: No bound available\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_choice\n \nof type \nuint256\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nvoteWithSpecifiedAmounts(bytes32,uint256,uint256,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_vote\n \nof type \nuint256\n\n\n_rep\n \nof type \nuint256\n\n\n_token\n \nof type \nuint256\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\nBack to the top \u2191", 
            "title": "IntVoteInterface"
        }, 
        {
            "location": "/generated_docs/VotingMachines/IntVoteInterface/#intvoteinterface", 
            "text": "see the source  Execution cost : No bound available  Deployment cost : No bound available  Combined cost : No bound available", 
            "title": "IntVoteInterface"
        }, 
        {
            "location": "/generated_docs/VotingMachines/IntVoteInterface/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/VotingMachines/IntVoteInterface/#votebytes32uint256", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _vote   of type  uint256   Returns:   output_0   of type  bool", 
            "title": "vote(bytes32,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/IntVoteInterface/#executebytes32", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32   Returns:   output_0   of type  bool", 
            "title": "execute(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/IntVoteInterface/#cancelproposalbytes32", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32   Returns:   output_0   of type  bool", 
            "title": "cancelProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/IntVoteInterface/#cancelvotebytes32", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32", 
            "title": "cancelVote(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/IntVoteInterface/#getnumberofchoicesbytes32", 
            "text": "Execution cost : No bound available  Attributes : constant  Params:   _proposalId   of type  bytes32   Returns:   output_0   of type  uint256", 
            "title": "getNumberOfChoices(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/IntVoteInterface/#isabstainallow", 
            "text": "Execution cost : No bound available  Attributes : constant  Returns:   output_0   of type  bool", 
            "title": "isAbstainAllow()"
        }, 
        {
            "location": "/generated_docs/VotingMachines/IntVoteInterface/#isvotablebytes32", 
            "text": "Execution cost : No bound available  Attributes : constant  Params:   _proposalId   of type  bytes32   Returns:   output_0   of type  bool", 
            "title": "isVotable(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/IntVoteInterface/#ownervotebytes32uint256address", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _vote   of type  uint256  _voter   of type  address   Returns:   output_0   of type  bool", 
            "title": "ownerVote(bytes32,uint256,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/IntVoteInterface/#proposeuint256bytes32addressaddressaddress", 
            "text": "Execution cost : No bound available  Params:   _numOfChoices   of type  uint256  _proposalParameters   of type  bytes32  _avatar   of type  address  _executable   of type  address  _proposer   of type  address   Returns:   output_0   of type  bytes32", 
            "title": "propose(uint256,bytes32,address,address,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/IntVoteInterface/#votestatusbytes32uint256", 
            "text": "Execution cost : No bound available  Attributes : constant  Params:   _proposalId   of type  bytes32  _choice   of type  uint256   Returns:   output_0   of type  uint256", 
            "title": "voteStatus(bytes32,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/IntVoteInterface/#votewithspecifiedamountsbytes32uint256uint256uint256", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _vote   of type  uint256  _rep   of type  uint256  _token   of type  uint256   Returns:   output_0   of type  bool   Back to the top \u2191", 
            "title": "voteWithSpecifiedAmounts(bytes32,uint256,uint256,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/", 
            "text": "QuorumVote\n\n\nsee the source\n\n\nExecution cost\n: less than 885 gas\n\n\nDeployment cost\n: less than 851600 gas\n\n\nCombined cost\n: less than 852485 gas\n\n\nEvents\n\n\nCancelProposal(bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\n\n\nCancelVoting(bytes32,address)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_voter\n \nof type \naddress\n\n\n\n\n\n\nExecuteProposal(bytes32,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_decision\n \nof type \nuint256\n\n\n\n\n\n\nNewProposal(bytes32,uint256,address,bytes32)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_numOfChoices\n \nof type \nuint256\n\n\n_proposer\n \nof type \naddress\n\n\n_paramsHash\n \nof type \nbytes32\n\n\n\n\n\n\nVoteProposal(bytes32,address,uint256,uint256,bool)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_voter\n \nof type \naddress\n\n\n_vote\n \nof type \nuint256\n\n\n_reputation\n \nof type \nuint256\n\n\n_isOwnerVote\n \nof type \nbool\n\n\n\n\nMethods\n\n\ncancelVote(bytes32)\n\n\n\n\nCancel the vote of the msg.sender: subtract the reputation amount from the votes and delete the voter from the proposal struct\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nid of the proposal\n\n\n\n\n\n\n\n\n\n\nparameters(bytes32)\n\n\nExecution cost\n: less than 1169 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\nreputationSystem\n \nof type \naddress\n\n\nprecReq\n \nof type \nuint256\n\n\nallowOwner\n \nof type \nbool\n\n\n\n\n\n\nexecute(bytes32)\n\n\n\n\ncheck if the proposal has been decided, and if so, execute the proposal\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe id of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nisVotable(bytes32)\n\n\n\n\nisVotable check if the proposal is votable\n\n\n\n\nExecution cost\n: less than 812 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool true or false\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ngetNumberOfChoices(bytes32)\n\n\n\n\ngetNumberOfChoices returns the number of choices possible in this proposal\n\n\n\n\nExecution cost\n: less than 734 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint that contains number of choices\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nownerVote(bytes32,uint256,address)\n\n\n\n\nvoting function with owner functionality (can vote on behalf of someone else)\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nid of the proposal\n\n\n\n\n\n\n\n\n_vote\n \nof type \nuint256\n\n\n\n\na value between 0 to and the proposal number of choices.\n\n\n\n\n\n\n\n\n_voter\n \nof type \naddress\n\n\n\n\nwill be voted with that voter's address\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool true - the proposal has been executed             false - otherwise.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ncancelProposal(bytes32)\n\n\n\n\nCancel a proposal, only the owner can call this function and only if allowOwner flag is true.\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe proposal ID\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nisAbstainAllow()\n\n\n\n\nisAbstainAllow returns if the voting machine allow abstain (0)\n\n\n\n\nExecution cost\n: less than 396 gas\n\n\nAttributes\n: constant\n\n\nReturns:\n\n\n\n\nbool true or false\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\ngetParametersHash(address,uint256,bool)\n\n\n\n\nhashParameters returns a hash of the given parameters\n\n\n\n\nExecution cost\n: less than 603 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n_reputationSystem\n \nof type \naddress\n\n\n_precReq\n \nof type \nuint256\n\n\n_allowOwner\n \nof type \nbool\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nproposals(bytes32)\n\n\nExecution cost\n: less than 2210 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\nparam_0\n \nof type \nbytes32\n\n\n\n\nReturns:\n\n\n\n\nowner\n \nof type \naddress\n\n\navatar\n \nof type \naddress\n\n\nnumOfChoices\n \nof type \nuint256\n\n\nexecutable\n \nof type \naddress\n\n\nparamsHash\n \nof type \nbytes32\n\n\ntotalVotes\n \nof type \nuint256\n\n\nopen\n \nof type \nbool\n\n\n\n\n\n\npropose(uint256,bytes32,address,address,address)\n\n\n\n\nregister a new proposal with the given parameters. Every proposal has a unique ID which is being generated by calculating keccak256 of a incremented counter.\n\n\n\n\nExecution cost\n: less than 150314 gas\n\n\nParams:\n\n\n\n\n\n\n_numOfChoices\n \nof type \nuint256\n\n\n\n\nnumber of voting choices\n\n\n\n\n\n\n\n\n_paramsHash\n \nof type \nbytes32\n\n\n\n\ndefined the parameters of the voting machine used for this proposal\n\n\n\n\n\n\n\n\n_avatar\n \nof type \naddress\n\n\n\n\nan address to be sent as the payload to the _executable contract.\n\n\n\n\n\n\n\n\n_executable\n \nof type \naddress\n\n\n\n\nThis contract will be executed when vote is over.\n\n\n\n\n\n\n\n\nparam_4\n \nof type \naddress\n\n\n\n\n\n\nReturns:\n\n\n\n\nproposal's id.\n\n\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nsetParameters(address,uint256,bool)\n\n\n\n\nhash the parameters, save them if necessary, and return the hash value\n\n\n\n\nExecution cost\n: less than 61851 gas\n\n\nParams:\n\n\n\n\n_reputationSystem\n \nof type \naddress\n\n\n_precReq\n \nof type \nuint256\n\n\n_allowOwner\n \nof type \nbool\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbytes32\n\n\n\n\n\n\nvote(bytes32,uint256)\n\n\n\n\nvoting function\n\n\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nid of the proposal\n\n\n\n\n\n\n\n\n_vote\n \nof type \nuint256\n\n\n\n\na value between 0 to and the proposal number of choices.\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nbool true - the proposal has been executed             false - otherwise.\n\n\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\n\n\nvoteInfo(bytes32,address)\n\n\n\n\nvoteInfo returns the vote and the amount of reputation of the user committed to this proposal\n\n\n\n\nExecution cost\n: less than 1230 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\n_voter\n \nof type \naddress\n\n\n\n\nthe address of the voter\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nuint vote - the voters vote       uint reputation - amount of reputation committed by _voter to _proposalId\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\noutput_1\n \nof type \nuint256\n\n\n\n\n\n\nvoteStatus(bytes32,uint256)\n\n\n\n\nvoteStatus returns the reputation voted for a proposal for a specific voting choice.\n\n\n\n\nExecution cost\n: less than 859 gas\n\n\nAttributes\n: constant\n\n\nParams:\n\n\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n\n\nthe ID of the proposal\n\n\n\n\n\n\n\n\n_choice\n \nof type \nuint256\n\n\n\n\nthe index in the\n\n\n\n\n\n\n\n\nReturns:\n\n\n\n\nvoted reputation for the given choice\n\n\n\n\n\n\noutput_0\n \nof type \nuint256\n\n\n\n\n\n\nvoteWithSpecifiedAmounts(bytes32,uint256,uint256,uint256)\n\n\nExecution cost\n: No bound available\n\n\nParams:\n\n\n\n\n_proposalId\n \nof type \nbytes32\n\n\n_vote\n \nof type \nuint256\n\n\n_rep\n \nof type \nuint256\n\n\nparam_3\n \nof type \nuint256\n\n\n\n\nReturns:\n\n\n\n\noutput_0\n \nof type \nbool\n\n\n\n\nBack to the top \u2191", 
            "title": "QuorumVote"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#quorumvote", 
            "text": "see the source  Execution cost : less than 885 gas  Deployment cost : less than 851600 gas  Combined cost : less than 852485 gas", 
            "title": "QuorumVote"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#events", 
            "text": "", 
            "title": "Events"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#cancelproposalbytes32", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32", 
            "title": "CancelProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#cancelvotingbytes32address", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _voter   of type  address", 
            "title": "CancelVoting(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#executeproposalbytes32uint256", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _decision   of type  uint256", 
            "title": "ExecuteProposal(bytes32,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#newproposalbytes32uint256addressbytes32", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _numOfChoices   of type  uint256  _proposer   of type  address  _paramsHash   of type  bytes32", 
            "title": "NewProposal(bytes32,uint256,address,bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#voteproposalbytes32addressuint256uint256bool", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _voter   of type  address  _vote   of type  uint256  _reputation   of type  uint256  _isOwnerVote   of type  bool", 
            "title": "VoteProposal(bytes32,address,uint256,uint256,bool)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#methods", 
            "text": "", 
            "title": "Methods"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#cancelvotebytes32", 
            "text": "Cancel the vote of the msg.sender: subtract the reputation amount from the votes and delete the voter from the proposal struct   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   id of the proposal", 
            "title": "cancelVote(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#parametersbytes32", 
            "text": "Execution cost : less than 1169 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   reputationSystem   of type  address  precReq   of type  uint256  allowOwner   of type  bool", 
            "title": "parameters(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#executebytes32", 
            "text": "check if the proposal has been decided, and if so, execute the proposal   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the id of the proposal     Returns:   output_0   of type  bool", 
            "title": "execute(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#isvotablebytes32", 
            "text": "isVotable check if the proposal is votable   Execution cost : less than 812 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     Returns:   bool true or false    output_0   of type  bool", 
            "title": "isVotable(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#getnumberofchoicesbytes32", 
            "text": "getNumberOfChoices returns the number of choices possible in this proposal   Execution cost : less than 734 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     Returns:   uint that contains number of choices    output_0   of type  uint256", 
            "title": "getNumberOfChoices(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#ownervotebytes32uint256address", 
            "text": "voting function with owner functionality (can vote on behalf of someone else)   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   id of the proposal     _vote   of type  uint256   a value between 0 to and the proposal number of choices.     _voter   of type  address   will be voted with that voter's address     Returns:   bool true - the proposal has been executed             false - otherwise.    output_0   of type  bool", 
            "title": "ownerVote(bytes32,uint256,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#cancelproposalbytes32_1", 
            "text": "Cancel a proposal, only the owner can call this function and only if allowOwner flag is true.   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   the proposal ID     Returns:   output_0   of type  bool", 
            "title": "cancelProposal(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#isabstainallow", 
            "text": "isAbstainAllow returns if the voting machine allow abstain (0)   Execution cost : less than 396 gas  Attributes : constant  Returns:   bool true or false    output_0   of type  bool", 
            "title": "isAbstainAllow()"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#getparametershashaddressuint256bool", 
            "text": "hashParameters returns a hash of the given parameters   Execution cost : less than 603 gas  Attributes : constant  Params:   _reputationSystem   of type  address  _precReq   of type  uint256  _allowOwner   of type  bool   Returns:   output_0   of type  bytes32", 
            "title": "getParametersHash(address,uint256,bool)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#proposalsbytes32", 
            "text": "Execution cost : less than 2210 gas  Attributes : constant  Params:   param_0   of type  bytes32   Returns:   owner   of type  address  avatar   of type  address  numOfChoices   of type  uint256  executable   of type  address  paramsHash   of type  bytes32  totalVotes   of type  uint256  open   of type  bool", 
            "title": "proposals(bytes32)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#proposeuint256bytes32addressaddressaddress", 
            "text": "register a new proposal with the given parameters. Every proposal has a unique ID which is being generated by calculating keccak256 of a incremented counter.   Execution cost : less than 150314 gas  Params:    _numOfChoices   of type  uint256   number of voting choices     _paramsHash   of type  bytes32   defined the parameters of the voting machine used for this proposal     _avatar   of type  address   an address to be sent as the payload to the _executable contract.     _executable   of type  address   This contract will be executed when vote is over.     param_4   of type  address    Returns:   proposal's id.    output_0   of type  bytes32", 
            "title": "propose(uint256,bytes32,address,address,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#setparametersaddressuint256bool", 
            "text": "hash the parameters, save them if necessary, and return the hash value   Execution cost : less than 61851 gas  Params:   _reputationSystem   of type  address  _precReq   of type  uint256  _allowOwner   of type  bool   Returns:   output_0   of type  bytes32", 
            "title": "setParameters(address,uint256,bool)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#votebytes32uint256", 
            "text": "voting function   Execution cost : No bound available  Params:    _proposalId   of type  bytes32   id of the proposal     _vote   of type  uint256   a value between 0 to and the proposal number of choices.     Returns:   bool true - the proposal has been executed             false - otherwise.    output_0   of type  bool", 
            "title": "vote(bytes32,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#voteinfobytes32address", 
            "text": "voteInfo returns the vote and the amount of reputation of the user committed to this proposal   Execution cost : less than 1230 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     _voter   of type  address   the address of the voter     Returns:   uint vote - the voters vote       uint reputation - amount of reputation committed by _voter to _proposalId    output_0   of type  uint256  output_1   of type  uint256", 
            "title": "voteInfo(bytes32,address)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#votestatusbytes32uint256", 
            "text": "voteStatus returns the reputation voted for a proposal for a specific voting choice.   Execution cost : less than 859 gas  Attributes : constant  Params:    _proposalId   of type  bytes32   the ID of the proposal     _choice   of type  uint256   the index in the     Returns:   voted reputation for the given choice    output_0   of type  uint256", 
            "title": "voteStatus(bytes32,uint256)"
        }, 
        {
            "location": "/generated_docs/VotingMachines/QuorumVote/#votewithspecifiedamountsbytes32uint256uint256uint256", 
            "text": "Execution cost : No bound available  Params:   _proposalId   of type  bytes32  _vote   of type  uint256  _rep   of type  uint256  param_3   of type  uint256   Returns:   output_0   of type  bool   Back to the top \u2191", 
            "title": "voteWithSpecifiedAmounts(bytes32,uint256,uint256,uint256)"
        }
    ]
}